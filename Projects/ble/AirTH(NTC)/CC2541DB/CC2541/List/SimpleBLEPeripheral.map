Warning[w6]: Type conflict for external/entry "memcpy", in module simpleGATTprofile against external/entry in module ?memcpy; prototyped function vs K&R function
  /* In module simpleGATTprofile: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant memcpy)();
  /* In module ?memcpy: */
  /* Function, args 3, attr 0 */
  void * (__xdata_reentrant memcpy)(void *,
                                    void const *,
                                    size_t);
    typedef unsigned int size_t;
################################################################################
#                                                                              #
#      IAR Universal Linker V5.4.1.30                                          #
#                                                                              #
#           Link time     =  10/Dec/2015  18:29:13                             #
#           Target CPU    =  x51                                               #
#           List file     =  "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\List #
#                            \SimpleBLEPeripheral.map"                         #
#           Output file 1 =  "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Exe\ #
#                            SimpleBLEPeripheral.hex"                          #
#                            Format: intel-extended                            #
#           Output file 2 =  "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Exe\ #
#                            SimpleBLEPeripheral.d51"                          #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-ID:\APP\IAR Systems\Embedded Workbench 6.4\8051 #
#                            \CONFIG\"                                         #
#                            -D_NR_OF_BANKS=0x07 -D_CODEBANK_END=0xFFFF        #
#                            -D_CODEBANK_START=0x8000 -D?CBANK_MASK=0xFF       #
#                            -D?CBANK=0x9F                                     #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL.r51"                                         #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL_ClockBLE.r51"                                #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL_Memory.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL_PwrMgr.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL_SimpleBLEPeripheral.r51"                     #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OSAL_Timers.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            OnBoard.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            SimpleBLEPeripheral_Main.r51"                     #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            battservice.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            devinfoservice.r51"                               #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            gap.r51"                                          #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            gapbondmgr.r51"                                   #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            gatt_uuid.r51"                                    #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_adc.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_aes.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_crc.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_dma.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_drivers.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_flash.r51"                                    #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_key.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_lcd.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_led.r51"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_sleep.r51"                                    #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_startup.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_timer.r51"                                    #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            hal_uart.r51"                                     #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            npi.r51"                                          #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            osal_bufmgr.r51"                                  #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            osal_cbtimer.r51"                                 #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            osal_snv.r51"                                     #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            peripheral.r51"                                   #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            simpleBLEPeripheral.r51"                          #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\ #
#                            simpleGATTprofile.r51"                            #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\Libraries\CC2541DB\bin\CC2541_B #
#                            LE_peri.lib"                                      #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\Libraries\Common\bin\CC254x_BLE #
#                            _HCI_TL_None.lib"                                 #
#                            -o                                                #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Exe\ #
#                            SimpleBLEPeripheral.d51"                          #
#                            -l                                                #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\List #
#                            \SimpleBLEPeripheral.map"                         #
#                            -xmsnio -f                                        #
#                            "D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH( #
#                            NTC)\Projects\ble\AirTH(NTC)\CC2541DB\..\..\commo #
#                            n\cc2540\ti_51ew_cc2540b.xcl"                     #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0x1E00          #
#                            -D_PDATA_END=0x1EFF -D_IXDATA_START=0x0001        #
#                            -D_IXDATA_END=0x1EFF                              #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x7FFF -D_FIRST_BANK_ADDR=0x10000     #
#                            -D_NEAR_CODE_END=_CODE_END -D?REGISTER_BANK=0     #
#                            -D_REGISTER_BANK_START=0 -D?PBANK_NUMBER=0x1E     #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF                           #
#                            -Z(CODE)INTVEC=_CODE_START                        #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -D_SLEEP_CODE_SPACE_START=(_CODE_END-7)           #
#                            -D_SLEEP_CODE_SPACE_END=(_CODE_END)               #
#                            -Z(CODE)SLEEP_CODE=_SLEEP_CODE_SPACE_START-_SLEEP #
#                            _CODE_SPACE_END                                   #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_N,NEAR_COD #
#                            E=_CODE_START-_CODE_END                           #
#                            -P(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -P(CONST)XDATA_ROM_C=0x8000-0xFFFF                #
#                            -P(CODE)XDATA_ROM_C_FLASH=0x18000-0x1FFFF         #
#                            -QXDATA_ROM_C=XDATA_ROM_C_FLASH                   #
#                            -P(CODE)BANKED_CODE=_CODE_START-_CODE_END,[(_CODE #
#                            BANK_START+_FIRST_BANK_ADDR)-(_CODEBANK_END+_FIRS #
#                            T_BANK_ADDR)]*_NR_OF_BANKS+10000                  #
#                            -P(CODE)FAR_CODE_C,FAR_CODE_N,FAR_CODE=[_FAR_CODE #
#                            _START-_FAR_CODE_END]/10000                       #
#                            -P(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA_START-_PDATA_END  #
#                            -P(XDATA)PDATA_N=_PDATA_START-_PDATA_END          #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA_START-_IXDATA_ #
#                            END                                               #
#                            -P(XDATA)IXDATA_N=_IXDATA_START-_IXDATA_END       #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA_START-_XDATA_END  #
#                            -P(XDATA)XDATA_N=_XDATA_START-_XDATA_END          #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA_START #
#                            -_FAR_DATA_END]/10000                             #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*_FAR_DATA_NR_OF_BANKS+10000                     #
#                            -Z(XDATA)HUGE_Z,HUGE_I=_FAR_DATA_START-_FAR_DATA_ #
#                            END                                               #
#                            -P(XDATA)HUGE_N=_FAR_DATA_START-_FAR_DATA_END     #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BLENV_ADDRESS_SPACE_START=0x7E800        #
#                            -D_BLENV_ADDRESS_SPACE_END=0x7F7FF                #
#                            -Z(CODE)BLENV_ADDRESS_SPACE=_BLENV_ADDRESS_SPACE_ #
#                            START-_BLENV_ADDRESS_SPACE_END                    #
#                            -D_BANK0_START=0x00000 -D_BANK0_END=0x07FFF       #
#                            -D_BANK1_START=0x18000 -D_BANK1_END=0x1FFFF       #
#                            -D_BANK2_START=0x28000 -D_BANK2_END=0x2FFFF       #
#                            -D_BANK3_START=0x38000 -D_BANK3_END=0x3FFFF       #
#                            -D_BANK4_START=0x48000 -D_BANK4_END=0x4FFFF       #
#                            -D_BANK5_START=0x58000 -D_BANK5_END=0x5FFFF       #
#                            -D_BANK6_START=0x68000 -D_BANK6_END=0x6FFFF       #
#                            -D_BANK7_START=0x78000                            #
#                            -D_BANK7_END=(_BLENV_ADDRESS_SPACE_START-1)       #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i                                           #
#                            -D_FLASH_LOCK_BITS_START=((_NR_OF_BANKS*_FIRST_BA #
#                            NK_ADDR)+0xFFF0)                                  #
#                            -D_FLASH_LOCK_BITS_END=((_NR_OF_BANKS*_FIRST_BANK #
#                            _ADDR)+0xFFFF)                                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=10 -D?PBANK=0x93       #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read -rt                 #
#                            "-Ointel-extended=D:\APP\Texas Instruments\BLE-CC #
#                            254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2 #
#                            541DB\CC2541\Exe\SimpleBLEPeripheral.hex"         #
#                            -s __program_start                                #
#                            "D:\APP\IAR Systems\Embedded Workbench 6.4\8051\L #
#                            IB\CLIB\cl-pli-blxd-1e16x01.r51"                  #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x00                          #
#                            -D_XDATA_STACK_SIZE=0x280                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF                          #
#                                                                              #
#                           Copyright (C) 1987-2012 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000011D  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = CLib
  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000280 
           _PDATA_STACK_SIZE       00000000 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C0 
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000010 
           _FLASH_LOCK_BITS_END    0003FFFF 
           _FLASH_LOCK_BITS_START
                                   0003FFF0 
           _BANK7_END              0003E7FF 
           _BANK7_START            00038000 
           _BANK6_END              00037FFF 
           _BANK6_START            00030000 
           _BANK5_END              0002FFFF 
           _BANK5_START            00028000 
           _BANK4_END              00027FFF 
           _BANK4_START            00020000 
           _BANK3_END              0001FFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00008000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           _BLENV_ADDRESS_SPACE_END
                                   0003F7FF 
           _BLENV_ADDRESS_SPACE_START
                                   0003E800 
           _SLEEP_CODE_SPACE_END   00007FFF 
           _SLEEP_CODE_SPACE_START
                                   00007FF8 
           _FAR_CODE_END           00007FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK_NUMBER           0000001E 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _FIRST_BANK_ADDR        00010000 
           _CODE_END               00007FFF 
           _CODE_START             00000000 
           _XDATA_END              00001EFF 
           _XDATA_START            00000001 
           _IXDATA_END             00001EFF 
           _IXDATA_START           00000001 
           _PDATA_END              00001EFF 
           _PDATA_START            00001E00 
           _IDATA_END              000000FF 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?CBANK_MASK             000000FF 
           _CODEBANK_START         00008000 
           _CODEBANK_END           0000FFFF 
           _NR_OF_BANKS            00000007 
    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalFlashRead (hal_flash)
                                                   LL_Init (ll)
                                                   LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   halUart0RxIsr (hal_uart)
                                                   halUart0TxIsr (hal_uart)
                                                   halUart1TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDisableT2E1 (ll_timer2)
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llGetFullCTandST (ll_timer2)
                                                   llGetTimer2Capture (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llReplaceCtrlPkt (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartTimer2 (ll_timer2)
                                                   llStopTimer2 (ll_timer2)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   main (SimpleBLEPeripheral_Main)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_clear_event
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_int_disable
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_msg_enqueue
                                                   osal_msg_extract
                                                   osal_msg_push
                                                   osal_msg_receive
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_run_system
                                                   osal_set_event
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   port1Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000281 - 00000282 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_init_system
                                                   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_qHead              00000281 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C13 - 00000C13 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_run_system
           LOCAL                   ADDRESS         
           =====                   =======         
           activeTaskID            00000C13 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F6F - 00013F83 (0x15 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             00013F6F 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F84 - 00013FDB (0x58 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             00013F84 
               XSTACK = 00000010 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013FDC - 00014042 (0x67 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_revmemcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy          00013FDC 
               XSTACK = 00000002 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014043 - 0001408A (0x48 bytes), align: 0
  Segment part 22.            Intra module refs:   osal_memdup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup             00014043 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001408B - 00014100 (0x76 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_memcmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp             0001408B 
               XSTACK = 00000002 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014101 - 0001412F (0x2f bytes), align: 0
  Segment part 26.            Intra module refs:   osal_memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             00014101 
               calls direct
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint16       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014130 - 00014495 (0x366 bytes), align: 0
  Segment part 32.            Intra module refs:   _ltoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa                   00014130 
               calls direct
               XSTACK = 00000002 ( 00000038 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014496 - 000144A3 (0xe bytes), align: 0
  Segment part 34.            Intra module refs:   osal_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               00014496 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144A4 - 00014507 (0x64 bytes), align: 0
  Segment part 36.            Intra module refs:   osal_msg_allocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       000144A4 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014508 - 00014545 (0x3e bytes), align: 0
  Segment part 38.            Intra module refs:   osal_msg_deallocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     00014508 
               calls direct
               XSTACK = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014546 - 00014560 (0x1b bytes), align: 0
  Segment part 40.            Intra module refs:   osal_msg_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           00014546 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push_front     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014561 - 000145F8 (0x98 bytes), align: 0
  Segment part 44.            Intra module refs:   osal_msg_enqueue_push::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push   00014561 
               calls direct
               XSTACK = 00000009 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145F9 - 000146A1 (0xa9 bytes), align: 0
  Segment part 46.            Intra module refs:   osal_msg_receive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        000145F9 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_find           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000146A2 - 00014724 (0x83 bytes), align: 0
  Segment part 50.            Intra module refs:   osal_msg_enqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        000146A2 
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014725 - 0001475D (0x39 bytes), align: 0
  Segment part 54.            Intra module refs:   osal_msg_push::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push           00014725 
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001475E - 000147E8 (0x8b bytes), align: 0
  Segment part 56.            Intra module refs:   osal_msg_extract::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        0001475E 
               XSTACK = 00000010 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147E9 - 0001483F (0x57 bytes), align: 0
  Segment part 60.            Intra module refs:   osal_set_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          000147E9 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014840 - 0001489E (0x5f bytes), align: 0
  Segment part 62.            Intra module refs:   osal_clear_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event        00014840 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isr_register       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001489F - 000148B0 (0x12 bytes), align: 0
  Segment part 68.            Intra module refs:   osal_int_disable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        0001489F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148B1 - 000148D6 (0x26 bytes), align: 0
  Segment part 70.            Intra module refs:   osal_init_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        000148B1 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148D7 - 000148DF (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   osal_start_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       000148D7 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000148E0 - 00014A3E (0x15f bytes), align: 0
  Segment part 74.            Intra module refs:   osal_run_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system         000148E0 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 76. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint32      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint24      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A3F - 00014A75 (0x37 bytes), align: 0
  Segment part 80.            Intra module refs:   osal_isbufset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset           00014A3F 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self               
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014E - 0000014E (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   activeTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000398 - 0000039D (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00000398        GATTServApp_ReadAttr (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000039E - 000003A3 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_memdup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     0000039E        DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   Segment part 145 (att_util)
                                                   Segment part 22 (gap_linkmgr)
                                                   Segment part 29 (sm_mgr)
                                                   Segment part 34 (sm_rsppairing)
                                                   Segment part 47 (hci_event)
                                                   Segment part 48 (sm_rsppairing)
                                                   Segment part 52 (smp)
                                                   Segment part 58 (gapgattserver)
                                                   Segment part 58 (gatt_server)
                                                   Segment part 68 (gattservapp)
                                                   Segment part 68 (sm_pairing)
                                                   Segment part 73 (gap_peridevmgr)
                                                   Segment part 75 (gap_configmgr)
                                                   Segment part 75 (gap_linkmgr)
                                                   Segment part 77 (sm_mgr)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   linkDB_Add (linkdb)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003A4 - 000003A9 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_revmemcpy::?relay
                                   000003A4        Segment part 58 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003AA - 000003AF (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memdup::?relay     000003AA        GAP_Bond (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003B0 - 000003B5 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcmp::?relay     000003B0        ATT_CompareUUID (att_util)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 16 (sm_rsppairing)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003B6 - 000003BB (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     000003B6        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GGS_SetParameter (gapgattserver)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 88 (gap_linkmgr)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   linkDB_Remove (linkdb)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint16::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003BC - 000003C1 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           000003BC        ProcessPasscodeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003C2 - 000003C7 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       000003C2        smGenerateRandBuf (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003C8 - 000003CD (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate::?relay
                                   000003C8        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Segment part 135 (hci_event)
                                                   Segment part 145 (hci_event)
                                                   Segment part 60 (gap_linkmgr)
                                                   Segment part 69 (gap_configmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003CE - 000003D3 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate::?relay
                                   000003CE        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003D4 - 000003D9 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   000003D4        GAP_ProcessEvent (gap_task)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   SM_ProcessEvent (sm_task)
                                                   Segment part 143 (hci_event)
                                                   Segment part 30 (hci_event)
                                                   Segment part 87 (gap_peridevmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push_front::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003DA - 000003DF (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_send
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_msg_enqueue_push::?relay
                                   000003DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003E0 - 000003E5 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive::?relay
                                   000003E0        GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATT_ProcessEvent (gatt_task)
                                                   HCI_ProcessEvent (hci_tl)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_find::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003E6 - 000003EB (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue::?relay
                                   000003E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003EC - 000003F1 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   osal_msg_enqueue_push
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_push::?relay   000003EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003F2 - 000003F7 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract::?relay
                                   000003F2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003F8 - 000003FD (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   osal_msg_enqueue_push
                                                   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event::?relay
                                   000003F8        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   HalKeyConfig (hal_key)
                                                   HalUARTPollDMA (hal_uart)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000003FE - 00000403 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_clear_event::?relay
                                   000003FE        Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isr_register::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000404 - 00000409 (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable::?relay
                                   00000404        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000040A - 0000040F (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system::?relay
                                   0000040A        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000410 - 00000415 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system::?relay
                                   00000410        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000416 - 0000041B (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   osal_start_system
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_run_system::?relay
                                   00000416 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint32::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_buffer_uint24::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000041C - 00000421 (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_isbufset::?relay   0000041C        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindEmpty (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_self::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000877A - 0000877A (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008779 - 00008779 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008778 - 00008778 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008776 - 00008777 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   _ltoa
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008711 - 00008714 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         00008711 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008705 - 00008708 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      00008705 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000877A - 0000877A (0x1 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008779 - 00008779 (0x1 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008778 - 00008778 (0x1 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008776 - 00008777 (0x2 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008711 - 00008714 (0x4 bytes), align: 0
  Segment part 88.            Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008705 - 00008708 (0x4 bytes), align: 0
  Segment part 89.            Intra module refs:   __Constant_5f5e100

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL_ClockBLE.r51
  PROGRAM MODULE, NAME : OSAL_ClockBLE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000283 - 00000284 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           previousLLTimerTick     00000283 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000285 - 00000286 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           remUsTicks              00000285 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000287 - 00000288 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osalClockUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           timeMSec                00000287 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000289 - 0000028C (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   osalClockUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OSAL_timeSeconds        00000289 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBB7 - 0001BC95 (0xdf bytes), align: 0
  Segment part 13.            Intra module refs:   osalTimeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate          0001BBB7 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BC96 - 0001BCF1 (0x5c bytes), align: 0
  Segment part 15.            Intra module refs:   osalClockUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osalClockUpdate         0001BC96 
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_setClock           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_getClock           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCTime     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 23. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           monthLength             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCSecs     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_15180        
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3c           
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_e10          
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000422 - 00000427 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimeUpdate::?relay
                                   00000422        llScheduleTask (ll_scheduler)
                                                   osal_run_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000428 - 0000042D (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   osalTimeUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           osalClockUpdate::?relay
                                   00000428 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_setClock::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_getClock::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ConvertUTCSecs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 29. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00000E5D - 00001A5C (0xc00 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 00000E5D 
    -------------------------------------------------------------------------
<XDATA_N> 1 (was XDATA_N)
  Relative segment, address: XDATA 00001A5D - 00001A5E (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           ff1                     00001A5D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000028D - 0000028D (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
           osalMemStat             0000028D 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D63 - 00007DA7 (0x45 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           00007D63 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007DA8 - 00007DED (0x46 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           00007DA8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007DEE - 00007F80 (0x193 bytes), align: 0
  Segment part 14.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          00007DEE 
               XSTACK = 0000000C ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007F81 - 00007FC4 (0x44 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           00007F81 
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000042E - 00000433 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init::?relay   0000042E        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000434 - 00000439 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   00000434        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000043A - 0000043F (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc::?relay
                                   0000043A        GAP_Authenticate (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   SM_StartPairing (sm_pairing)
                                                   Segment part 102 (gap_linkmgr)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 75 (gap_peridevmgr)
                                                   Segment part 76 (gap_peridevmgr)
                                                   Segment part 85 (sm_mgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_memdup (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   smSavePairInfo (sm_pairing)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000440 - 00000445 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_kick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   00000440        GAP_Bond (gap_linkmgr)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 81 (gap_linkmgr)
                                                   Segment part 91 (gap_peridevmgr)
                                                   gapFreeAuthLink (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   generate_subkey (sm_mgr)
                                                   linkDB_Remove (linkdb)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_msg_deallocate (OSAL)
                                                   smFreePairingParams (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   sm_CMAC (sm_mgr)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000028E - 00000294 (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_device
                                                   osal_pwrmgr_init
                                                   osal_pwrmgr_powerconserve
                                                   osal_pwrmgr_task_state
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000028E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFD7 - 0001BFF1 (0x1b bytes), align: 0
  Segment part 8.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0001BFD7 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFF2 - 0001C001 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   osal_pwrmgr_device::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device      0001BFF2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C002 - 0001C058 (0x57 bytes), align: 0
  Segment part 12.            Intra module refs:   osal_pwrmgr_task_state::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state
                                   0001C002 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C059 - 0001C0A4 (0x4c bytes), align: 0
  Segment part 14.            Intra module refs:   osal_pwrmgr_powerconserve::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve
                                   0001C059 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000446 - 0000044B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init::?relay
                                   00000446        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000044C - 00000451 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_device::?relay
                                   0000044C        LL_ProcessEvent (ll)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000452 - 00000457 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_task_state::?relay
                                   00000452        Hal_ProcessEvent (hal_drivers)
                                                   LL_Init (ll)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000458 - 0000045D (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_powerconserve::?relay
                                   00000458        osal_run_system (OSAL)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL_SimpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : OSAL_SimpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085E3 - 000085FA (0x18 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                000085E3        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000877B - 0000877B (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                0000877B        osal_clear_event (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000295 - 00000296 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             00000295        osal_clear_event (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0A5 - 0001C147 (0xa3 bytes), align: 0
  Segment part 9.             Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0001C0A5 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000045E - 00000463 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   0000045E        osal_init_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085E3 - 000085FA (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   tasksArr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000877B - 0000877B (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   tasksCnt

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000297 - 00000298 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   osalAddTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
                                                   osal_next_timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerHead               00000297 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000299 - 0000029C (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           osal_systemClock        00000299 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018000 - 0001801F (0x20 bytes), align: 0
  Segment part 10.            Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           00018000 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018020 - 00018123 (0x104 bytes), align: 0
  Segment part 12.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            00018020 
               calls direct
               XSTACK = 00000016 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018124 - 0001816F (0x4c bytes), align: 0
  Segment part 14.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           00018124 
               XSTACK = 00000014 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018170 - 0001818F (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         00018170 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018190 - 000181E2 (0x53 bytes), align: 0
  Segment part 18.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      00018190 
               calls direct
               XSTACK = 00000004 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000181E3 - 0001824F (0x6d bytes), align: 0
  Segment part 20.            Intra module refs:   osal_start_reload_timer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer
                                   000181E3 
               calls direct
               XSTACK = 00000004 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018250 - 00018295 (0x46 bytes), align: 0
  Segment part 22.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       00018250 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018296 - 000182F9 (0x64 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      00018296 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_num_active   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000182FA - 000185AB (0x2b2 bytes), align: 0
  Segment part 28.            Intra module refs:   osalTimerUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate         000182FA 
               calls direct
               XSTACK = 00000014 ( 0000001A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_adjust_timers      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000185AC - 0001862C (0x81 bytes), align: 0
  Segment part 32.            Intra module refs:   osal_next_timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout       000185AC 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086F5 - 000086F8 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   gapIncSignCounter (gap_configmgr)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            000086F5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000464 - 00000469 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   00000464        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000046A - 0000046F (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_start_reload_timer
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    0000046A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000470 - 00000475 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer::?relay   00000470 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000476 - 0000047B (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer::?relay
                                   00000476 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000047C - 00000481 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx::?relay
                                   0000047C        GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ProcessEvent (ll)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000482 - 00000487 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_reload_timer::?relay
                                   00000482        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000488 - 0000048D (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx::?relay
                                   00000488        GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   HalKeyConfig (hal_key)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_SetAdvControl (ll)
                                                   Segment part 58 (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000048E - 00000493 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx::?relay
                                   0000048E        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_num_active::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000494 - 00000499 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerUpdate::?relay
                                   00000494        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_adjust_timers::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000049A - 0000049F (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_next_timeout::?relay
                                   0000049A        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086F5 - 000086F8 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   __Constant_1

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000029D - 0000029D (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardKeyIntEnable     0000029D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C14 - 00000C14 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   OnBoard_SendKeys
           LOCAL                   ADDRESS         
           =====                   =======         
           registeredKeysTaskID    00000C14 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFF2 - 0001B021 (0x30 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               0001AFF2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B022 - 0001B051 (0x30 bytes), align: 0
  Segment part 12.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0001B022 
               calls direct
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B052 - 0001B114 (0xc3 bytes), align: 0
  Segment part 14.            Intra module refs:   _itoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   0001B052 
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B115 - 0001B16E (0x5a bytes), align: 0
  Segment part 18.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0001B115 
               calls direct
               XSTACK = 00000009 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B16F - 0001B1D6 (0x68 bytes), align: 0
  Segment part 20.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     0001B16F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_soft_reset      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appForceBoot            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000014F - 0000014F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004A0 - 000004A5 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       000004A0        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004A6 - 000004AB (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    000004A6        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004AC - 000004B1 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           000004AC        _ltoa (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004B2 - 000004B7 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys::?relay
                                   000004B2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004B8 - 000004BD (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback::?relay
                                   000004B8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appForceBoot::?relay    
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\SimpleBLEPeripheral_Main.r51
  PROGRAM MODULE, NAME : SimpleBLEPeripheral_Main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halSleep (hal_sleep)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
                                                   llSetFreqTune (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2D8 - 0001C331 (0x5a bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0001C2D8        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main::?relay            
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\battservice.r51
  PROGRAM MODULE, NAME : battservice

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008774 - 00008775 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   battService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battServUUID            00008774 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008772 - 00008773 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 28
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battLevelUUID           00008772 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 8. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCB           
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000029E - 0000029F (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceSetupCB      0000029E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A0 - 000002A1 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceTeardownCB   000002A0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A2 - 000002A3 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceCalcCB       000002A2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C15 - 00000C16 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMinLevel            00000C15 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C17 - 00000C18 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battMaxLevel            00000C17 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A4 - 000002A4 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   Batt_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           battCriticalLevel       000002A4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C19 - 00000C19 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   battMeasure
           LOCAL                   ADDRESS         
           =====                   =======         
           battServiceAdcCh        00000C19 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000874B - 0000874D (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 28
           LOCAL                   ADDRESS         
           =====                   =======         
           battService             0000874B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C1A - 00000C1A (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 28
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelProps          00000C1A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C1B - 00000C1B (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   Batt_GetParameter
                                                   Batt_MeasLevel
                                                   Segment part 28
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevel               00000C1B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002A5 - 000002AA (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 28
           LOCAL                   ADDRESS         
           =====                   =======         
           battLevelClientCharCfg
                                   000002A5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C1C - 00000C1D (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   Batt_GetParameter
                                                   Segment part 28
           LOCAL                   ADDRESS         
           =====                   =======         
           hidReportRefBattLevel   00000C1C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C1E - 00000C45 (0x28 bytes), align: 0
  Segment part 27.            Intra module refs:   Batt_GetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           battAttrTbl             00000C1E 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           battCBs                 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_Register           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_SetParameter       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B575 - 0001B60C (0x98 bytes), align: 0
  Segment part 36.            Intra module refs:   Batt_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_GetParameter       0001B575 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B60D - 0001B621 (0x15 bytes), align: 0
  Segment part 38.            Intra module refs:   Batt_MeasLevel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_MeasLevel          0001B60D 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_Setup              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           battReadAttrCB          
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           battWriteAttrCB         
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 46. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           battNotifyCB            
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B622 - 0001B72B (0x10a bytes), align: 0
  Segment part 48.            Intra module refs:   battMeasure::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure             0001B622 
               calls direct
               XSTACK = 00000016 ( 0000000C )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           battNotifyLevel         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_HandleConnStatusCB
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000150 - 00000151 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   battMinLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000152 - 00000153 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   battMaxLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000154 - 00000154 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   battServiceAdcCh
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000155 - 00000155 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   battLevelProps
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000156 - 00000156 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   battLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000157 - 00000158 (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   hidReportRefBattLevel
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000159 - 00000180 (0x28 bytes), align: 0
  Segment part 28.            Intra module refs:   battAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_AddService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_Register::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_SetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004BE - 000004C3 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_GetParameter::?relay
                                   000004BE        read_batt_level (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004C4 - 000004C9 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_MeasLevel::?relay
                                   000004C4        read_batt_level (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_Setup::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004CA - 000004CF (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   Batt_MeasLevel
           LOCAL                   ADDRESS         
           =====                   =======         
           battMeasure::?relay     000004CA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Batt_HandleConnStatusCB::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008774 - 00008775 (0x2 bytes), align: 0
  Segment part 54.            Intra module refs:   battServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008772 - 00008773 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   battLevelUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000874B - 0000874D (0x3 bytes), align: 0
  Segment part 56.            Intra module refs:   battService
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 57. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\devinfoservice.r51
  PROGRAM MODULE, NAME : devinfoservice

  SEGMENTS IN THE MODULE
  ======================
XDATA_ROM_C
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoServUUID         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSystemIdUUID     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoModelNumberUUID
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSerialNumberUUID
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoFirmwareRevUUID
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoHardwareRevUUID
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoSoftwareRevUUID
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoMfrNameUUID      
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfo11073CertUUID    
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoPnpIdUUID        
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoService          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 17. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemIdProps    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002AB - 000002B2 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   DevInfo_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSystemId         000002AB 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 20. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumberProps
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 22. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoModelNumber      
    -------------------------------------------------------------------------
XDATA_I
  Segment part 23. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumberProps
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 25. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSerialNumber     
    -------------------------------------------------------------------------
XDATA_I
  Segment part 26. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRevProps
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 28. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoFirmwareRev      
    -------------------------------------------------------------------------
XDATA_I
  Segment part 29. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRevProps
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 31. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoHardwareRev      
    -------------------------------------------------------------------------
XDATA_I
  Segment part 32. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRevProps
                                   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 34. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoSoftwareRev      
    -------------------------------------------------------------------------
XDATA_I
  Segment part 35. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrNameProps     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 37. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoMfrName          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 38. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073CertProps   
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 40. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo11073Cert        
    -------------------------------------------------------------------------
XDATA_I
  Segment part 41. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpIdProps       
    -------------------------------------------------------------------------
XDATA_I
  Segment part 43. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoPnpId            
    -------------------------------------------------------------------------
XDATA_I
  Segment part 45. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfoAttrTbl          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           devInfoCBs              
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C378 - 0001C3B2 (0x3b bytes), align: 0
  Segment part 50.            Intra module refs:   DevInfo_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter    0001C378 
               calls direct
               XSTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_GetParameter    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           devInfo_ReadAttrCB      
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_AddService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004D0 - 000004D5 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_SetParameter::?relay
                                   000004D0        peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DevInfo_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 62. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 73. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 74. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\gap.r51
  PROGRAM MODULE, NAME : gap

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C148 - 0001C1D1 (0x8a bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_DeviceInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit          0001C148 
               calls direct
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004D6 - 000004DB (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_DeviceInit::?relay
                                   000004D6        gapRole_SetupGAP (peripheral)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\gapbondmgr.r51
  PROGRAM MODULE, NAME : gapbondmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000002B3 - 000002B3 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_Register
                                                   gapBondMgrSendServiceChange
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_TaskID       000002B3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C46 - 00000C46 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_PairingMode     00000C46 
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_InitiateWait    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002B4 - 000002B4 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   gapBondMgrAuthenticate
                                                   gapBondMgrSlaveSecurityReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_MITM            000002B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002B5 - 000002B5 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_IOCap           000002B5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002B6 - 000002B6 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBDataFlag     000002B6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002B7 - 000002C6 (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_OOBData         000002B7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002C7 - 000002C7 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   gapBondMgrAuthenticate
                                                   gapBondMgrSlaveSecurityReq
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Bonding         000002C7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002C8 - 000002C8 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFail        000002C8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C47 - 00000C47 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_AutoFailReason
                                   00000C47 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C48 - 00000C48 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeyDistList     00000C48 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002C9 - 000002CC (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_Passcode        000002C9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C49 - 00000C49 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   gapBondMgrAuthenticate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBond_KeySize         00000C49 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002CD - 000002CE (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_Register
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapBondCB              000002CD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000002CF - 0000035A (0x8c bytes), align: 0
  Segment part 26.            Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrBondTotal
                                                   gapBondMgrFindAddr
                                                   gapBondMgrFindEmpty
                                                   gapBondMgrFindReconnectAddr
                                                   gapBondMgrReadBonds
                                                   gapBondMgr_SyncWhiteList
           LOCAL                   ADDRESS         
           =====                   =======         
           bonds                   000002CF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035B - 0000035B (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           autoSyncWhiteList       0000035B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035C - 0000035C (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           eraseAllBonds           0000035C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035D - 0000035E (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   GAPBondMgr_ProcessEvent
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           connectionHandle        0000035D 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_GetParameter
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000026D0 - 0000288F (0x1c0 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPBondMgr_LinkEst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst      000026D0 
               calls direct
               XSTACK = 00000001 ( 0000003C )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002890 - 0000293A (0xab bytes), align: 0
  Segment part 37.            Intra module refs:   GAPBondMgr_ResolveAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr
                                   00002890 
               calls direct
               XSTACK = 0000003A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000293B - 000029DE (0xa4 bytes), align: 0
  Segment part 39.            Intra module refs:   GAPBondMgr_ServiceChangeInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd
                                   0000293B 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029DF - 00002A77 (0x99 bytes), align: 0
  Segment part 41.            Intra module refs:   GAPBondMgr_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg
                                   000029DF 
               calls direct
               XSTACK = 00000013 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A78 - 00002AA6 (0x2f bytes), align: 0
  Segment part 43.            Intra module refs:   GAPBondMgr_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register     00002A78 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002AA7 - 00002B12 (0x6c bytes), align: 0
  Segment part 45.            Intra module refs:   GAPBondMgr_PasscodeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_PasscodeRsp
                                   00002AA7 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002B13 - 00003078 (0x566 bytes), align: 0
  Segment part 47.            Intra module refs:   GAPBondMgr_ProcessGAPMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg
                                   00002B13 
               calls direct
               XSTACK = 00000009 ( 00000030 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003079 - 00003123 (0xab bytes), align: 0
  Segment part 49.            Intra module refs:   gapBondMgrChangeState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState   00003079 
               calls direct
               XSTACK = 0000000E ( 0000001B )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003124 - 00003293 (0x170 bytes), align: 0
  Segment part 51.            Intra module refs:   gapBondMgrUpdateCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg
                                   00003124 
               calls direct
               XSTACK = 00000012 ( 0000002A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003294 - 000032FB (0x68 bytes), align: 0
  Segment part 53.            Intra module refs:   gapBondMgrFindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem
                                   00003294 
               XSTACK = 0000002A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000032FC - 000033AF (0xb4 bytes), align: 0
  Segment part 55.            Intra module refs:   gapBondMgrInvertCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem
                                   000032FC 
               XSTACK = 0000003A ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033B0 - 0000352F (0x180 bytes), align: 0
  Segment part 57.            Intra module refs:   gapBondMgrAddBond::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond       000033B0 
               calls direct
               XSTACK = 00000030 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003530 - 0000356E (0x3f bytes), align: 0
  Segment part 59.            Intra module refs:   gapBondMgrGetStateFlags::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetStateFlags
                                   00003530 
               calls direct
               XSTACK = 0000003A ( 00000017 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000356F - 000035E2 (0x74 bytes), align: 0
  Segment part 61.            Intra module refs:   gapBondMgrGetPublicAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr
                                   0000356F 
               calls direct
               XSTACK = 0000000E ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000035E3 - 00003641 (0x5f bytes), align: 0
  Segment part 63.            Intra module refs:   gapBondMgrFindReconnectAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindReconnectAddr
                                   000035E3 
               calls direct
               XSTACK = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003642 - 000036A0 (0x5f bytes), align: 0
  Segment part 65.            Intra module refs:   gapBondMgrFindAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr      00003642 
               calls direct
               XSTACK = 00000022 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000036A1 - 0000370F (0x6f bytes), align: 0
  Segment part 67.            Intra module refs:   gapBondMgrResolvePrivateAddr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr
                                   000036A1 
               calls direct
               XSTACK = 0000000E ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003710 - 00003802 (0xf3 bytes), align: 0
  Segment part 69.            Intra module refs:   gapBondMgrReadBonds::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds     00003710 
               calls direct
               XSTACK = 00000026 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003803 - 00003848 (0x46 bytes), align: 0
  Segment part 71.            Intra module refs:   gapBondMgrFindEmpty::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindEmpty     00003803 
               calls direct
               XSTACK = 00000022 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003849 - 0000388D (0x45 bytes), align: 0
  Segment part 73.            Intra module refs:   gapBondMgrBondTotal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal     00003849 
               calls direct
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000388E - 000038B0 (0x23 bytes), align: 0
  Segment part 75.            Intra module refs:   gapBondMgrEraseAllBondings::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings
                                   0000388E 
               calls direct
               XSTACK = 00000026 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000038B1 - 00003A00 (0x150 bytes), align: 0
  Segment part 77.            Intra module refs:   gapBondMgrEraseBonding::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding
                                   000038B1 
               calls direct
               XSTACK = 00000009 ( 00000047 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A01 - 00003A13 (0x13 bytes), align: 0
  Segment part 79.            Intra module refs:   GAPBondMgr_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init         00003A01 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A14 - 00003A85 (0x72 bytes), align: 0
  Segment part 81.            Intra module refs:   GAPBondMgr_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent
                                   00003A14 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A86 - 00003ABC (0x37 bytes), align: 0
  Segment part 83.            Intra module refs:   gapBondMgr_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessOSALMsg
                                   00003A86 
               calls direct
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_CheckNVLen   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003ABD - 00003AE8 (0x2c bytes), align: 0
  Segment part 87.            Intra module refs:   gapBondMgr_ProcessGATTMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessGATTMsg
                                   00003ABD 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003AE9 - 00003B3B (0x53 bytes), align: 0
  Segment part 89.            Intra module refs:   gapBondMgr_ProcessGATTServMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessGATTServMsg
                                   00003AE9 
               calls direct
               XSTACK = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B3C - 00003B5C (0x21 bytes), align: 0
  Segment part 91.            Intra module refs:   gapBondMgrSendServiceChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange
                                   00003B3C 
               calls direct, is indirectly called
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003B5D - 00003BA0 (0x44 bytes), align: 0
  Segment part 93.            Intra module refs:   gapBondSetupPrivFlag::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag    00003B5D 
               calls direct
               XSTACK = 00000022 ( 00000001 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003BA1 - 00003DF2 (0x252 bytes), align: 0
  Segment part 95.            Intra module refs:   gapBondMgrAuthenticate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate
                                   00003BA1 
               calls direct
               XSTACK = 00000026 ( 00000028 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003DF3 - 00003E33 (0x41 bytes), align: 0
  Segment part 97.            Intra module refs:   gapBondMgrSlaveSecurityReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSlaveSecurityReq
                                   00003DF3 
               calls direct
               XSTACK = 0000003A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003E34 - 00003EDE (0xab bytes), align: 0
  Segment part 99.            Intra module refs:   gapBondMgrBondReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq       00003E34 
               calls direct
               XSTACK = 0000003B ( 0000002E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003EDF - 00003F49 (0x6b bytes), align: 0
  Segment part 101.           Intra module refs:   gapBondMgr_SyncWhiteList::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList
                                   00003EDF 
               calls direct
               XSTACK = 00000022 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F4A - 0000405D (0x114 bytes), align: 0
  Segment part 103.           Intra module refs:   gapBondMgr_SyncCharCfg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg
                                   00003F4A 
               calls direct
               XSTACK = 0000000E ( 00000019 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000181 - 00000181 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapBond_PairingMode
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000182 - 00000182 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   gapBond_AutoFailReason
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000183 - 00000183 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   gapBond_KeyDistList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000184 - 00000184 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   gapBond_KeySize
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_SetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004DC - 000004E1 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_LinkEst::?relay
                                   000004DC        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004E2 - 000004E7 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   GAPBondMgr_LinkEst
                                                   GAPBondMgr_ProcessGAPMsg
                                                   GAPBondMgr_ServiceChangeInd
                                                   GAPBondMgr_UpdateCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ResolveAddr::?relay
                                   000004E2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004E8 - 000004ED (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   gapBondMgr_ProcessGATTMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ServiceChangeInd::?relay
                                   000004E8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004EE - 000004F3 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   gapBondMgr_ProcessGATTServMsg
                                                   gapBondMgr_SyncCharCfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_UpdateCharCfg::?relay
                                   000004EE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004F4 - 000004F9 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Register::?relay
                                   000004F4        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000004FA - 000004FF (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_PasscodeRsp::?relay
                                   000004FA        ProcessPasscodeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000500 - 00000505 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   gapBondMgr_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessGAPMsg::?relay
                                   00000500        gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000506 - 0000050B (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrChangeState::?relay
                                   00000506 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000050C - 00000511 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   GAPBondMgr_UpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrUpdateCharCfg::?relay
                                   0000050C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000512 - 00000517 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindCharCfgItem::?relay
                                   00000512 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000518 - 0000051D (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPBondMgr_LinkEst
                                                   gapBondMgrUpdateCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrInvertCharCfgItem::?relay
                                   00000518 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000051E - 00000523 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAddBond::?relay
                                   0000051E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000524 - 00000529 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   GAPBondMgr_LinkEst
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetStateFlags::?relay
                                   00000524 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000052A - 0000052F (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrGetPublicAddr::?relay
                                   0000052A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000530 - 00000535 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindReconnectAddr::?relay
                                   00000530 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000536 - 0000053B (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   GAPBondMgr_ResolveAddr
                                                   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindAddr::?relay
                                   00000536 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000053C - 00000541 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   GAPBondMgr_ResolveAddr
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrResolvePrivateAddr::?relay
                                   0000053C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000542 - 00000547 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   GAPBondMgr_Init
                                                   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrReadBonds::?relay
                                   00000542 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000548 - 0000054D (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   gapBondMgrAddBond
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrFindEmpty::?relay
                                   00000548 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000054E - 00000553 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   gapBondSetupPrivFlag
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondTotal::?relay
                                   0000054E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000554 - 00000559 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseAllBondings::?relay
                                   00000554 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000055A - 0000055F (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   gapBondMgrEraseAllBondings
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrEraseBonding::?relay
                                   0000055A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000560 - 00000565 (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_Init::?relay
                                   00000560        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000566 - 0000056B (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_ProcessEvent::?relay
                                   00000566        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000056C - 00000571 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessOSALMsg::?relay
                                   0000056C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPBondMgr_CheckNVLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000572 - 00000577 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   gapBondMgr_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessGATTMsg::?relay
                                   00000572 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000578 - 0000057D (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   gapBondMgr_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_ProcessGATTServMsg::?relay
                                   00000578 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000057E - 00000583 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   GAPBondMgr_ServiceChangeInd
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSendServiceChange::?relay
                                   0000057E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000584 - 00000589 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondSetupPrivFlag::?relay
                                   00000584 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000058A - 0000058F (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GAPBondMgr_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrAuthenticate::?relay
                                   0000058A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000590 - 00000595 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   GAPBondMgr_LinkEst
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrSlaveSecurityReq::?relay
                                   00000590 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000596 - 0000059B (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   GAPBondMgr_LinkEst
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgrBondReq::?relay
                                   00000596 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000059C - 000005A1 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   gapBondMgrAddBond
                                                   gapBondMgrReadBonds
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncWhiteList::?relay
                                   0000059C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A2 - 000005A7 (0x6 bytes), align: 0
  Segment part 104.           Intra module refs:   GAPBondMgr_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapBondMgr_SyncCharCfg::?relay
                                   000005A2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008696 - 0000869B (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPBondMgr_LinkEst
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008701 - 00008704 (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   GAPBondMgr_PasscodeRsp
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   llCalcScaFactor (ll_timerDrift)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        00008701 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008696 - 0000869B (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008701 - 00008704 (0x4 bytes), align: 0
  Segment part 106.           Intra module refs:   __Constant_f4240

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\gatt_uuid.r51
  PROGRAM MODULE, NAME : gatt_uuid

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000876E - 0000876F (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceUUID          0000876E        Segment part 7 (gapgattserver)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceUUID         
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000876C - 0000876D (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           primaryServiceUUID      0000876C        Segment part 25 (gapgattserver)
                                                   Segment part 28 (battservice)
                                                   Segment part 38 (gatt_server)
                                                   Segment part 41 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000876A - 0000876B (0x2 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           secondaryServiceUUID    0000876A        GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           includeUUID             
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008768 - 00008769 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           characterUUID           00008768        GATT_FindNextAttr (gatt_server)
                                                   Segment part 25 (gapgattserver)
                                                   Segment part 28 (battservice)
                                                   Segment part 41 (simpleGATTprofile)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charExtPropsUUID        
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008766 - 00008767 (0x2 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charUserDescUUID        00008766        Segment part 41 (simpleGATTprofile)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008764 - 00008765 (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clientCharCfgUUID       00008764        Segment part 28 (battservice)
                                                   Segment part 41 (simpleGATTprofile)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           servCharCfgUUID         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charFormatUUID          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           charAggFormatUUID       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008762 - 00008763 (0x2 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceNameUUID          00008762        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008760 - 00008761 (0x2 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appearanceUUID          00008760        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000875E - 0000875F (0x2 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periPrivacyFlagUUID     0000875E        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008770 - 00008771 (0x2 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reconnectAddrUUID       00008770        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000875A - 0000875B (0x2 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           periConnParamUUID       0000875A        Segment part 25 (gapgattserver)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008758 - 00008759 (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serviceChangedUUID      00008758        GATT_ServiceChangedInd (gatt_server)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           validRangeUUID          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extReportRefUUID        
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008756 - 00008757 (0x2 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reportRefUUID           00008756        Segment part 28 (battservice)
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindUUIDRec        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindUUIDRec::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000876E - 0000876F (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapServiceUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000876C - 0000876D (0x2 bytes), align: 0
  Segment part 31.            Intra module refs:   primaryServiceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000876A - 0000876B (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   secondaryServiceUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008768 - 00008769 (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   characterUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008766 - 00008767 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   charUserDescUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008764 - 00008765 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   clientCharCfgUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008762 - 00008763 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   deviceNameUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008760 - 00008761 (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   appearanceUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000875E - 0000875F (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   periPrivacyFlagUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008770 - 00008771 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   reconnectAddrUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000875A - 0000875B (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   periConnParamUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008758 - 00008759 (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   serviceChangedUUID
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008756 - 00008757 (0x2 bytes), align: 0
  Segment part 49.            Intra module refs:   reportRefUUID

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalAdcRead
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalAdcRead
                                                   HalUARTInitISR (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000035F - 0000035F (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAdcInit
                                                   HalAdcRead
                                                   HalAdcSetReference
           LOCAL                   ADDRESS         
           =====                   =======         
           adcRef                  0000035F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE07 - 0001BE17 (0x11 bytes), align: 0
  Segment part 12.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              0001BE07 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE18 - 0001BEEF (0xd8 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              0001BE18 
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BEF0 - 0001BEFF (0x10 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAdcSetReference::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference      0001BEF0 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005A8 - 000005AD (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      000005A8        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005AE - 000005B3 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      000005AE        battMeasure (battservice)
                                                   halGetJoyKeyInput (hal_key)
                                                   read_temperature (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005B4 - 000005B9 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcSetReference::?relay
                                   000005B4        battMeasure (battservice)
                                                   read_temperature (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_aes.r51
  PROGRAM MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   halDmaIsr (hal_dma)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalFlashWrite (hal_flash)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pSspAesEncrypt          
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A40C - 0001A6A6 (0x29b bytes), align: 0
  Segment part 10.            Intra module refs:   aesDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0001A40C 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadIV               
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadKey              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesDmaSetup             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6A7 - 0001A6B4 (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0001A6A7 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ssp_HW_KeyInit          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sspAesEncryptHW         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005BA - 000005BF (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      000005BA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadIV::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesLoadKey::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AesDmaSetup::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005C0 - 000005C5 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      000005C0        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ssp_HW_KeyInit::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sspAesEncryptHW::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_crc.r51
  PROGRAM MODULE, NAME : hal_crc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_adc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCCalc              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCExec              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCCalc::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCExec::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalCRCInit::?relay      
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalDmaInit
                                                   HalKeyConfig (hal_key)
                                                   halSleep (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halDmaIsr
                                                   halKeyPort0Isr (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halSleepTimerIsr (hal_sleep)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000360 - 00000367 (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  00000360        HalFlashWrite (hal_flash)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000368 - 00000387 (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               00000368        HalUARTInitDMA (hal_uart)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_InitAesDMA (ll_enc)
                                                   LL_ENC_LoadEmptyIV (ll_enc)
                                                   aesDmaInit (hal_aes)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C42F - 0001C44B (0x1d bytes), align: 0
  Segment part 17.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              0001C42F 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000019B8 - 000019E2 (0x2b bytes), align: 0
  Segment part 19.            Intra module refs:   halDmaIsr::??INTVEC 67
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr               000019B8 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000045 (0x46 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halDmaIsr::??INTVEC 67
                                   00000043 
    -------------------------------------------------------------------------
ISTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005C6 - 000005CB (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      000005C6        HalDriverInit (hal_drivers)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000388 - 00000388 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_TaskID              00000388        HalKeyConfig (hal_key)
                                                   HalUARTPollDMA (hal_uart)
                                                   halProcessKeyInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA77 - 0001BA86 (0x10 bytes), align: 0
  Segment part 8.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0001BA77 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA87 - 0001BAA0 (0x1a bytes), align: 0
  Segment part 10.            Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0001BA87 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BAA1 - 0001BBA5 (0x105 bytes), align: 0
  Segment part 12.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0001BAA1 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BBA6 - 0001BBB6 (0x11 bytes), align: 0
  Segment part 14.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0001BBA6 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086C5 - 000086C8 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   Hal_ProcessEvent
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   osal_snv_compact (osal_snv)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           000086C5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005CC - 000005D1 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        000005CC        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D2 - 000005D7 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   000005D2        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005D8 - 000005DD (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent::?relay
                                   000005D8        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005DE - 000005E3 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll::?relay
                                   000005DE        osal_run_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086C5 - 000086C8 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_64

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_flash.r51
  PROGRAM MODULE, NAME : hal_flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C7 - 000000C7 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalFlashRead
                                                   __low_level_init (hal_startup)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  000000C7 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A12F - 0001A1D4 (0xa6 bytes), align: 0
  Segment part 10.            Intra module refs:   HalFlashRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead            0001A12F 
               XSTACK = 00000002 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A1D5 - 0001A3F0 (0x21c bytes), align: 0
  Segment part 12.            Intra module refs:   HalFlashWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite           0001A1D5 
               XSTACK = 00000002 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A3F1 - 0001A40B (0x1b bytes), align: 0
  Segment part 14.            Intra module refs:   HalFlashErase::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase           0001A3F1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005E4 - 000005E9 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashRead::?relay    000005E4        LL_Init (ll)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   verifyWordM (osal_snv)
                                                   xferItem (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005EA - 000005EF (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashWrite::?relay   000005EA        llFindTxPowerSettings (ll_common)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005F0 - 000005F5 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalFlashErase::?relay   000005F0        erasePage (osal_snv)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   performPeriodicTask (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalKeyConfig
                                                   halKeyPort0Isr
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   HalKeyConfig
                                                   halKeyPort2Isr
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IFG                   0000008B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   HalKeyConfig
                                                   HalUARTInitDMA (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   HalKeyConfig
                                                   halSleep (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   halUart1TxIsr (hal_uart)
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalKeyPoll
                                                   HalKeyRead
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 11. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   halKeyPort2Isr
                                                   halUart0TxIsr (hal_uart)
                                                   halUart1TxIsr (hal_uart)
                                                   port1Isr (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON2                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitISR (hal_uart)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2INP                   000000F7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   HalKeyInit
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 17. ROOT.      Intra module refs:   HalKeyInit
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTInitISR (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000389 - 00000389 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           halKeySavedKeys         00000389 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038A - 0000038B (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
                                   0000038A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038C - 0000038C (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalKeyConfigured        0000038C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038D - 0000038D (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_KeyIntEnable        0000038D        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE09 - 0001AE38 (0x30 bytes), align: 0
  Segment part 30.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0001AE09 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE39 - 0001AEA8 (0x70 bytes), align: 0
  Segment part 32.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0001AE39 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AEA9 - 0001AECC (0x24 bytes), align: 0
  Segment part 34.            Intra module refs:   HalKeyRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              0001AEA9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AECD - 0001AF28 (0x5c bytes), align: 0
  Segment part 36.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              0001AECD 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AF29 - 0001AFA3 (0x7b bytes), align: 0
  Segment part 38.            Intra module refs:   halGetJoyKeyInput::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput       0001AF29 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFA4 - 0001AFE0 (0x3d bytes), align: 0
  Segment part 40.            Intra module refs:   halProcessKeyInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
                                   0001AFA4 
               calls direct
               XSTACK = 0000000E ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFE1 - 0001AFE3 (0x3 bytes), align: 0
  Segment part 42.            Intra module refs:   HalKeyEnterSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep        0001AFE1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AFE4 - 0001AFF1 (0xe bytes), align: 0
  Segment part 44.            Intra module refs:   HalKeyExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep         0001AFE4 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000019E3 - 00001A0D (0x2b bytes), align: 0
  Segment part 46.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          000019E3 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A0E - 00001A38 (0x2b bytes), align: 0
  Segment part 47.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          00001A0E 
               interrupt function
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
ISTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008739 - 0000873C (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_TimeToNextRfEvent (ll_sleep)
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_19           00008739 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005F6 - 000005FB (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      000005F6        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000005FC - 00000601 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    000005FC        InitBoard (OnBoard)
                                                   OnBoard_KeyCallback (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000602 - 00000607 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   HalKeyExitSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      00000602 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000608 - 0000060D (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      00000608        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000060E - 00000613 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   HalKeyPoll
                                                   HalKeyRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halGetJoyKeyInput::?relay
                                   0000060E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000614 - 00000619 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt::?relay
                                   00000614 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000061A - 0000061F (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyEnterSleep::?relay
                                   0000061A        halSleep (hal_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000620 - 00000625 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyExitSleep::?relay
                                   00000620        halSleep (hal_sleep)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008739 - 0000873C (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   __Constant_19

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C44C - 0001C44E (0x3 bytes), align: 0
  Segment part 8.             Intra module refs:   HalLcdWriteString::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       0001C44C 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C44F - 0001C460 (0x12 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLcdWriteStringValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   0001C44F 
               XSTACK = 00000001 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValueValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdDisplayPercentBar
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000626 - 0000062B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   00000626        ProcessPairStateCB (simpleBLEPeripheral)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000062C - 00000631 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   0000062C        ProcessPairStateCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValueValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdDisplayPercentBar::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000038E - 0000038E (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           HalLedState             0000038E 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C461 - 0001C472 (0x12 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0001C461 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedGetState          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C473 - 0001C475 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLedExitSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep         0001C473 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000632 - 00000637 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet::?relay       00000632        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedGetState::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedEnterSleep::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000638 - 0000063D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedExitSleep::?relay
                                   00000638        halSleep (hal_sleep)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000087 - 00000087 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halSetSleepMode
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON                    00000087 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTPollDMA (hal_uart)
                                                   HalUARTPollISR (hal_uart)
                                                   halSleepReadTimer
                                                   halSleepSetTimer
                                                   halUart0RxIsr (hal_uart)
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000096 - 00000096 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     00000096 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000097 - 00000097 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   halSleepReadTimer
                                                   halSleepSetTimer
                                                   llGetFullCTandST (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     00000097 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STLOAD                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN1                    000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON                   000000C0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000038F - 0000038F (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           halPwrMgtMode           0000038F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000390 - 00000390 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   halSleep
           LOCAL                   ADDRESS         
           =====                   =======         
           wakeForRF               00000390 
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA 0000001A - 0000001A (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   halSetSleepMode
                                                   halSleep
                                                   halSleepTimerIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepPconValue       0000001A        Hal_ProcessPoll (hal_drivers)
                                                   halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   port1Isr (hal_uart)
    -------------------------------------------------------------------------
SLEEP_CODE
  Relative segment, address: CODE 00007FF8 - 00007FFF (0x8 bytes), align: 0
  Segment part 28.            Intra module refs:   halSetSleepMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode         00007FF8 
               XSTACK = 00000020 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6B5 - 0001A8A1 (0x1ed bytes), align: 0
  Segment part 30.            Intra module refs:   halSleep::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep                0001A6B5 
               calls direct
               XSTACK = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A8A2 - 0001A90D (0x6c bytes), align: 0
  Segment part 32.            Intra module refs:   halSleepSetTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer        0001A8A2 
               XSTACK = 00000024 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A90E - 0001A954 (0x47 bytes), align: 0
  Segment part 34.            Intra module refs:   halSleepReadTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer       0001A90E 
               XSTACK = 00000020 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerElapsed            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A955 - 0001A957 (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   halRestoreSleepLevel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel    0001A955 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A39 - 00001A60 (0x28 bytes), align: 0
  Segment part 40.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00001A39 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 
    -------------------------------------------------------------------------
ISTACK
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE 0000014D - 0000014D (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   halSleepPconValue
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000870D - 00008710 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_9c41         0000870D 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086D1 - 000086D4 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1000         000086D1 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086D5 - 000086D8 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7d           000086D5 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086D9 - 000086DC (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_43           000086D9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086DD - 000086E0 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0001       000086DD 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086E1 - 000086E4 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ff0000       000086E1 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086E5 - 000086E8 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   halSleepSetTimer
                                                   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     000086E5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000063E - 00000643 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSetSleepMode::?relay
                                   0000063E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000644 - 00000649 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleep::?relay        00000644        osal_pwrmgr_powerconserve (OSAL_PwrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000064A - 0000064F (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepSetTimer::?relay
                                   0000064A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000650 - 00000655 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   halSleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepReadTimer::?relay
                                   00000650 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TimerElapsed::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000656 - 0000065B (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRestoreSleepLevel::?relay
                                   00000656        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000870D - 00008710 (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   __Constant_9c41
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086D1 - 000086D4 (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   __Constant_1000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086D5 - 000086D8 (0x4 bytes), align: 0
  Segment part 43.            Intra module refs:   __Constant_7d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086D9 - 000086DC (0x4 bytes), align: 0
  Segment part 44.            Intra module refs:   __Constant_43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086DD - 000086E0 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   __Constant_ff0001
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086E1 - 000086E4 (0x4 bytes), align: 0
  Segment part 46.            Intra module refs:   __Constant_ff0000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086E5 - 000086E8 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   __Constant_ffffffe7

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_startup.r51
  PROGRAM MODULE, NAME : hal_startup

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_flash
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCTR                  
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000086 - 00000090 (0xb bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000086        __low_level_init_call (?cmain)
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   HalUARTInitISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   port1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0000008A 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   HalUARTInitDMA
                                                   HalUARTPollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   HalUARTInitDMA
                                                   HalUARTPollDMA
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
           LOCAL                   ADDRESS         
           =====                   =======         
           IEN0                    000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 11. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   halUart0RxIsr
                                                   halUart0TxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   HalUARTInitISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 16. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 17. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 18. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               
           LOCAL                   ADDRESS         
           =====                   =======         
           IRCON2                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 19. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTInitISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 20. TENTATIVE. Used definition from hal_adc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 21. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 22. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   LL_PowerOffReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F8 - 000000F8 (0x1 bytes), align: 0
  Segment part 23. ROOT.      Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_U1CSR                000000F8 
           LOCAL                   ADDRESS         
           =====                   =======         
           U1CSR                   000000F8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F9 - 000000F9 (0x1 bytes), align: 0
  Segment part 24. ROOT.      Intra module refs:   halUart1TxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1DBUF                  000000F9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FA - 000000FA (0x1 bytes), align: 0
  Segment part 25. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   HalUARTPollDMA
                                                   HalUARTRxAvailDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1BAUD                  000000FA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FB - 000000FB (0x1 bytes), align: 0
  Segment part 26. ROOT.      Intra module refs:   HalUARTInitDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1UCR                   000000FB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FC - 000000FC (0x1 bytes), align: 0
  Segment part 27. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1GCR                   000000FC 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 28. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 29. ROOT.      Intra module refs:   HalUARTInitDMA
                                                   LL_PowerOffReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 30. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000391 - 00000391 (0x1 bytes), align: 0
  Segment part 40.            Intra module refs:   HalUARTPollDMA
                                                   port1Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyIsr               00000391 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000392 - 00000392 (0x1 bytes), align: 0
  Segment part 41.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaRdyDly               00000392 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000393 - 00000519 (0x187 bytes), align: 0
  Segment part 42.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTInitDMA
                                                   HalUARTPollDMA
                                                   HalUARTRxAvailDMA
                                                   halUart1TxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           dmaCfg                  00000393 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000051A - 0000051A (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   HalUARTPollDMA
                                                   HalUARTRxAvailDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           uartRxBug               0000051A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175B4 - 0001779D (0x1ea bytes), align: 0
  Segment part 45.            Intra module refs:   HalUARTInitDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA          000175B4 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTOpenDMA          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 49. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadDMA          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTWriteDMA         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001779E - 00017960 (0x1c3 bytes), align: 0
  Segment part 53.            Intra module refs:   HalUARTPollDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA          0001779E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017961 - 00017AAF (0x14f bytes), align: 0
  Segment part 55.            Intra module refs:   HalUARTRxAvailDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA       00017961 
               calls direct
               XSTACK = 0000000C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AB0 - 00017ADE (0x2f bytes), align: 0
  Segment part 57.            Intra module refs:   HalUARTBusyDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA          00017AB0 
               calls direct
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017ADF - 00017AE1 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   HalUART_DMAIsrDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUART_DMAIsrDMA       00017ADF 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A61 - 00001A99 (0x39 bytes), align: 0
  Segment part 95.            Intra module refs:   port1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port1Isr                00001A61 
               interrupt function
               ISTACK = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001A9A - 00001B14 (0x7b bytes), align: 0
  Segment part 96.            Intra module refs:   halUart1TxIsr::??INTVEC 115
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart1TxIsr           00001A9A 
               interrupt function
               ISTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000051B - 00000623 (0x109 bytes), align: 0
  Segment part 44.            Intra module refs:   HalUARTPollISR
                                                   halUart0RxIsr
                                                   halUart0TxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           isrCfg                  0000051B 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AE2 - 00017AF9 (0x18 bytes), align: 0
  Segment part 61.            Intra module refs:   HalUARTInitISR::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitISR          00017AE2 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTOpenISR          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTReadISR          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 67. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTWriteISR         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AFA - 00017BD8 (0xdf bytes), align: 0
  Segment part 69.            Intra module refs:   HalUARTPollISR::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollISR          00017AFA 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 71. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailISR       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 73. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTSuspendISR       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 75. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTResumeISR        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001B15 - 00001B91 (0x7d bytes), align: 0
  Segment part 97.            Intra module refs:   halUart0RxIsr::??INTVEC 19
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0RxIsr           00001B15 
               interrupt function
               ISTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001B92 - 00001C0C (0x7b bytes), align: 0
  Segment part 98.            Intra module refs:   halUart0TxIsr::??INTVEC 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr           00001B92 
               interrupt function
               ISTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BD9 - 00017BE9 (0x11 bytes), align: 0
  Segment part 77.            Intra module refs:   HalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             00017BD9 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTSuspend          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTResume           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BEA - 00017BFA (0x11 bytes), align: 0
  Segment part 89.            Intra module refs:   HalUARTPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll             00017BEA 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 91. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017BFB - 00017C08 (0xe bytes), align: 0
  Segment part 93.            Intra module refs:   HalUARTIsrDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA           00017BFB 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000015 (0x16 bytes), align: 0
  Segment part 31. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0RxIsr::??INTVEC 19
                                   00000013 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003D (0x3e bytes), align: 0
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr::??INTVEC 59
                                   0000003B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000075 (0x76 bytes), align: 0
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart1TxIsr::??INTVEC 115
                                   00000073 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port1Isr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
ISTACK
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000065C - 00000661 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   HalUARTInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitDMA::?relay
                                   0000065C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000662 - 00000667 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollDMA::?relay
                                   00000662 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000668 - 0000066D (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   HalUARTBusyDMA
                                                   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTRxAvailDMA::?relay
                                   00000668 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000066E - 00000673 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   HalUARTPollDMA
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTBusyDMA::?relay
                                   0000066E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000674 - 00000679 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   HalUARTIsrDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUART_DMAIsrDMA::?relay
                                   00000674 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000067A - 0000067F (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   HalUARTInit
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTInitISR::?relay
                                   0000067A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000680 - 00000685 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPollISR::?relay
                                   00000680 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 76. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000686 - 0000068B (0x6 bytes), align: 0
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit::?relay     00000686        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTSuspend::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTResume::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000068C - 00000691 (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll::?relay     0000068C        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 92. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000692 - 00000697 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTIsrDMA::?relay   00000692        halDmaIsr (hal_dma)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\npi.r51
  PROGRAM MODULE, NAME : npi

  SEGMENTS IN THE MODULE
  ======================
BANKED_CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_InitTransport       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_ReadTransport       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_WriteTransport      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_RxBufLen            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_GetMaxRxBufSize     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_GetMaxTxBufSize     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_InitTransport::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_ReadTransport::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_WriteTransport::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_RxBufLen::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_GetMaxRxBufSize::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NPI_GetMaxTxBufSize::?relay
                                   
               is not allocated
               not allocated function

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\osal_bufmgr.r51
  PROGRAM MODULE, NAME : osal_bufmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000624 - 00000625 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   bm_desc_from_payload
                                                   osal_bm_alloc
                                                   osal_bm_free
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_list_ptr             00000624 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B1D7 - 0001B235 (0x5f bytes), align: 0
  Segment part 7.             Intra module refs:   osal_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc           0001B1D7 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B236 - 0001B2E3 (0xae bytes), align: 0
  Segment part 9.             Intra module refs:   osal_bm_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free            0001B236 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2E4 - 0001B362 (0x7f bytes), align: 0
  Segment part 11.            Intra module refs:   osal_bm_adjust_header::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header   0001B2E4 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_tail     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B363 - 0001B3BB (0x59 bytes), align: 0
  Segment part 15.            Intra module refs:   bm_desc_from_payload::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload    0001B363 
               XSTACK = 00000010 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000698 - 0000069D (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_alloc::?relay   00000698        HCI_bm_alloc (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000069E - 000006A3 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_free::?relay    0000069E        LL_RxDataCompleteCback (hci_data)
                                                   attSendMsg (att_util)
                                                   gattProcessRxData (gatt_task)
                                                   hciTxDataBufferReset (hci_data)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   smProcessOSALMsg (sm_task)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A4 - 000006A9 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_header::?relay
                                   000006A4        L2CAP_bm_alloc (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_bm_adjust_tail::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006AA - 000006AF (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   osal_bm_adjust_header
           LOCAL                   ADDRESS         
           =====                   =======         
           bm_desc_from_payload::?relay
                                   000006AA 

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\osal_cbtimer.r51
  PROGRAM MODULE, NAME : osal_cbtimer

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000C4A - 00000C4B (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           baseTaskID              00000C4A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000626 - 00000661 (0x3c bytes), align: 0
  Segment part 8.             Intra module refs:   osal_CbTimerInit
                                                   osal_CbTimerProcessEvent
                                                   osal_CbTimerStart
                                                   osal_CbTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cbTimers                00000626 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B0F - 00019B40 (0x32 bytes), align: 0
  Segment part 9.             Intra module refs:   osal_CbTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit        00019B0F 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019B41 - 00019C48 (0x108 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_CbTimerProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent
                                   00019B41 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019C49 - 00019D6D (0x125 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_CbTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart       00019C49 
               calls direct
               XSTACK = 00000004 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerUpdate      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019D6E - 00019E34 (0xc7 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_CbTimerStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop        00019D6E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000185 - 00000186 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   baseTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B0 - 000006B5 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerInit::?relay
                                   000006B0        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B6 - 000006BB (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerProcessEvent::?relay
                                   000006B6        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006BC - 000006C1 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStart::?relay
                                   000006BC        gattStartTimer (gatt_task)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerUpdate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C2 - 000006C7 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_CbTimerStop::?relay
                                   000006C2        gattStopTimer (gatt_task)
                                                   l2capStopTimer (l2cap_util)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\osal_snv.r51
  PROGRAM MODULE, NAME : osal_snv

  SEGMENTS IN THE MODULE
  ======================
BLENV_ADDRESS_SPACE
  Relative segment, address: CODE 0003E800 - 0003F7FF (0x1000 bytes), align: 0
  Segment part 6.             Intra module refs:   activePg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _nvBuf                  0003E800 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000662 - 00000662 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_read
                                                   osal_snv_write
                                                   setActivePage
                                                   setXferPage
                                                   xferItem
           LOCAL                   ADDRESS         
           =====                   =======         
           activePg                00000662 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000663 - 00000664 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   compactPage
                                                   findOffset
                                                   initNV
                                                   osal_snv_compact
                                                   osal_snv_read
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           pgOff                   00000663 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000665 - 00000665 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   compactPage
                                                   erasePage
                                                   initNV
                                                   osal_snv_write
                                                   setActivePage
                                                   verifyWordM
                                                   writeWord
                                                   writeWordM
           LOCAL                   ADDRESS         
           =====                   =======         
           failF                   00000665 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014A76 - 00014B5B (0xe6 bytes), align: 0
  Segment part 14.            Intra module refs:   initNV::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  00014A76 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B5C - 00014BA8 (0x4d bytes), align: 0
  Segment part 16.            Intra module refs:   setActivePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage           00014B5C 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BA9 - 00014BEB (0x43 bytes), align: 0
  Segment part 18.            Intra module refs:   setXferPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage             00014BA9 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014BEC - 00014C60 (0x75 bytes), align: 0
  Segment part 20.            Intra module refs:   erasePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage               00014BEC 
               calls direct
               XSTACK = 00000014 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C61 - 00014CC1 (0x61 bytes), align: 0
  Segment part 22.            Intra module refs:   cleanErasedPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage         00014C61 
               calls direct
               XSTACK = 00000010 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CC2 - 00014D36 (0x75 bytes), align: 0
  Segment part 24.            Intra module refs:   findOffset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset              00014CC2 
               calls direct
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D37 - 00014E12 (0xdc bytes), align: 0
  Segment part 26.            Intra module refs:   findItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                00014D37 
               calls direct
               XSTACK = 00000014 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014E13 - 00014F1D (0x10b bytes), align: 0
  Segment part 28.            Intra module refs:   writeItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               00014E13 
               calls direct
               XSTACK = 00000016 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F1E - 00014F9E (0x81 bytes), align: 0
  Segment part 30.            Intra module refs:   xferItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xferItem                00014F1E 
               calls direct
               XSTACK = 00000016 ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F9F - 00015145 (0x1a7 bytes), align: 0
  Segment part 32.            Intra module refs:   compactPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             00014F9F 
               calls direct
               XSTACK = 00000014 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015146 - 000151DB (0x96 bytes), align: 0
  Segment part 34.            Intra module refs:   verifyWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM             00015146 
               calls direct
               XSTACK = 00000013 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000151DC - 0001524E (0x73 bytes), align: 0
  Segment part 36.            Intra module refs:   writeWord::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               000151DC 
               calls direct
               XSTACK = 00000016 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001524F - 000152CA (0x7c bytes), align: 0
  Segment part 38.            Intra module refs:   writeWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordM              0001524F 
               calls direct
               XSTACK = 00000015 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152CB - 000152E1 (0x17 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_snv_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init           000152CB 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000152E2 - 00015418 (0x137 bytes), align: 0
  Segment part 42.            Intra module refs:   osal_snv_write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write          000152E2 
               calls direct
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015419 - 00015472 (0x5a bytes), align: 0
  Segment part 44.            Intra module refs:   osal_snv_read::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read           00015419 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015473 - 000154DE (0x6c bytes), align: 0
  Segment part 46.            Intra module refs:   osal_snv_compact::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact        00015473 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086E9 - 000086EC (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   initNV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_100000       000086E9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086ED - 000086F0 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smpResponderProcessIncoming (sm_rsppairing)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     000086ED 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from hal_drivers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086F1 - 000086F4 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   osal_snv_compact
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          000086F1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C8 - 000006CD (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_snv_init
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV::?relay          000006C8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006CE - 000006D3 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           setActivePage::?relay   000006CE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D4 - 000006D9 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           setXferPage::?relay     000006D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006DA - 000006DF (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   cleanErasedPage
                                                   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage::?relay       000006DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E0 - 000006E5 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           cleanErasedPage::?relay
                                   000006E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E6 - 000006EB (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
           findOffset::?relay      000006E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006EC - 000006F1 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   compactPage
                                                   osal_snv_read
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem::?relay        000006EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F2 - 000006F7 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       000006F2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F8 - 000006FD (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   compactPage
           LOCAL                   ADDRESS         
           =====                   =======         
           xferItem::?relay        000006F8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006FE - 00000703 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   initNV
                                                   osal_snv_compact
                                                   osal_snv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage::?relay     000006FE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000704 - 00000709 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   writeWord
                                                   writeWordM
           LOCAL                   ADDRESS         
           =====                   =======         
           verifyWordM::?relay     00000704 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000070A - 0000070F (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   setActivePage
                                                   setXferPage
                                                   writeItem
                                                   xferItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord::?relay       0000070A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000710 - 00000715 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordM::?relay      00000710 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000716 - 0000071B (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_init::?relay   00000716        main (SimpleBLEPeripheral_Main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000071C - 00000721 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_write::?relay
                                   0000071C        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000722 - 00000727 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_read::?relay   00000722        GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPRole_Init (peripheral)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000728 - 0000072D (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_snv_compact::?relay
                                   00000728        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086E9 - 000086EC (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   __Constant_100000
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086ED - 000086F0 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   __Constant_ffffffff
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086F1 - 000086F4 (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   __Constant_800

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\peripheral.r51
  PROGRAM MODULE, NAME : peripheral

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000666 - 00000666 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_SetupGAP
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TaskID          00000666 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000667 - 00000667 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   GAPRole_StartDevice
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_state           00000667 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000668 - 00000668 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   gapRole_SetupGAP
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_profileRole     00000668 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000669 - 00000678 (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_SetupGAP
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_IRK             00000669 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000679 - 00000688 (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_SetupGAP
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SRK             00000679 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000689 - 0000068C (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_SetupGAP
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_signCounter     00000689 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000068D - 00000692 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_bdAddr          0000068D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C4C - 00000C4C (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEnabled      00000C4C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C4D - 00000C4E (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertOffTime   00000C4D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C4F - 00000C4F (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertDataLen   00000C4F 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C50 - 00000C6E (0x1f bytes), align: 0
  Segment part 19.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvertData      00000C50 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000693 - 00000693 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspDataLen
                                   00000693 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000694 - 000006B2 (0x1f bytes), align: 0
  Segment part 22.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ScanRspData     00000694 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006B3 - 000006B3 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvEventType    000006B3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006B4 - 000006B4 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectType   000006B4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006B5 - 000006BA (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvDirectAddr   000006B5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006BB - 000006BB (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvChanMap      000006BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006BC - 000006BC (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_AdvFilterPolicy
                                   000006BC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C6F - 00000C70 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_Init
                                                   GAPRole_ProcessEvent
                                                   GAPRole_TerminateConnection
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectionHandle
                                   00000C6F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006BD - 000006BE (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_ProcessEvent
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_RSSIReadRate    000006BD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006BF - 000006C4 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnectedDevAddr
                                   000006BF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006C5 - 000006C5 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SetParameter
                                                   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ParamUpdateEnable
                                   000006C5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C71 - 00000C72 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MinConnInterval
                                   00000C71 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C73 - 00000C74 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_MaxConnInterval
                                   00000C73 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006C6 - 000006C7 (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SlaveLatency    000006C6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C75 - 00000C76 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   GAPRole_GetParameter
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
                                                   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_TimeoutMultiplier
                                   00000C75 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006C8 - 000006C9 (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnInterval    000006C8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006CA - 000006CB (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnSlaveLatency
                                   000006CA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006CC - 000006CD (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   GAPRole_GetParameter
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ConnTimeout     000006CC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006CE - 000006CE (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_ProcessOSALMsg
                                                   gapRole_startConnUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
           paramUpdateNoSuccessOption
                                   000006CE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006CF - 000006D0 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_StartDevice
                                                   gapRole_ProcessGAPMsg
                                                   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_AppCGs        000006CF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D1 - 000006D2 (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   gapRole_ProcessGAPMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           pGapRoles_ParamUpdateCB
                                   000006D1 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B093 - 0000B4FA (0x468 bytes), align: 0
  Segment part 46.            Intra module refs:   GAPRole_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter    0000B093 
               calls direct
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B4FB - 0000B7BF (0x2c5 bytes), align: 0
  Segment part 48.            Intra module refs:   GAPRole_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter    0000B4FB 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B7C0 - 0000B7E8 (0x29 bytes), align: 0
  Segment part 50.            Intra module refs:   GAPRole_StartDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice     0000B7C0 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_RegisterAppCBs
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B7E9 - 0000B80F (0x27 bytes), align: 0
  Segment part 54.            Intra module refs:   GAPRole_TerminateConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection
                                   0000B7E9 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B810 - 0000B8C1 (0xb2 bytes), align: 0
  Segment part 56.            Intra module refs:   GAPRole_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init            0000B810 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init_Beacon     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000B8C2 - 0000BA94 (0x1d3 bytes), align: 0
  Segment part 60.            Intra module refs:   GAPRole_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent    0000B8C2 
               calls direct
               XSTACK = 00000000 ( 0000001E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BA95 - 0000BBCF (0x13b bytes), align: 0
  Segment part 62.            Intra module refs:   gapRole_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg
                                   0000BA95 
               calls direct
               XSTACK = 0000001A ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000BBD0 - 0000C08A (0x4bb bytes), align: 0
  Segment part 64.            Intra module refs:   gapRole_ProcessGAPMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg   0000BBD0 
               calls direct
               XSTACK = 00000012 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C08B - 0000C0C3 (0x39 bytes), align: 0
  Segment part 66.            Intra module refs:   gapRole_SetupGAP::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SetupGAP        0000C08B 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C0C4 - 0000C107 (0x44 bytes), align: 0
  Segment part 68.            Intra module refs:   gapRole_HandleParamUpdateNoSuccess::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_HandleParamUpdateNoSuccess
                                   0000C0C4 
               calls direct
               XSTACK = 0000001A ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C108 - 0000C219 (0x112 bytes), align: 0
  Segment part 70.            Intra module refs:   gapRole_startConnUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate
                                   0000C108 
               calls direct
               XSTACK = 0000001A ( 0000001A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C21A - 0000C2D9 (0xc0 bytes), align: 0
  Segment part 72.            Intra module refs:   GAPRole_SendUpdateParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam
                                   0000C21A 
               calls direct
               XSTACK = 00000004 ( 0000000F )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000187 - 00000187 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   gapRole_AdvEnabled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000188 - 00000189 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   gapRole_AdvertOffTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000018A - 0000018A (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   gapRole_AdvertDataLen
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000018B - 000001A9 (0x1f bytes), align: 0
  Segment part 20.            Intra module refs:   gapRole_AdvertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001AA - 000001AB (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   gapRole_ConnectionHandle
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001AC - 000001AD (0x2 bytes), align: 0
  Segment part 34.            Intra module refs:   gapRole_MinConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001AE - 000001AF (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   gapRole_MaxConnInterval
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B0 - 000001B1 (0x2 bytes), align: 0
  Segment part 39.            Intra module refs:   gapRole_TimeoutMultiplier
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000072E - 00000733 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SetParameter::?relay
                                   0000072E        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   performPeriodicTask (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000734 - 00000739 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_GetParameter::?relay
                                   00000734        SimpleProfile_SetParameter (simpleGATTprofile)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000073A - 0000073F (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_StartDevice::?relay
                                   0000073A        SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_RegisterAppCBs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000740 - 00000745 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   gapRole_HandleParamUpdateNoSuccess
                                                   gapRole_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_TerminateConnection::?relay
                                   00000740        ProcessPairStateCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000746 - 0000074B (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init::?relay    00000746        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_Init_Beacon::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000074C - 00000751 (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_ProcessEvent::?relay
                                   0000074C        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000752 - 00000757 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   GAPRole_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessOSALMsg::?relay
                                   00000752 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000758 - 0000075D (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   gapRole_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_ProcessGAPMsg::?relay
                                   00000758 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000075E - 00000763 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   GAPRole_StartDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_SetupGAP::?relay
                                   0000075E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000764 - 00000769 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   GAPRole_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_HandleParamUpdateNoSuccess::?relay
                                   00000764 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000076A - 0000076F (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   GAPRole_ProcessEvent
                                                   GAPRole_SendUpdateParam
                                                   GAPRole_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           gapRole_startConnUpdate::?relay
                                   0000076A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000770 - 00000775 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   gapRole_HandleParamUpdateNoSuccess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAPRole_SendUpdateParam::?relay
                                   00000770 

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\simpleBLEPeripheral.r51
  PROGRAM MODULE, NAME : simpleBLEPeripheral

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
           LOCAL                   ADDRESS         
           =====                   =======         
           P0                      00000080 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D3 - 000006D3 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_TaskID
                                   000006D3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D4 - 000006D4 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProfileState         000006D4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C77 - 00000C7D (0x7 bytes), align: 0
  Segment part 18.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   SimpleBLEPeripheral_ProcessEvent
                                                   performPeriodicTask
           LOCAL                   ADDRESS         
           =====                   =======         
           advertData              00000C77 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C7E - 00000C92 (0x15 bytes), align: 0
  Segment part 20.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           attDeviceName           00000C7E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D5 - 000006D6 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   performPeriodicTask
                                                   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntcTemp                 000006D5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D7 - 000006D8 (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntcTempCnt              000006D7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006D9 - 000006DA (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntcTempAdBandTop        000006D9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006DB - 000006DC (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   SimpleBLEPeripheral_Init
                                                   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntcTempAdBandBtm        000006DB 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008000 - 00008579 (0x57a bytes), align: 0
  Segment part 26.            Intra module refs:   read_temperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ntcTempTable            00008000 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006DD - 000006EC (0x10 bytes), align: 0
  Segment part 27.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   read_batt_level
           LOCAL                   ADDRESS         
           =====                   =======         
           bat_ad_buf              000006DD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006ED - 000006EE (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   read_batt_level
           LOCAL                   ADDRESS         
           =====                   =======         
           bat_ad_ct               000006ED 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006EF - 000006EF (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   performPeriodicTask
                                                   read_batt_level
           LOCAL                   ADDRESS         
           =====                   =======         
           bat_ad_avg              000006EF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006F0 - 000006F0 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           bat_ad_init_finish      000006F0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000006F1 - 00000700 (0x10 bytes), align: 0
  Segment part 31.            Intra module refs:   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntc_ad_buf              000006F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000701 - 00000702 (0x2 bytes), align: 0
  Segment part 32.            Intra module refs:   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntc_ad_ct               00000701 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000703 - 00000704 (0x2 bytes), align: 0
  Segment part 33.            Intra module refs:   read_temperature
           LOCAL                   ADDRESS         
           =====                   =======         
           ntc_ad_avg              00000703 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000705 - 00000705 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   ProcessPairStateCB
                                                   peripheralStateNotificationCB
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEState          00000705 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000706 - 00000706 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   ProcessPairStateCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gPairStatus             00000706 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C93 - 00000C96 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_PeripheralCBs
                                   00000C93 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C97 - 00000C9A (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_BondMgrCBs
                                   00000C97 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C9B - 00000C9C (0x2 bytes), align: 0
  Segment part 40.            Intra module refs:   SimpleBLEPeripheral_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_SimpleProfileCBs
                                   00000C9B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D158 - 0000D36A (0x213 bytes), align: 0
  Segment part 49.            Intra module refs:   SimpleBLEPeripheral_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init
                                   0000D158 
               calls direct
               XSTACK = 00000000 ( 00000020 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D36B - 0000D4C6 (0x15c bytes), align: 0
  Segment part 51.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent
                                   0000D36B 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D4C7 - 0000D4C9 (0x3 bytes), align: 0
  Segment part 53.            Intra module refs:   simpleBLEPeripheral_ProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_ProcessOSALMsg
                                   0000D4C7 
               XSTACK = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D4CA - 0000D5A9 (0xe0 bytes), align: 0
  Segment part 55.            Intra module refs:   peripheralStateNotificationCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB
                                   0000D4CA 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000017 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D5AA - 0000D6BA (0x111 bytes), align: 0
  Segment part 57.            Intra module refs:   performPeriodicTask::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           performPeriodicTask     0000D5AA 
               calls direct
               XSTACK = 0000000E ( 0000000B )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C9D - 00000C9E (0x2 bytes), align: 0
  Segment part 42.            Intra module refs:   performPeriodicTask
           LOCAL                   ADDRESS         
           =====                   =======         
           performPeriodicTask::BattMeasCT
                                   00000C9D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000707 - 00000708 (0x2 bytes), align: 0
  Segment part 44.            Intra module refs:   performPeriodicTask
           LOCAL                   ADDRESS         
           =====                   =======         
           performPeriodicTask::NtcMeasCT
                                   00000707 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D6BB - 0000D713 (0x59 bytes), align: 0
  Segment part 59.            Intra module refs:   simpleProfileChangeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB   0000D6BB 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000001E )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D714 - 0000D795 (0x82 bytes), align: 0
  Segment part 61.            Intra module refs:   ProcessPasscodeCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ProcessPasscodeCB       0000D714 
               calls direct, is indirectly called
               XSTACK = 00000001 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D796 - 0000D834 (0x9f bytes), align: 0
  Segment part 63.            Intra module refs:   ProcessPairStateCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ProcessPairStateCB      0000D796 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D835 - 0000DC92 (0x45e bytes), align: 0
  Segment part 65.            Intra module refs:   read_temperature::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           read_temperature        0000D835 
               calls direct
               XSTACK = 0000000B ( 00000012 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DC93 - 0000DD7F (0xed bytes), align: 0
  Segment part 67.            Intra module refs:   read_batt_level::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           read_batt_level         0000DC93 
               calls direct
               XSTACK = 0000000E ( 0000000D )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000709 - 0000070A (0x2 bytes), align: 0
  Segment part 45.            Intra module refs:   bubble
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           res                     00000709 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DD80 - 0000DF8D (0x20e bytes), align: 0
  Segment part 69.            Intra module refs:   bubble::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bubble                  0000DD80 
               XSTACK = 00000012 ( 0000000F )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B2 - 000001B8 (0x7 bytes), align: 0
  Segment part 19.            Intra module refs:   advertData
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B9 - 000001CD (0x15 bytes), align: 0
  Segment part 21.            Intra module refs:   attDeviceName
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001CE - 000001D1 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   simpleBLEPeripheral_PeripheralCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001D2 - 000001D5 (0x4 bytes), align: 0
  Segment part 39.            Intra module refs:   simpleBLEPeripheral_BondMgrCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001D6 - 000001D7 (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   simpleBLEPeripheral_SimpleProfileCBs
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001D8 - 000001D9 (0x2 bytes), align: 0
  Segment part 43.            Intra module refs:   performPeriodicTask::BattMeasCT
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000776 - 0000077B (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_Init::?relay
                                   00000776        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000077C - 00000781 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleBLEPeripheral_ProcessEvent::?relay
                                   0000077C        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000782 - 00000787 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleBLEPeripheral_ProcessOSALMsg::?relay
                                   00000782 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000788 - 0000078D (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 37
           LOCAL                   ADDRESS         
           =====                   =======         
           peripheralStateNotificationCB::?relay
                                   00000788 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000078E - 00000793 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           performPeriodicTask::?relay
                                   0000078E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000794 - 00000799 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChangeCB::?relay
                                   00000794 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000079A - 0000079F (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 39
           LOCAL                   ADDRESS         
           =====                   =======         
           ProcessPasscodeCB::?relay
                                   0000079A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A0 - 000007A5 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 39
           LOCAL                   ADDRESS         
           =====                   =======         
           ProcessPairStateCB::?relay
                                   000007A0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A6 - 000007AB (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   performPeriodicTask
           LOCAL                   ADDRESS         
           =====                   =======         
           read_temperature::?relay
                                   000007A6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007AC - 000007B1 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   performPeriodicTask
           LOCAL                   ADDRESS         
           =====                   =======         
           read_batt_level::?relay
                                   000007AC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B2 - 000007B7 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   read_batt_level
                                                   read_temperature
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bubble::?relay          000007B2 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000869C - 000086A0 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   SimpleBLEPeripheral_Init
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085FB - 0000860E (0x14 bytes), align: 0
  Segment part 10.            Intra module refs:   simpleProfileChangeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000867C - 00008685 (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   ProcessPasscodeCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000865F - 0000866E (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   ProcessPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000864F - 0000865E (0x10 bytes), align: 0
  Segment part 13.            Intra module refs:   ProcessPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000866F - 0000867B (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   ProcessPairStateCB
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000860F - 0000861E (0x10 bytes), align: 0
  Segment part 15.            Intra module refs:   ProcessPairStateCB
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 46. TENTATIVE. Used definition from hal_drivers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008715 - 00008718 (0x4 bytes), align: 0
  Segment part 47.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          00008715 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008719 - 0000871C (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   SimpleBLEPeripheral_ProcessEvent
                                                   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            00008719 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008000 - 00008579 (0x57a bytes), align: 0
  Segment part 71.            Intra module refs:   ntcTempTable
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000869C - 000086A0 (0x5 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085FB - 0000860E (0x14 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000867C - 00008685 (0xa bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000865F - 0000866E (0x10 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000864F - 0000865E (0x10 bytes), align: 0
  Segment part 76.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000866F - 0000867B (0xd bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000860F - 0000861E (0x10 bytes), align: 0
  Segment part 78.            Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008715 - 00008718 (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008719 - 0000871C (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   __Constant_a

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\AirTH(NTC)\CC2541DB\CC2541\Obj\simpleGATTprofile.r51
  PROGRAM MODULE, NAME : simpleGATTprofile

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008754 - 00008755 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   simpleProfileService
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileServUUID   00008754 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008752 - 00008753 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar1UUID
                                   00008752 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008750 - 00008751 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar2UUID
                                   00008750 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000874E - 0000874F (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar3UUID
                                   0000874E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000868E - 0000868F (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar4UUID
                                   0000868E 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000875C - 0000875D (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 41
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfilechar5UUID
                                   0000875C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000070B - 0000070C (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   SimpleProfile_RegisterAppCBs
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_AppCBs    0000070B 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008748 - 0000874A (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileService    00008748 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C9F - 00000C9F (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1Props
                                   00000C9F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000070D - 00000720 (0x14 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 41
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1      0000070D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CA0 - 00000CB0 (0x11 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar1UserDesp
                                   00000CA0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CB1 - 00000CB1 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2Props
                                   00000CB1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000721 - 00000721 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 41
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2      00000721 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CB2 - 00000CC2 (0x11 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar2UserDesp
                                   00000CB2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CC3 - 00000CC3 (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3Props
                                   00000CC3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000722 - 00000722 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 41
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3      00000722 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CC4 - 00000CD4 (0x11 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar3UserDesp
                                   00000CC4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CD5 - 00000CD5 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Props
                                   00000CD5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000723 - 0000072F (0xd bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 41
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4      00000723 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000730 - 00000735 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4Config
                                   00000730 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CD6 - 00000CE6 (0x11 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar4UserDesp
                                   00000CD6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CE7 - 00000CE7 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5Props
                                   00000CE7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000736 - 0000073A (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 41
                                                   SimpleProfile_GetParameter
                                                   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5      00000736 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CE8 - 00000CF8 (0x11 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 41
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileChar5UserDesp
                                   00000CE8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CF9 - 00000D80 (0x88 bytes), align: 0
  Segment part 40.            Intra module refs:   SimpleProfile_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfileAttrTbl    00000CF9 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           simpleProfileCBs        
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A958 - 0001A974 (0x1d bytes), align: 0
  Segment part 45.            Intra module refs:   SimpleProfile_RegisterAppCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs
                                   0001A958 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A975 - 0001AAFC (0x188 bytes), align: 0
  Segment part 47.            Intra module refs:   SimpleProfile_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter
                                   0001A975 
               calls direct
               XSTACK = 00000000 ( 0000002B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AAFD - 0001ABB2 (0xb6 bytes), align: 0
  Segment part 49.            Intra module refs:   SimpleProfile_GetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter
                                   0001AAFD 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_ReadAttrCB
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_WriteAttrCB
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           simpleProfile_HandleConnStatusCB
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001DA - 000001DA (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   simpleProfileChar1Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001DB - 000001EB (0x11 bytes), align: 0
  Segment part 18.            Intra module refs:   simpleProfileChar1UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001EC - 000001EC (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   simpleProfileChar2Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001ED - 000001FD (0x11 bytes), align: 0
  Segment part 23.            Intra module refs:   simpleProfileChar2UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001FE - 000001FE (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   simpleProfileChar3Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001FF - 0000020F (0x11 bytes), align: 0
  Segment part 28.            Intra module refs:   simpleProfileChar3UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000210 - 00000210 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   simpleProfileChar4Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000211 - 00000221 (0x11 bytes), align: 0
  Segment part 34.            Intra module refs:   simpleProfileChar4UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000222 - 00000222 (0x1 bytes), align: 0
  Segment part 36.            Intra module refs:   simpleProfileChar5Props
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000223 - 00000233 (0x11 bytes), align: 0
  Segment part 39.            Intra module refs:   simpleProfileChar5UserDesp
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000234 - 000002BB (0x88 bytes), align: 0
  Segment part 41.            Intra module refs:   simpleProfileAttrTbl
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_AddService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B8 - 000007BD (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_RegisterAppCBs::?relay
                                   000007B8        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007BE - 000007C3 (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_SetParameter::?relay
                                   000007BE        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C4 - 000007C9 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SimpleProfile_GetParameter::?relay
                                   000007C4        simpleProfileChangeCB (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008754 - 00008755 (0x2 bytes), align: 0
  Segment part 57.            Intra module refs:   simpleProfileServUUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008752 - 00008753 (0x2 bytes), align: 0
  Segment part 58.            Intra module refs:   simpleProfilechar1UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008750 - 00008751 (0x2 bytes), align: 0
  Segment part 59.            Intra module refs:   simpleProfilechar2UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000874E - 0000874F (0x2 bytes), align: 0
  Segment part 60.            Intra module refs:   simpleProfilechar3UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000868E - 0000868F (0x2 bytes), align: 0
  Segment part 61.            Intra module refs:   simpleProfilechar4UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000875C - 0000875D (0x2 bytes), align: 0
  Segment part 62.            Intra module refs:   simpleProfilechar5UUID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008748 - 0000874A (0x3 bytes), align: 0
  Segment part 63.            Intra module refs:   simpleProfileService
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 64. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\Libraries\CC2541DB\bin\CC2541_BLE_peri.lib
  LIBRARY MODULE, NAME : att_server

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B72C - 0001B742 (0x17 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp            0001B72C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B743 - 0001B771 (0x2f bytes), align: 0
  Segment part 8.             Intra module refs:   ATT_ExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp      0001B743 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B772 - 0001B7AA (0x39 bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_FindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp         0001B772 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7AB - 0001B7D2 (0x28 bytes), align: 0
  Segment part 12.            Intra module refs:   ATT_FindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp
                                   0001B7AB 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7D3 - 0001B7FA (0x28 bytes), align: 0
  Segment part 14.            Intra module refs:   ATT_ReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp       0001B7D3 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7FB - 0001B800 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B801 - 0001B817 (0x17 bytes), align: 0
  Segment part 17.            Intra module refs:   ATT_ReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp             0001B801 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B818 - 0001B82E (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_ReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp         0001B818 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B82F - 0001B844 (0x16 bytes), align: 0
  Segment part 21.            Intra module refs:   ATT_ReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp        0001B82F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B845 - 0001B86B (0x27 bytes), align: 0
  Segment part 23.            Intra module refs:   ATT_ReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp    0001B845 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B86C - 0001B87E (0x13 bytes), align: 0
  Segment part 25.            Intra module refs:   ATT_WriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp            0001B86C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B87F - 0001B894 (0x16 bytes), align: 0
  Segment part 27.            Intra module refs:   ATT_PrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp     0001B87F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B895 - 0001B8A7 (0x13 bytes), align: 0
  Segment part 29.            Intra module refs:   ATT_ExecuteWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp     0001B895 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8A8 - 0001B8B7 (0x10 bytes), align: 0
  Segment part 31.            Intra module refs:   ATT_HandleValueNoti::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti     0001B8A8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8B8 - 0001B8BD (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_HandleValueInd
                                                   ATT_HandleValueNoti
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8BE - 0001B8C1 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_ExecuteWriteRsp
                                                   ATT_WriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8C2 - 0001B8C7 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   ATT_ErrorRsp
                                                   ATT_PrepareWriteRsp
                                                   ATT_ReadBlobRsp
                                                   ATT_ReadMultiRsp
                                                   ATT_ReadRsp
                                                   Segment part 33
                                                   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8C8 - 0001B8CC (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   ATT_ExchangeMTURsp
                                                   ATT_FindByTypeValueRsp
                                                   ATT_FindInfoRsp
                                                   ATT_ReadByGrpTypeRsp
                                                   ATT_ReadByTypeRsp
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8CD - 0001B8DE (0x12 bytes), align: 0
  Segment part 37.            Intra module refs:   ATT_HandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd      0001B8CD 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007CA - 000007CF (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ErrorRsp::?relay    000007CA        gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D0 - 000007D5 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExchangeMTURsp::?relay
                                   000007D0        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D6 - 000007DB (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindInfoRsp::?relay
                                   000007D6        gattProcessFindInfoReq (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007DC - 000007E1 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_FindByTypeValueRsp::?relay
                                   000007DC        gattServApp_ProcessFindByTypeValueReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E2 - 000007E7 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByTypeRsp::?relay
                                   000007E2        gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E8 - 000007ED (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadRsp::?relay     000007E8        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007EE - 000007F3 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadBlobRsp::?relay
                                   000007EE        gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F4 - 000007F9 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadMultiRsp::?relay
                                   000007F4        gattServApp_ProcessReadMultiReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007FA - 000007FF (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ReadByGrpTypeRsp::?relay
                                   000007FA        gattServApp_ProcessReadByGrpTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000800 - 00000805 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_WriteRsp::?relay    00000800        gattServApp_ProcessWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000806 - 0000080B (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_PrepareWriteRsp::?relay
                                   00000806        gattServApp_ProcessPrepareWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000080C - 00000811 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ExecuteWriteRsp::?relay
                                   0000080C        gattServApp_ProcessExecuteWriteReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000812 - 00000817 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueNoti::?relay
                                   00000812        GATT_Notification (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000818 - 0000081D (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_HandleValueInd::?relay
                                   00000818        GATT_Indication (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : att_util

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000863F - 0000864E (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   ATT_ConvertUUIDto128
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           btBaseUUID              0000863F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000154DF - 000155D8 (0xfa bytes), align: 0
  Segment part 7.             Intra module refs:   ATT_ParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket         000154DF 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155D9 - 000155DD (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000155DE - 00015607 (0x2a bytes), align: 0
  Segment part 10.            Intra module refs:   ATT_BuildErrorRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp       000155DE 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseErrorRsp       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTUReq
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015608 - 00015612 (0xb bytes), align: 0
  Segment part 16.            Intra module refs:   ATT_BuildExchangeMTURsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015613 - 00015633 (0x21 bytes), align: 0
  Segment part 17.            Intra module refs:   ATT_ParseExchangeMTUReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq
                                   00015613 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015634 - 00015635 (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   ATT_BuildExchangeMTURsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp
                                   00015634 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015636 - 00015637 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015638 - 0001563E (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   Segment part 22
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTURsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001563F - 00015643 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoReq    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015644 - 00015664 (0x21 bytes), align: 0
  Segment part 29.            Intra module refs:   ATT_ParseFindInfoReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq    00015644 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015665 - 00015716 (0xb2 bytes), align: 0
  Segment part 31.            Intra module refs:   ATT_BuildFindInfoRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp    00015665 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015717 - 00015724 (0xe bytes), align: 0
  Segment part 33.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015725 - 00015740 (0x1c bytes), align: 0
  Segment part 34.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015741 - 00015741 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015742 - 00015745 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015746 - 0001574D (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   ATT_BuildFindByTypeValueRsp
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001574E - 0001574E (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001574F - 00015756 (0x8 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015757 - 0001575D (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 34
                                                   Segment part 39
                                                   Segment part 47
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoRsp    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001575E - 00015767 (0xa bytes), align: 0
  Segment part 43.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015768 - 00015770 (0x9 bytes), align: 0
  Segment part 47.            Intra module refs:   ATT_BuildFindInfoRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015771 - 00015835 (0xc5 bytes), align: 0
  Segment part 48.            Intra module refs:   ATT_ParseFindByTypeValueReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq
                                   00015771 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015836 - 0001583D (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   ATT_CompareUUID
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001583E - 00015894 (0x57 bytes), align: 0
  Segment part 51.            Intra module refs:   ATT_BuildFindByTypeValueRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp
                                   0001583E 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015895 - 00015899 (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001589A - 000158A1 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   ATT_BuildErrorRsp
                                                   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158A2 - 000158A6 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   ATT_ParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158A7 - 000158AB (0x5 bytes), align: 0
  Segment part 58.            Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158AC - 000158B0 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseWriteReq
                                                   Segment part 58
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158B1 - 0001592D (0x7d bytes), align: 0
  Segment part 62.            Intra module refs:   ATT_ParseReadByTypeReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq
                                   000158B1 
               calls direct
               XSTACK = 00000004 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001592E - 00015936 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015937, align: 0
  Segment part 65.            Intra module refs:   ATT_BuildReadByTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp
                                   00015937 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015937 - 0001596F (0x39 bytes), align: 0
  Segment part 67.            Intra module refs:   ATT_BuildReadByGrpTypeRsp
                                                   ATT_BuildReadByTypeRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015970 - 00015971 (0x2 bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015972 - 00015979 (0x8 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   Segment part 84
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 72. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadReq        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001597A - 0001599B (0x22 bytes), align: 0
  Segment part 74.            Intra module refs:   ATT_ParseReadReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq        0001597A 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001599C - 000159A2 (0x7 bytes), align: 0
  Segment part 76.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159A3 - 000159AA (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159AB - 000159B0 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   ATT_ParseExchangeMTUReq
                                                   ATT_ParseReadReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159B1, align: 0
  Segment part 79.            Intra module refs:   ATT_BuildReadRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp        000159B1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159B1 - 000159D7 (0x27 bytes), align: 0
  Segment part 81.            Intra module refs:   ATT_BuildReadBlobRsp
                                                   ATT_BuildReadMultiRsp
                                                   ATT_BuildReadRsp
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadRsp        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159D8 - 000159FD (0x26 bytes), align: 0
  Segment part 84.            Intra module refs:   ATT_BuildPrepareWriteRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159FE - 00015A02 (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 67
                                                   Segment part 84
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A03 - 00015A07 (0x5 bytes), align: 0
  Segment part 86.            Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   Segment part 81
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A08 - 00015A0B (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A0C - 00015A19 (0xe bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A1A - 00015A27 (0xe bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A28 - 00015A36 (0xf bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 54
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A37 - 00015AB1 (0x7b bytes), align: 0
  Segment part 91.            Intra module refs:   ATT_ParseWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq       00015A37 
               calls direct
               XSTACK = 00000004 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AB2 - 00015AB4 (0x3 bytes), align: 0
  Segment part 93.            Intra module refs:   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AB5 - 00015AB9 (0x5 bytes), align: 0
  Segment part 94.            Intra module refs:   ATT_ConvertUUIDto128
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ABA - 00015ABF (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   ATT_ParseExecuteWriteReq
                                                   ATT_ParsePacket
                                                   ATT_ParseReadByTypeReq
                                                   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildWriteReq       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AC0 - 00015AE8 (0x29 bytes), align: 0
  Segment part 98.            Intra module refs:   ATT_BuildHandleValueInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AE9 - 00015AEC (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   Segment part 16
                                                   Segment part 98
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015AED - 00015B00 (0x14 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 89
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B01 - 00015B01 (0x1 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B02 - 00015B08 (0x7 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 100
                                                   Segment part 101
                                                   Segment part 159
                                                   Segment part 90
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteRsp       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobReq    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B09 - 00015B2A (0x22 bytes), align: 0
  Segment part 107.           Intra module refs:   ATT_ParseReadBlobReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq    00015B09 
               XSTACK = 00000004 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B2B - 00015B31 (0x7 bytes), align: 0
  Segment part 109.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B32 - 00015B53 (0x22 bytes), align: 0
  Segment part 110.           Intra module refs:   ATT_ParseFindInfoReq
                                                   ATT_ParseReadBlobReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B54 - 00015B66 (0x13 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 110
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B67 - 00015B69 (0x3 bytes), align: 0
  Segment part 112.           Intra module refs:   ATT_BuildReadBlobRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp    00015B67 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobRsp    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 116. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiReq   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B6A - 00015B7E (0x15 bytes), align: 0
  Segment part 118.           Intra module refs:   ATT_BuildFindByTypeValueRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B7F - 00015BEE (0x70 bytes), align: 0
  Segment part 119.           Intra module refs:   ATT_ParseReadMultiReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq   00015B7F 
               XSTACK = 00000004 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015BEF - 00015BF2 (0x4 bytes), align: 0
  Segment part 121.           Intra module refs:   ATT_ParseExecuteWriteReq
                                                   ATT_ParseReadMultiReq
                                                   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015BF3 - 00015BF8 (0x6 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 109
                                                   Segment part 121
                                                   Segment part 178
                                                   Segment part 57
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015BF9 - 00015BFB (0x3 bytes), align: 0
  Segment part 123.           Intra module refs:   ATT_BuildReadMultiRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp   00015BF9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 125. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiRsp   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 127. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015BFC - 00015BFE (0x3 bytes), align: 0
  Segment part 128.           Intra module refs:   ATT_BuildReadByGrpTypeRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp
                                   00015BFC 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 130. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByGrpTypeRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 132. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 133. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 134. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015BFF - 00015C5E (0x60 bytes), align: 0
  Segment part 136.           Intra module refs:   ATT_ParsePrepareWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq
                                   00015BFF 
               calls direct
               XSTACK = 00000004 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C5F - 00015C6B (0xd bytes), align: 0
  Segment part 138.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C6C - 00015C72 (0x7 bytes), align: 0
  Segment part 139.           Intra module refs:   ATT_ParseWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C73 - 00015C74 (0x2 bytes), align: 0
  Segment part 140.           Intra module refs:   Segment part 139
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C75 - 00015C75 (0x1 bytes), align: 0
  Segment part 141.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
                                                   Segment part 140
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C76 - 00015C7B (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   ATT_ParseFindByTypeValueReq
                                                   Segment part 141
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C7C - 00015C85 (0xa bytes), align: 0
  Segment part 143.           Intra module refs:   ATT_ParseReadMultiReq
                                                   Segment part 139
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C86 - 00015C86 (0x1 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 142
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C87 - 00015C8C (0x6 bytes), align: 0
  Segment part 145.           Intra module refs:   Segment part 144
                                                   Segment part 186
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C8D - 00015C9D (0x11 bytes), align: 0
  Segment part 146.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C9E - 00015CA5 (0x8 bytes), align: 0
  Segment part 147.           Intra module refs:   ATT_ParsePrepareWriteReq
                                                   ATT_ParseReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CA6 - 00015CA8 (0x3 bytes), align: 0
  Segment part 148.           Intra module refs:   ATT_BuildPrepareWriteRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp
                                   00015CA6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 150. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CA9 - 00015CB1 (0x9 bytes), align: 0
  Segment part 152.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExecuteWriteReq
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CB2 - 00015CB5 (0x4 bytes), align: 0
  Segment part 157.           Intra module refs:   ATT_BuildErrorRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CB6 - 00015CB9 (0x4 bytes), align: 0
  Segment part 158.           Intra module refs:   ATT_BuildErrorRsp
                                                   Segment part 157
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CBA - 00015CBD (0x4 bytes), align: 0
  Segment part 159.           Intra module refs:   Segment part 118
                                                   Segment part 158
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CBE - 00015CED (0x30 bytes), align: 0
  Segment part 160.           Intra module refs:   ATT_ParseExecuteWriteReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq
                                   00015CBE 
               XSTACK = 00000004 ( 00000000 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CEE - 00015CF0 (0x3 bytes), align: 0
  Segment part 164.           Intra module refs:   ATT_BuildHandleValueInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd
                                   00015CEE 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueInd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CF1 - 00015CFD (0xd bytes), align: 0
  Segment part 168.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015CFE - 00015D02 (0x5 bytes), align: 0
  Segment part 169.           Intra module refs:   ATT_ParsePrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D03 - 00015D0D (0xb bytes), align: 0
  Segment part 170.           Intra module refs:   Segment part 169
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueCfm
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D0E - 00015DF6 (0xe9 bytes), align: 0
  Segment part 173.           Intra module refs:   attSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg              00015D0E 
               calls direct
               XSTACK = 00000002 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015DF7 - 00015DFB (0x5 bytes), align: 0
  Segment part 175.           Intra module refs:   ATT_BuildFindInfoRsp
                                                   attSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015DFC - 00015EAA (0xaf bytes), align: 0
  Segment part 176.           Intra module refs:   ATT_CompareUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID         00015DFC 
               calls direct
               XSTACK = 00000004 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EAB - 00015EB1 (0x7 bytes), align: 0
  Segment part 178.           Intra module refs:   ATT_CompareUUID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EB2 - 00015F0F (0x5e bytes), align: 0
  Segment part 179.           Intra module refs:   ATT_ConvertUUIDto128::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128    00015EB2 
               calls direct
               XSTACK = 0000001C ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F10 - 00015F18 (0x9 bytes), align: 0
  Segment part 181.           Intra module refs:   ATT_ConvertUUIDto128
                                                   ATT_ParseFindByTypeValueReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto16     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 184. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F19 - 00015F1C (0x4 bytes), align: 0
  Segment part 186.           Intra module refs:   ATT_ConvertUUIDto128
                                                   Segment part 81
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_SetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_GetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000081E - 00000823 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePacket::?relay
                                   0000081E        gattProcessRxData (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000824 - 00000829 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildErrorRsp::?relay
                                   00000824        ATT_ErrorRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseErrorRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTUReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000082A - 0000082F (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTUReq::?relay
                                   0000082A        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000830 - 00000835 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExchangeMTURsp::?relay
                                   00000830        ATT_ExchangeMTURsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExchangeMTURsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000836 - 0000083B (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoReq::?relay
                                   00000836        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000083C - 00000841 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindInfoRsp::?relay
                                   0000083C        ATT_FindInfoRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000842 - 00000847 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueReq::?relay
                                   00000842        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000848 - 0000084D (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildFindByTypeValueRsp::?relay
                                   00000848        ATT_FindByTypeValueRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseFindByTypeValueRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000084E - 00000853 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeReq::?relay
                                   0000084E        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000854 - 00000859 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByTypeRsp::?relay
                                   00000854        ATT_ReadByTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByTypeRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 73. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000085A - 0000085F (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadReq::?relay
                                   0000085A        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000860 - 00000865 (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadRsp::?relay
                                   00000860        ATT_ReadRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000866 - 0000086B (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteReq::?relay
                                   00000866        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000086C - 00000871 (0x6 bytes), align: 0
  Segment part 108.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobReq::?relay
                                   0000086C        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000872 - 00000877 (0x6 bytes), align: 0
  Segment part 113.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadBlobRsp::?relay
                                   00000872        ATT_ReadBlobRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 115. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadBlobRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000878 - 0000087D (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiReq::?relay
                                   00000878        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000087E - 00000883 (0x6 bytes), align: 0
  Segment part 124.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadMultiRsp::?relay
                                   0000087E        ATT_ReadMultiRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 126. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadMultiRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000884 - 00000889 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildReadByGrpTypeRsp::?relay
                                   00000884        ATT_ReadByGrpTypeRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseReadByGrpTypeRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 135. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000088A - 0000088F (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteReq::?relay
                                   0000088A        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000890 - 00000895 (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildPrepareWriteRsp::?relay
                                   00000890        ATT_PrepareWriteRsp (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 151. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParsePrepareWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 156. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildExecuteWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000896 - 0000089B (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteReq::?relay
                                   00000896        Segment part 12 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseExecuteWriteRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000089C - 000008A1 (0x6 bytes), align: 0
  Segment part 165.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_BuildHandleValueInd::?relay
                                   0000089C        Segment part 33 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueInd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ParseHandleValueCfm::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A2 - 000008A7 (0x6 bytes), align: 0
  Segment part 174.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           attSendMsg::?relay      000008A2        Segment part 16 (att_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A8 - 000008AD (0x6 bytes), align: 0
  Segment part 177.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_CompareUUID::?relay
                                   000008A8        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 39 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008AE - 000008B3 (0x6 bytes), align: 0
  Segment part 180.           Intra module refs:   ATT_CompareUUID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto128::?relay
                                   000008AE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_ConvertUUIDto16::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ATT_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000863F - 0000864E (0x10 bytes), align: 0
  Segment part 192.           Intra module refs:   btBaseUUID

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_configmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000D81 - 00000D81 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_ParamsInit
                                                   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAppTaskID            00000D81        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000073B - 0000073B (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ParamsInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProfileRole          0000073B        GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000073C - 0000073C (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeviceAddrMode       0000073C        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000073D - 0000073E (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPrivateAddrChangeTimeout
                                   0000073D        GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000073F - 0000073F (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   gapProcessRandomAddrComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAutoAdvPrivateAddrChange
                                   0000073F        GAP_ProcessEvent (gap_task)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000740 - 0000074F (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   Segment part 58
                                                   gapGetDevAddress
                                                   gapGetIRK
                                                   gapGetSRK
                                                   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D82 - 00000DCD (0x4c bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000750 - 00000755 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   gapGetDevAddress
                                                   gapProcessNewAddr
                                                   gapProcessRandomAddrComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001862D - 00018654 (0x28 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_SetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue       0001862D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018655 - 00018670 (0x1c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_GetParamValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue       00018655 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018671 - 00018682 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018683 - 000186B4 (0x32 bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_ParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit          00018683 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000186B5 - 000186B9 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_ParamsInit
                                                   GAP_SecParamsInit
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000186BA - 00018714 (0x5b bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_SecParamsInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit       000186BA 
               calls direct
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018715 - 0001871B (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   GAP_SecParamsInit
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ConfigDeviceAddr    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001871C - 00018721 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   GAP_GetParamValue
                                                   Segment part 28
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018722 - 00018765 (0x44 bytes), align: 0
  Segment part 32.            Intra module refs:   gapReadBD_ADDRStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus    00018722 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018766 - 0001876A (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001876B - 000187B5 (0x4b bytes), align: 0
  Segment part 35.            Intra module refs:   gapReadBufSizeCmdStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus
                                   0001876B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000187B6 - 000187F3 (0x3e bytes), align: 0
  Segment part 37.            Intra module refs:   gapProcessNewAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr       000187B6 
               calls direct
               XSTACK = 00000014 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000187F4 - 00018826 (0x33 bytes), align: 0
  Segment part 39.            Intra module refs:   gapAddAddrAdj::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj           000187F4 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018827 - 00018829 (0x3 bytes), align: 0
  Segment part 41.            Intra module refs:   gapGetIRK
                                                   gapGetSRK
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001882A - 00018830 (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_GetParamValue
                                                   GAP_SetParamValue
                                                   Segment part 41
                                                   gapAddAddrAdj
                                                   gapDetermineAddrType
                                                   gapGetDevAddress
                                                   gapGetDevAddressMode
                                                   gapGetSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018831 - 0001885E (0x2e bytes), align: 0
  Segment part 43.            Intra module refs:   gapDetermineAddrType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType    00018831 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001885F - 000188E7 (0x89 bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessRandomAddrComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete
                                   0001885F 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188E8 - 000188EC (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   gapIncSignCounter
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188ED - 000188ED (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188EE - 000188F3 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_SecParamsInit
                                                   Segment part 48
                                                   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188F4 - 000188FD (0xa bytes), align: 0
  Segment part 50.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000188FE - 00018905 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018906 - 0001890F (0xa bytes), align: 0
  Segment part 52.            Intra module refs:   gapGetSRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK               00018906 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018910 - 0001891C (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   gapGetSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter       00018910 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001891D - 00018943 (0x27 bytes), align: 0
  Segment part 56.            Intra module refs:   gapIncSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter       0001891D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018944 - 0001894F (0xc bytes), align: 0
  Segment part 58.            Intra module refs:   gapGetSignCounter
                                                   gapIncSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018950 - 00018A11 (0xc2 bytes), align: 0
  Segment part 59.            Intra module refs:   gapUpdateConnSignCounter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter
                                   00018950 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018A12 - 00018A1D (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   gapGetDevAddressMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode    00018A12 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018A1E - 00018A35 (0x18 bytes), align: 0
  Segment part 63.            Intra module refs:   gapGetDevAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress        00018A1E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018A36 - 00018A3F (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   gapGetIRK::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK               00018A36 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018A40 - 00018AAD (0x6e bytes), align: 0
  Segment part 67.            Intra module refs:   gapSendDeviceInitDoneEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent
                                   00018A40 
               calls direct
               XSTACK = 0000000A ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AAE - 00018ABD (0x10 bytes), align: 0
  Segment part 69.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendSlaveSecurityReqEvent
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ABE - 00018AC1 (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   gapProcessRandomAddrComplete
                                                   gapUpdateConnSignCounter
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AC2 - 00018AC2 (0x1 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   gapSendDeviceInitDoneEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AC3 - 00018AC5 (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AC6 - 00018ACB (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   gapProcessNewAddr
                                                   gapReadBD_ADDRStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ACC - 00018AD4 (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   gapReadBufSizeCmdStatus
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002BC - 000002BC (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   gapAppTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002BD - 00000308 (0x4c bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000873D - 00008740 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         0000873D 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008B4 - 000008B9 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetParamValue::?relay
                                   000008B4        GAPBondMgr_Register (gapbondmgr)
                                                   GAPRole_SetParameter (peripheral)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008BA - 000008BF (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapUpdateConnSignCounter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetParamValue::?relay
                                   000008BA        GAPRole_GetParameter (peripheral)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   SM_StartPairing (sm_pairing)
                                                   Segment part 40 (gap_peridevmgr)
                                                   Segment part 46 (gap_peridevmgr)
                                                   Segment part 88 (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   smStartRspTimer (sm_mgr)
                                                   smpParsePairingReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008C0 - 000008C5 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ParamsInit::?relay
                                   000008C0        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008C6 - 000008CB (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SecParamsInit::?relay
                                   000008C6        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ConfigDeviceAddr::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008CC - 000008D1 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBD_ADDRStatus::?relay
                                   000008CC        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D2 - 000008D7 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapReadBufSizeCmdStatus::?relay
                                   000008D2        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008D8 - 000008DD (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessNewAddr::?relay
                                   000008D8        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008DE - 000008E3 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   gapProcessNewAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAddrAdj::?relay   000008DE        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008E4 - 000008E9 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDetermineAddrType::?relay
                                   000008E4        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008EA - 000008EF (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessRandomAddrComplete::?relay
                                   000008EA        gapProcessHCICmdCompleteEvt (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008F0 - 000008F5 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSRK::?relay       000008F0        SM_GenerateAuthenSig (sm_mgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008F6 - 000008FB (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetSignCounter::?relay
                                   000008F6        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008FC - 00000901 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIncSignCounter::?relay
                                   000008FC        SM_GenerateAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000902 - 00000907 (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUpdateConnSignCounter::?relay
                                   00000902        SM_VerifyAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000908 - 0000090D (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddressMode::?relay
                                   00000908        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000090E - 00000913 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetDevAddress::?relay
                                   0000090E        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000914 - 00000919 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapGetIRK::?relay       00000914        GAP_ProcessEvent (gap_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000091A - 0000091F (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   gapReadBD_ADDRStatus
                                                   gapReadBufSizeCmdStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendDeviceInitDoneEvent::?relay
                                   0000091A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendSlaveSecurityReqEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000873D - 00008740 (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   __Constant_ea60
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 78. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_devmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapDiscReq             
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000756 - 00000757 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gapIsAdvertising
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pGapAdvertState         00000756        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 41 (gap_peridevmgr)
                                                   Segment part 48 (gap_peridevmgr)
                                                   Segment part 87 (gap_peridevmgr)
                                                   Segment part 99 (gap_peridevmgr)
                                                   gapFreeAdvertState (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF00 - 0001BF06 (0x7 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_ResolvePrivateAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr
                                   0001BF00 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF07 - 0001BF0D (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ResolvePrivateAddr
                                                   gapIsAdvertising
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF0E - 0001BF25 (0x18 bytes), align: 0
  Segment part 11.            Intra module refs:   gapIsAdvertising::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising        0001BF0E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsScanning           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF26 - 0001BF3D (0x18 bytes), align: 0
  Segment part 15.            Intra module refs:   gapValidADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType          0001BF26 
               XSTACK = 00000012 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF3E - 0001BFD6 (0x99 bytes), align: 0
  Segment part 17.            Intra module refs:   gapFindADType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType           0001BF3E 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000920 - 00000925 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ResolvePrivateAddr::?relay
                                   00000920        gapBondMgrResolvePrivateAddr (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000926 - 0000092B (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsAdvertising::?relay
                                   00000926        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapIsScanning::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000092C - 00000931 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   gapFindADType
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapValidADType::?relay
                                   0000092C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000932 - 00000937 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindADType::?relay   00000932        isLimitedDiscoverableMode (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_linkmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000758 - 00000759 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEstLink                00000758 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075A - 0000075B (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_Authenticate
                                                   Segment part 102
                                                   Segment part 108
                                                   Segment part 111
                                                   Segment part 25
                                                   Segment part 49
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAuthLink               0000075A        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075C - 0000075D (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   GAP_TerminateLinkReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnCentralConnCBs       0000075C        gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075E - 0000075E (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006EBA - 00006F3F (0x86 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_TerminateLinkReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq    00006EBA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F40 - 00006F44 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_TerminateAuth
                                                   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F45 - 00006F49 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   GAP_TerminateLinkReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F4A - 00006F57 (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006F58 - 00006FC6 (0x6f bytes), align: 0
  Segment part 19.            Intra module refs:   GAP_Signable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable            00006F58 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FC7 - 00006FC9 (0x3 bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   gapPairingCompleteCB
                                                   gapPasskeyNeededCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FCA - 00006FCF (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   Segment part 21
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006FD0 - 000070CC (0xfd bytes), align: 0
  Segment part 23.            Intra module refs:   GAP_Authenticate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate        00006FD0 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070CD - 000070D2 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   GAP_Authenticate
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070D3 - 000070D8 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070D9 - 000070DE (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_Authenticate
                                                   GAP_Bond
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070DF - 000070E4 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   Segment part 27
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000070E5 - 0000711E (0x3a bytes), align: 0
  Segment part 29.            Intra module refs:   GAP_TerminateAuth::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth       000070E5 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasskeyUpdate       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000711F - 000071C2 (0xa4 bytes), align: 0
  Segment part 33.            Intra module refs:   GAP_PasscodeUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate      0000711F 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071C3 - 000071C7 (0x5 bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_Bond
                                                   GAP_PasscodeUpdate
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000071C8 - 0000729C (0xd5 bytes), align: 0
  Segment part 36.            Intra module refs:   GAP_Bond::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond                000071C8 
               calls direct
               XSTACK = 00000001 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000729D - 000073F1 (0x155 bytes), align: 0
  Segment part 38.            Intra module refs:   gapProcessConnectionCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt
                                   0000729D 
               calls direct
               XSTACK = 00000000 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073F2 - 000073F5 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073F6 - 000073FA (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   GAP_Bond
                                                   Segment part 40
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000073FB - 00007400 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   GAP_Bond
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007401 - 00007457 (0x57 bytes), align: 0
  Segment part 43.            Intra module refs:   gapProcessConnUpdateCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt
                                   00007401 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007458 - 000074C7 (0x70 bytes), align: 0
  Segment part 45.            Intra module refs:   gapProcessDisconnectCompleteEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt
                                   00007458 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000074C8 - 000074CC (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   GAP_Authenticate
                                                   GAP_Signable
                                                   gapProcessDisconnectCompleteEvt
                                                   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000074CD - 000074D3 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000074D4 - 000074D6 (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   GAP_Authenticate
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000074D7 - 000074DE (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   GAP_TerminateLinkReq
                                                   Segment part 49
                                                   gapFreeEstLink
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000074DF - 000075B5 (0xd7 bytes), align: 0
  Segment part 51.            Intra module refs:   sendEstLinkEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent        000074DF 
               calls direct
               XSTACK = 00000020 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000075B6 - 000075BA (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000075BB - 000075C5 (0xb bytes), align: 0
  Segment part 54.            Intra module refs:   GAP_Signable
                                                   gapPairingCompleteCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000075C6 - 00007609 (0x44 bytes), align: 0
  Segment part 55.            Intra module refs:   sendTerminateEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent      000075C6 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000760A - 00007612 (0x9 bytes), align: 0
  Segment part 57.            Intra module refs:   sendTerminateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007613 - 00007684 (0x72 bytes), align: 0
  Segment part 58.            Intra module refs:   gapSendLinkUpdateEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent
                                   00007613 
               calls direct
               XSTACK = 0000000D ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007685 - 00007694 (0x10 bytes), align: 0
  Segment part 60.            Intra module refs:   gapSendLinkUpdateEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007695 - 000076A0 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapSendLinkUpdateEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000076A1 - 000076C4 (0x24 bytes), align: 0
  Segment part 62.            Intra module refs:   disconnectNext::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext          000076A1 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000076C5 - 0000783D (0x179 bytes), align: 0
  Segment part 64.            Intra module refs:   sendAuthEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent           000076C5 
               calls direct
               XSTACK = 0000001A ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000783E - 00007842 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007843 - 00007847 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007848 - 00007851 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   Segment part 67
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007852 - 00007857 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007858 - 0000786D (0x16 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000786E - 00007873 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007874 - 00007877 (0x4 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   disconnectNext
                                                   gapProcessConnUpdateCompleteEvt
                                                   gapProcessConnectionCompleteEvt
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007878 - 0000787D (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 106
                                                   Segment part 48
                                                   Segment part 72
                                                   Segment part 75
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000787E - 00007885 (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   gapPairingCompleteCB
                                                   gapSendLinkUpdateEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007886 - 00007899 (0x14 bytes), align: 0
  Segment part 75.            Intra module refs:   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000789A - 000078D3 (0x3a bytes), align: 0
  Segment part 76.            Intra module refs:   gapFreeAuthLink::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink         0000789A 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078D4 - 000078DA (0x7 bytes), align: 0
  Segment part 78.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078DB - 000078F5 (0x1b bytes), align: 0
  Segment part 79.            Intra module refs:   gapFreeEstLink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink          000078DB 
               calls direct
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078F6 - 000078FC (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   gapFreeAuthLink
                                                   gapFreeEstLink
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000078FD - 00007968 (0x6c bytes), align: 0
  Segment part 82.            Intra module refs:   gapSendBondCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent
                                   000078FD 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007969 - 00007973 (0xb bytes), align: 0
  Segment part 84.            Intra module refs:   GAP_Signable
                                                   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007974 - 0000797D (0xa bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendBondCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000797E - 00007A23 (0xa6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSendPairingReqEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent
                                   0000797E 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A24 - 00007A32 (0xf bytes), align: 0
  Segment part 88.            Intra module refs:   gapSendPairingReqEvent
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A33 - 00007A3A (0x8 bytes), align: 0
  Segment part 89.            Intra module refs:   gapPasskeyNeededCB
                                                   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A3B - 00007A3E (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   gapSendPairingReqEvent
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A3F - 00007A42 (0x4 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 90
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A43 - 00007A4B (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 91
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A4C - 00007A50 (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A51 - 00007A5A (0xa bytes), align: 0
  Segment part 94.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A5B - 00007A60 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   gapSendLinkUpdateEvent
                                                   gapSendPairingReqEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A61 - 00007A67 (0x7 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 94
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007A68 - 00007B21 (0xba bytes), align: 0
  Segment part 97.            Intra module refs:   gapPasskeyNeededCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB      00007A68 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B22 - 00007B2D (0xc bytes), align: 0
  Segment part 99.            Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007B2E - 00007D02 (0x1d5 bytes), align: 0
  Segment part 100.           Intra module refs:   gapPairingCompleteCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB    00007B2E 
               calls direct
               XSTACK = 00000008 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D03 - 00007D10 (0xe bytes), align: 0
  Segment part 102.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D11 - 00007D13 (0x3 bytes), align: 0
  Segment part 103.           Intra module refs:   gapPasskeyNeededCB
                                                   sendEstLinkEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D14 - 00007D18 (0x5 bytes), align: 0
  Segment part 104.           Intra module refs:   GAP_Bond
                                                   GAP_Signable
                                                   Segment part 103
                                                   gapPairingCompleteCB
                                                   gapProcessConnectionCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D19 - 00007D1E (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D1F - 00007D24 (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GAP_Bond
                                                   Segment part 105
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D25 - 00007D36 (0x12 bytes), align: 0
  Segment part 107.           Intra module refs:   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D37 - 00007D3C (0x6 bytes), align: 0
  Segment part 108.           Intra module refs:   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D3D - 00007D46 (0xa bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   gapFreeAuthLink
                                                   gapPairingCompleteCB
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D47 - 00007D52 (0xc bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 112
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D53 - 00007D58 (0x6 bytes), align: 0
  Segment part 111.           Intra module refs:   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007D59 - 00007D62 (0xa bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 111
                                                   gapPairingCompleteCB
                                                   sendAuthEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentralConn
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008741 - 00008744 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   LL_TimeToNextRfEvent (ll_sleep)
                                                   llAllocConnId (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            00008741 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from simpleBLEPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from gapbondmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000938 - 0000093D (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateLinkReq::?relay
                                   00000938        GAPRole_TerminateConnection (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000093E - 00000943 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Signable::?relay    0000093E        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000944 - 00000949 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Authenticate::?relay
                                   00000944        gapBondMgrAuthenticate (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000094A - 0000094F (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_TerminateAuth::?relay
                                   0000094A        GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasskeyUpdate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000950 - 00000955 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PasscodeUpdate::?relay
                                   00000950        GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000956 - 0000095B (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Bond::?relay        00000956        gapBondMgrBondReq (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000095C - 00000961 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnectionCompleteEvt::?relay
                                   0000095C        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000962 - 00000967 (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessConnUpdateCompleteEvt::?relay
                                   00000962        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000968 - 0000096D (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapProcessDisconnectCompleteEvt::?relay
                                   00000968        gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000096E - 00000973 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendEstLinkEvent::?relay
                                   0000096E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000974 - 00000979 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           sendTerminateEvent::?relay
                                   00000974 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000097A - 0000097F (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   gapProcessConnUpdateCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendLinkUpdateEvent::?relay
                                   0000097A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000980 - 00000985 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   GAP_TerminateLinkReq
                                                   gapProcessConnectionCompleteEvt
                                                   gapProcessDisconnectCompleteEvt
           LOCAL                   ADDRESS         
           =====                   =======         
           disconnectNext::?relay
                                   00000980 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000986 - 0000098B (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   gapPairingCompleteCB
           LOCAL                   ADDRESS         
           =====                   =======         
           sendAuthEvent::?relay   00000986 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000098C - 00000991 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   GAP_Authenticate
                                                   gapProcessDisconnectCompleteEvt
                                                   sendAuthEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAuthLink::?relay
                                   0000098C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000992 - 00000997 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   gapProcessConnectionCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFreeEstLink::?relay
                                   00000992 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000998 - 0000099D (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendBondCompleteEvent::?relay
                                   00000998        smProcessEncryptChange (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000099E - 000009A3 (0x6 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSendPairingReqEvent::?relay
                                   0000099E        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009A4 - 000009A9 (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPasskeyNeededCB::?relay
                                   000009A4        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009AA - 000009AF (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapPairingCompleteCB::?relay
                                   000009AA        smEndPairing (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentralConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008741 - 00008744 (0x4 bytes), align: 0
  Segment part 115.           Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 116. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 117. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 118. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_peridevmgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000DCE - 00000DCE (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_UpdateAdvertisingData
                                                   gapWriteAdvDataStatus
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000075F - 00000760 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 35
                                                   Segment part 76
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000761 - 00000762 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 75
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000763 - 00000764 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 58
                                                   gapProcessAdvertisingEvt
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DCF - 00000DD4 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EA8 - 00016F79 (0xd2 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_MakeDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable    00016EA8 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F7A - 00017022 (0xa9 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_UpdateAdvertisingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData
                                   00016F7A 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017023 - 0001705E (0x3c bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_EndDiscoverable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable     00017023 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetAdvToken         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetAdvToken         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RemoveAdvToken      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvTokens     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001705F - 00017065 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017066 - 000170DF (0x7a bytes), align: 0
  Segment part 32.            Intra module refs:   GAP_PeriDevMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit      00017066 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170E0 - 000170E4 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170E5 - 000170F2 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000170F3 - 0001717E (0x8c bytes), align: 0
  Segment part 36.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt
                                   000170F3 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001717F - 00017244 (0xc6 bytes), align: 0
  Segment part 38.            Intra module refs:   gapSetAdvParams::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams         0001717F 
               calls direct, is indirectly called
               XSTACK = 0000000C ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017245 - 00017252 (0xe bytes), align: 0
  Segment part 40.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017253 - 0001725F (0xd bytes), align: 0
  Segment part 41.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017260 - 0001728E (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   gapSetAdvParamsStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus   00017260 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001728F - 00017369 (0xdb bytes), align: 0
  Segment part 44.            Intra module refs:   gapWriteAdvEnableStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus
                                   0001728F 
               calls direct
               XSTACK = 0000000A ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001736A - 00017378 (0xf bytes), align: 0
  Segment part 46.            Intra module refs:   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017379 - 00017379 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001737A - 0001737F (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 47
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017380 - 00017384 (0x5 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017385 - 0001738A (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 41
                                                   Segment part 49
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001738B - 000173C5 (0x3b bytes), align: 0
  Segment part 51.            Intra module refs:   gapWriteAdvDataStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus   0001738B 
               calls direct
               XSTACK = 0000000A ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173C6 - 000173CA (0x5 bytes), align: 0
  Segment part 53.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
                                                   gapWriteAdvDataStatus
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173CB - 000173D2 (0x8 bytes), align: 0
  Segment part 54.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvDataStatus
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000173D3 - 00017470 (0x9e bytes), align: 0
  Segment part 55.            Intra module refs:   gapProcessAdvertisingEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt
                                   000173D3 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017471 - 00017478 (0x8 bytes), align: 0
  Segment part 57.            Intra module refs:   GAP_EndDiscoverable
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017479 - 00017488 (0x10 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAdvToken          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017489 - 0001748D (0x5 bytes), align: 0
  Segment part 61.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeleteAdvToken       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001748E - 00017496 (0x9 bytes), align: 0
  Segment part 64.            Intra module refs:   gapSetAdvParams
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindAdvToken         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 68. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapCalcAdvTokenDataLen
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 70. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapBuildADTokens        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017497 - 0001749C (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 100
                                                   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001749D - 000174A5 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   GAP_MakeDiscoverable
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174A6 - 000174B5 (0x10 bytes), align: 0
  Segment part 75.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174B6 - 000174C5 (0x10 bytes), align: 0
  Segment part 76.            Intra module refs:   GAP_PeriDevMgrInit
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 78. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174C6 - 000174C9 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174CA - 000174D4 (0xb bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   Segment part 87
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000174D5 - 0001750D (0x39 bytes), align: 0
  Segment part 85.            Intra module refs:   gapSendMakeDiscEvent::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent    000174D5 
               calls direct
               XSTACK = 00000014 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001750E - 00017518 (0xb bytes), align: 0
  Segment part 87.            Intra module refs:   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017519 - 00017531 (0x19 bytes), align: 0
  Segment part 88.            Intra module refs:   gapFreeAdvertState::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState      00017519 
               calls direct
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017532 - 00017535 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   GAP_PeriDevMgrInit
                                                   gapFreeAdvertState
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017536 - 0001753E (0x9 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 35
                                                   Segment part 90
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001753F - 0001759A (0x5c bytes), align: 0
  Segment part 92.            Intra module refs:   isLimitedDiscoverableMode::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode
                                   0001753F 
               calls direct
               XSTACK = 00000014 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001759B - 0001759C (0x2 bytes), align: 0
  Segment part 94.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001759D - 0001759F (0x3 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175A0 - 000175A4 (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 95
                                                   gapProcessAdvertisingEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175A5 - 000175A6 (0x2 bytes), align: 0
  Segment part 97.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapSendMakeDiscEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175A7 - 000175AA (0x4 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 97
                                                   gapWriteAdvEnableStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175AB - 000175AD (0x3 bytes), align: 0
  Segment part 99.            Intra module refs:   GAP_EndDiscoverable
                                                   GAP_MakeDiscoverable
                                                   Segment part 98
                                                   gapFreeAdvertState
                                                   gapProcessAdvertisingEvt
                                                   gapSetAdvParams
                                                   gapSetAdvParamsStatus
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000175AE - 000175B3 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   GAP_MakeDiscoverable
                                                   GAP_PeriDevMgrInit
                                                   GAP_UpdateAdvertisingData
                                                   Segment part 99
                                                   gapProcessAdvertisingEvt
                                                   isLimitedDiscoverableMode
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000309 - 00000309 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000030A - 0000030F (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from gap_configmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ea60         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from simpleBLEPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009B0 - 000009B5 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_MakeDiscoverable::?relay
                                   000009B0        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009B6 - 000009BB (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvertisingData::?relay
                                   000009B6        GAPRole_SetParameter (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009BC - 000009C1 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   gapProcessAdvertisingEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_EndDiscoverable::?relay
                                   000009BC        GAPRole_SetParameter (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SetAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_GetAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RemoveAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_UpdateAdvTokens::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C2 - 000009C7 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_PeriDevMgrInit::?relay
                                   000009C2        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009C8 - 000009CD (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapPeriProcessHCICmdCompleteEvt::?relay
                                   000009C8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009CE - 000009D3 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GAP_MakeDiscoverable
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParams::?relay
                                   000009CE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009D4 - 000009D9 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapSetAdvParamsStatus::?relay
                                   000009D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009DA - 000009DF (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvEnableStatus::?relay
                                   000009DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009E0 - 000009E5 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gapPeriProcessHCICmdCompleteEvt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapWriteAdvDataStatus::?relay
                                   000009E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009E6 - 000009EB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 13
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessAdvertisingEvt::?relay
                                   000009E6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapAddAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapDeleteAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapFindAdvToken::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 69. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapCalcAdvTokenDataLen::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapBuildADTokens::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009EC - 000009F1 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   gapSetAdvParamsStatus
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapSendMakeDiscEvent::?relay
                                   000009EC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F2 - 000009F7 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   GAP_MakeDiscoverable
                                                   gapProcessAdvertisingEvt
                                                   gapSendMakeDiscEvent
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           gapFreeAdvertState::?relay
                                   000009F2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009F8 - 000009FD (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   gapSetAdvParams
                                                   gapWriteAdvEnableStatus
           LOCAL                   ADDRESS         
           =====                   =======         
           isLimitedDiscoverableMode::?relay
                                   000009F8 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 102. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_perilinkmgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1D2 - 0001C25A (0x89 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_SendSlaveSecurityRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest
                                   0001C1D2 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000009FE - 00000A03 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_SendSlaveSecurityRequest::?relay
                                   000009FE        gapBondMgrSlaveSecurityReq (gapbondmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000765 - 00000765 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GAP_Init
                                                   GAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapTaskID               00000765        GAP_Authenticate (gap_linkmgr)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Segment part 58 (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD5 - 00000DD5 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GAP_ProcessEvent
                                                   GAP_RegisterForHCIMsgs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapUnwantedTaskID       00000DD5        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000766 - 00000767 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapRegisterPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnPeripheralCBs        00000766        gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000768 - 00000769 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193A1 - 000193AA (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   GAP_RegisterForHCIMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs
                                   000193A1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193AB - 000193AE (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   gapRegisterPeripheral
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193AF - 000193AF (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GAP_RegisterForHCIMsgs
                                                   Segment part 13
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193B0 - 000193B6 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   GAP_NumActiveConnections
                                                   Segment part 14
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193B7 - 000193DC (0x26 bytes), align: 0
  Segment part 16.            Intra module refs:   GAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init                000193B7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000193DD - 000194FF (0x123 bytes), align: 0
  Segment part 18.            Intra module refs:   GAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent        000193DD 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019500 - 00019504 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019505 - 0001950E (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   GAP_NumActiveConnections::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections
                                   00019505 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001950F - 00019651 (0x143 bytes), align: 0
  Segment part 23.            Intra module refs:   gapProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg       0001950F 
               calls direct
               XSTACK = 00000012 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019652 - 00019656 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019657 - 0001965E (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   GAP_ProcessEvent
                                                   Segment part 25
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001965F - 00019667 (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   GAP_ProcessEvent
                                                   gapProcessHCICmdCompleteEvt
                                                   gapProcessOSALMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019668 - 00019737 (0xd0 bytes), align: 0
  Segment part 28.            Intra module refs:   gapProcessHCICmdCompleteEvt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt
                                   00019668 
               calls direct
               XSTACK = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019738 - 00019748 (0x11 bytes), align: 0
  Segment part 30.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019749 - 0001974E (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 25
                                                   Segment part 27
                                                   Segment part 30
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001974F - 00019755 (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019756 - 0001975D (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 27
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001975E - 00019767 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   gapProcessHCICmdCompleteEvt
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentral      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019768 - 00019771 (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   gapRegisterPeripheral::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral   00019768 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000310 - 00000310 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   gapUnwantedTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A04 - 00000A09 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_RegisterForHCIMsgs::?relay
                                   00000A04        GAPRole_Init (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A0A - 00000A0F (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_Init::?relay        00000A0A        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A10 - 00000A15 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_ProcessEvent::?relay
                                   00000A10        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A16 - 00000A1B (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GAP_NumActiveConnections::?relay
                                   00000A16        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A1C - 00000A21 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   GAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessOSALMsg::?relay
                                   00000A1C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A22 - 00000A27 (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   gapProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gapProcessHCICmdCompleteEvt::?relay
                                   00000A22 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterCentral::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A28 - 00000A2D (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapRegisterPeripheral::?relay
                                   00000A28        GAP_PeriDevMgrInit (gap_peridevmgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gapgattserver

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008745 - 00008747 (0x3 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD6 - 00000DD6 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000076A - 0000077F (0x16 bytes), align: 0
  Segment part 10.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD7 - 00000DD7 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000780 - 00000781 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD8 - 00000DD8 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000782 - 00000782 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD9 - 00000DD9 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000783 - 00000788 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DDA - 00000DDA (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DDB - 00000DE2 (0x8 bytes), align: 0
  Segment part 22.            Intra module refs:   GGS_SetParameter
                                                   Segment part 25
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DE3 - 00000E3A (0x58 bytes), align: 0
  Segment part 24.            Intra module refs:   GGS_SetParameter
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gapServiceCBs           
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8DF - 0001BA13 (0x135 bytes), align: 0
  Segment part 27.            Intra module refs:   GGS_SetParameter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter        0001B8DF 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParameter        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParamValue       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_DelService          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_RegisterAppCBs      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA14 - 0001BA1A (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   ggs_SetAttrWPermit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA1B - 0001BA64 (0x4a bytes), align: 0
  Segment part 43.            Intra module refs:   ggs_SetAttrWPermit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit      0001BA1B 
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_ReadAttrCB          
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA65 - 0001BA6A (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   GGS_SetParameter
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA6B - 0001BA70 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   GGS_SetParameter
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA71 - 0001BA76 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   GGS_SetParameter
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_WriteAttrCB         
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000311 - 00000311 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000312 - 00000312 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000313 - 00000313 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000314 - 00000314 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000315 - 00000315 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000316 - 0000031D (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000031E - 00000375 (0x58 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A2E - 00000A33 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParameter::?relay
                                   00000A2E        SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   gapBondSetupPrivFlag (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_AddService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_DelService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GGS_RegisterAppCBs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A34 - 00000A39 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GGS_SetParameter
           LOCAL                   ADDRESS         
           =====                   =======         
           ggs_SetAttrWPermit::?relay
                                   00000A34 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008745 - 00008747 (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 68. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_server

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000789 - 00000790 (0x8 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_InitServer
                                                   Segment part 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           serverInfoTbl           00000789 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E3B - 00000E3B (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATT_RegisterForReq
                                                   gattServerProcessMsgCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reqTaskId               00000E3B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000791 - 00000792 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
XDATA_I
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000857A - 000085A9 (0x30 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DF8E - 0000DFF0 (0x63 bytes), align: 0
  Segment part 13.            Intra module refs:   GATT_InitServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer         0000DF8E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_DeregisterService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFF1 - 0000DFF9 (0x9 bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_RegisterForReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq     0000DFF1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000DFFA - 0000E000 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   GATT_RegisterForReq
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E001 - 0000E01E (0x1e bytes), align: 0
  Segment part 24.            Intra module refs:   GATT_VerifyReadPermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions
                                   0000E001 
               calls direct
               XSTACK = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E01F - 0000E023 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   GATT_VerifyReadPermissions
                                                   GATT_VerifyWritePermissions
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E024 - 0000E06E (0x4b bytes), align: 0
  Segment part 27.            Intra module refs:   GATT_VerifyWritePermissions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions
                                   0000E024 
               calls direct
               XSTACK = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E06F - 0000E10E (0xa0 bytes), align: 0
  Segment part 29.            Intra module refs:   GATT_ServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd
                                   0000E06F 
               calls direct
               XSTACK = 00000000 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E10F - 0000E113 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   GATT_ServiceChangedInd
                                                   gattProcessWriteReq
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E114 - 0000E209 (0xf6 bytes), align: 0
  Segment part 32.            Intra module refs:   GATT_FindHandleUUID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID     0000E114 
               calls direct
               XSTACK = 0000002C ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E20A - 0000E2D3 (0xca bytes), align: 0
  Segment part 34.            Intra module refs:   GATT_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle         0000E20A 
               XSTACK = 00000010 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E2D4 - 0000E43D (0x16a bytes), align: 0
  Segment part 36.            Intra module refs:   GATT_FindNextAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr       0000E2D4 
               calls direct
               XSTACK = 00000004 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E43E - 0000E445 (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E446 - 0000E44B (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E44C - 0000E485 (0x3a bytes), align: 0
  Segment part 40.            Intra module refs:   GATT_ServiceNumAttrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs    0000E44C 
               XSTACK = 0000000A ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E486 - 0000E48D (0x8 bytes), align: 0
  Segment part 42.            Intra module refs:   GATT_ServiceNumAttrs
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E48E - 0000E52B (0x9e bytes), align: 0
  Segment part 43.            Intra module refs:   GATT_Indication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication         0000E48E 
               calls direct
               XSTACK = 00000024 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E52C - 0000E578 (0x4d bytes), align: 0
  Segment part 45.            Intra module refs:   GATT_Notification::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification       0000E52C 
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E579 - 0000E59E (0x26 bytes), align: 0
  Segment part 47.            Intra module refs:   gattServiceLastHandle::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle   0000E579 
               calls direct
               XSTACK = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E59F - 0000E783 (0x1e5 bytes), align: 0
  Segment part 49.            Intra module refs:   gattServerProcessMsgCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB
                                   0000E59F 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000031 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E784 - 0000E78C (0x9 bytes), align: 0
  Segment part 51.            Intra module refs:   GATT_FindHandleUUID
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E78D, align: 0
  Segment part 52.            Intra module refs:   gattProcessExchangeMTUReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq
                                   0000E78D 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E78D - 0000E791 (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   gattProcessExchangeMTUReq
                                                   gattProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E792 - 0000E946 (0x1b5 bytes), align: 0
  Segment part 55.            Intra module refs:   gattProcessFindInfoReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq
                                   0000E792 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E947 - 0000E94C (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E94D - 0000E955 (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E956 - 0000E959 (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E95A - 0000E95F (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E960 - 0000E972 (0x13 bytes), align: 0
  Segment part 61.            Intra module refs:   gattProcessFindInfoReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E973 - 0000E9B9 (0x47 bytes), align: 0
  Segment part 62.            Intra module refs:   gattProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq
                                   0000E973 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9BA - 0000E9BF (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9C0 - 0000E9C6 (0x7 bytes), align: 0
  Segment part 65.            Intra module refs:   GATT_Indication
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000E9C7 - 0000EA0B (0x45 bytes), align: 0
  Segment part 66.            Intra module refs:   gattProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq
                                   0000E9C7 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA0C - 0000EA10 (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
                                                   gattGetServerStatus
                                                   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
                                                   gattProcessReadReq
                                                   gattServiceLastHandle
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA11 - 0000EA28 (0x18 bytes), align: 0
  Segment part 69.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA29 - 0000EA50 (0x28 bytes), align: 0
  Segment part 70.            Intra module refs:   gattProcessReadReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq      0000EA29 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EA51 - 0000EACB (0x7b bytes), align: 0
  Segment part 72.            Intra module refs:   gattProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq
                                   0000EA51 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EACC - 0000EAD3 (0x8 bytes), align: 0
  Segment part 74.            Intra module refs:   GATT_FindNextAttr
                                                   gattProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAD4 - 0000EAD5 (0x2 bytes), align: 0
  Segment part 75.            Intra module refs:   GATT_FindHandle
                                                   GATT_FindHandleUUID
                                                   GATT_ServiceChangedInd
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAD6 - 0000EAD7 (0x2 bytes), align: 0
  Segment part 76.            Intra module refs:   GATT_FindHandleUUID
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAD8 - 0000EADD (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   GATT_FindHandle
                                                   Segment part 76
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EADE - 0000EAEC (0xf bytes), align: 0
  Segment part 78.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
                                                   gattProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAED - 0000EAEF (0x3 bytes), align: 0
  Segment part 79.            Intra module refs:   gattProcessFindInfoReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAF0 - 0000EAF4 (0x5 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 79
                                                   gattProcessReadByGrpTypeReq
                                                   gattProcessReadMultiReq
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EAF5 - 0000EB91 (0x9d bytes), align: 0
  Segment part 81.            Intra module refs:   gattProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq
                                   0000EAF5 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB92 - 0000EB95 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   gattProcessFindByTypeValueReq
                                                   gattProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB96 - 0000EB9B (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   GATT_FindNextAttr
                                                   GATT_ServiceChangedInd
                                                   Segment part 83
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EB9C - 0000EBAB (0x10 bytes), align: 0
  Segment part 85.            Intra module refs:   gattProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBAC - 0000EBAC (0x1 bytes), align: 0
  Segment part 86.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_ServiceNumAttrs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBAD - 0000EBB0 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   GATT_FindNextAttr
                                                   Segment part 86
                                                   gattProcessFindInfoReq
                                                   gattProcessReadByGrpTypeReq
                                                   gattServerHandleTimerCB
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBB1 - 0000EBB6 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 69
                                                   Segment part 74
                                                   Segment part 78
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBB7 - 0000EBE7 (0x31 bytes), align: 0
  Segment part 89.            Intra module refs:   gattProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq     0000EBB7 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBE8 - 0000EBEA (0x3 bytes), align: 0
  Segment part 91.            Intra module refs:   gattProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq
                                   0000EBE8 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EBEB - 0000EC26 (0x3c bytes), align: 0
  Segment part 93.            Intra module refs:   gattGetServerStatus::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus     0000EBEB 
               calls direct
               XSTACK = 0000000F ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC27 - 0000EC2C (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   GATT_FindHandleUUID
                                                   GATT_FindNextAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC2D - 0000EC32 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   GATT_ServiceChangedInd
                                                   Segment part 95
                                                   gattGetServerStatus
                                                   gattProcessReadMultiReq
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC33 - 0000EC69 (0x37 bytes), align: 0
  Segment part 97.            Intra module refs:   gattFindServerInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo      0000EC33 
               XSTACK = 0000002D ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC6A - 0000EC74 (0xb bytes), align: 0
  Segment part 99.            Intra module refs:   GATT_InitServer
                                                   gattFindServerInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EC75 - 0000ECC4 (0x50 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServerHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB
                                   0000EC75 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECC5 - 0000ECCD (0x9 bytes), align: 0
  Segment part 102.           Intra module refs:   gattServerHandleConnStatusCB
                                                   gattServerHandleTimerCB
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECCE - 0000ECD3 (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   gattServerHandleConnStatusCB
                                                   gattServerHandleTimerCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECD4 - 0000ECDB (0x8 bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 103
                                                   gattServerProcessMsgCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ECDC - 0000ED97 (0xbc bytes), align: 0
  Segment part 105.           Intra module refs:   gattServerHandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB
                                   0000ECDC 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ED98 - 0000EDA5 (0xe bytes), align: 0
  Segment part 107.           Intra module refs:   gattGetServerStatus
                                                   gattServerHandleConnStatusCB
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_SetNextHandle      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000376 - 00000376 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   reqTaskId
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A3A - 00000A3F (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_InitServer::?relay
                                   00000A3A        GATT_Init (gatt_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_DeregisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A40 - 00000A45 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_RegisterForReq::?relay
                                   00000A40        GATTServApp_Init (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A46 - 00000A4B (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   gattProcessReadMultiReq
                                                   gattProcessReadReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyReadPermissions::?relay
                                   00000A46        Segment part 87 (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A4C - 00000A51 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   gattProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_VerifyWritePermissions::?relay
                                   00000A4C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A52 - 00000A57 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceChangedInd::?relay
                                   00000A52        GATTServApp_SendServiceChangedInd (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A58 - 00000A5D (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandleUUID::?relay
                                   00000A58        gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A5E - 00000A63 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 78
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindHandle::?relay
                                   00000A5E        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 102 (gattservapp)
                                                   Segment part 149 (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A64 - 00000A69 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_FindNextAttr::?relay
                                   00000A64        GATTServApp_ReadAttr (gattservapp)
                                                   Segment part 89 (gattservapp)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A6A - 00000A6F (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   gattServiceLastHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ServiceNumAttrs::?relay
                                   00000A6A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A70 - 00000A75 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   GATT_ServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Indication::?relay
                                   00000A70 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A76 - 00000A7B (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Notification::?relay
                                   00000A76        SimpleProfile_SetParameter (simpleGATTprofile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A7C - 00000A81 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   GATT_FindNextAttr
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServiceLastHandle::?relay
                                   00000A7C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A82 - 00000A87 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerProcessMsgCB::?relay
                                   00000A82 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A88 - 00000A8D (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExchangeMTUReq::?relay
                                   00000A88 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A8E - 00000A93 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindInfoReq::?relay
                                   00000A8E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A94 - 00000A99 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessFindByTypeValueReq::?relay
                                   00000A94 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000A9A - 00000A9F (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByTypeReq::?relay
                                   00000A9A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AA0 - 00000AA5 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadReq::?relay
                                   00000AA0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AA6 - 00000AAB (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadMultiReq::?relay
                                   00000AA6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AAC - 00000AB1 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessReadByGrpTypeReq::?relay
                                   00000AAC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB2 - 00000AB7 (0x6 bytes), align: 0
  Segment part 90.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessWriteReq::?relay
                                   00000AB2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AB8 - 00000ABD (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessExecuteWriteReq::?relay
                                   00000AB8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ABE - 00000AC3 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   GATT_Indication
                                                   GATT_Notification
           LOCAL                   ADDRESS         
           =====                   =======         
           gattGetServerStatus::?relay
                                   00000ABE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AC4 - 00000AC9 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 107
                                                   gattServerHandleConnStatusCB
                                                   gattServerProcessMsgCB
           LOCAL                   ADDRESS         
           =====                   =======         
           gattFindServerInfo::?relay
                                   00000AC4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ACA - 00000ACF (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   GATT_Indication
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleTimerCB::?relay
                                   00000ACA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AD0 - 00000AD5 (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   GATT_InitServer
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServerHandleConnStatusCB::?relay
                                   00000AD0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_SetNextHandle::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000857A - 000085A9 (0x30 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 12

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gatt_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000793 - 00000793 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATT_Init
                                                   GATT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattTaskID              00000793 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000794 - 00000795 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   gattProcessRxData
                                                   gattRegisterServer
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000796 - 00000797 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABB3 - 0001ABB9 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   gattRegisterServer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer      0001ABB3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABBA - 0001ABC5 (0xc bytes), align: 0
  Segment part 11.            Intra module refs:   gattRegisterServer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterClient      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABC6 - 0001ABD9 (0x14 bytes), align: 0
  Segment part 14.            Intra module refs:   GATT_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init               0001ABC6 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABDA - 0001ABDE (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   GATT_Init
                                                   gattStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABDF - 0001AC24 (0x46 bytes), align: 0
  Segment part 17.            Intra module refs:   GATT_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent       0001ABDF 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC25 - 0001AC29 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   GATT_ProcessEvent
                                                   gattStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC2A - 0001ACF4 (0xcb bytes), align: 0
  Segment part 20.            Intra module refs:   gattProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData       0001AC2A 
               calls direct
               XSTACK = 0000000C ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACF5 - 0001ACFE (0xa bytes), align: 0
  Segment part 22.            Intra module refs:   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACFF - 0001AD04 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   gattProcessRxData
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD05 - 0001AD93 (0x8f bytes), align: 0
  Segment part 24.            Intra module refs:   gattNotifyEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent         0001AD05 
               calls direct
               XSTACK = 00000002 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001AD94 - 0001ADDE (0x4b bytes), align: 0
  Segment part 26.            Intra module refs:   gattStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer          0001AD94 
               calls direct
               XSTACK = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADDF - 0001AE08 (0x2a bytes), align: 0
  Segment part 28.            Intra module refs:   gattStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer           0001ADDF 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AD6 - 00000ADB (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterServer::?relay
                                   00000AD6        GATT_InitServer (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattRegisterClient::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ADC - 00000AE1 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_Init::?relay       00000ADC        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE2 - 00000AE7 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATT_ProcessEvent::?relay
                                   00000AE2        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AE8 - 00000AED (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   GATT_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattProcessRxData::?relay
                                   00000AE8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AEE - 00000AF3 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattNotifyEvent::?relay
                                   00000AEE        Segment part 104 (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AF4 - 00000AF9 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStartTimer::?relay
                                   00000AF4        GATT_Indication (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000AFA - 00000AFF (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattStopTimer::?relay   00000AFA        gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : gattservapp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000798 - 00000798 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   GATTServApp_Init
                                                   GATTServApp_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_TaskID      00000798 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E3C - 00000E3C (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   GATTServApp_RegisterForMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           appTaskID               00000E3C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000799 - 0000079C (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   GATTServApp_Init
                                                   Segment part 40
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000079D - 0000079D (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000079E - 0000079F (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A0 - 000007A0 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007A1 - 000007B6 (0x16 bytes), align: 0
  Segment part 13.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007B7 - 000007CF (0x19 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 57
                                                   Segment part 63
                                                   Segment part 64
                                                   Segment part 67
                                                   Segment part 83
                                                   Segment part 88
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D0 - 000007D5 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
XDATA_I
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gattServiceCBs          
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000877C - 00008787 (0xc bytes), align: 0
  Segment part 22.            Intra module refs:   GATTServApp_RegisterForMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg
                                   0000877C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008788 - 000087C0 (0x39 bytes), align: 0
  Segment part 24.            Intra module refs:   GATTServApp_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init        00008788 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000087C1 - 00008805 (0x45 bytes), align: 0
  Segment part 26.            Intra module refs:   GATTServApp_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent
                                   000087C1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008806 - 00008807 (0x2 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 163
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008808 - 0000880C (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 142
                                                   Segment part 30
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DeregisterService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParameter
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParameter
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000880D - 00008876 (0x6a bytes), align: 0
  Segment part 38.            Intra module refs:   gattServApp_SetNumPrepareWrites::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites
                                   0000880D 
               calls direct
               XSTACK = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008877 - 0000888C (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000888D - 00008892 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008893 - 00008897 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   GATTServApp_ProcessEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DelService
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008898 - 000088C3 (0x2c bytes), align: 0
  Segment part 49.            Intra module refs:   gattServApp_FindServiceCBs::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs
                                   00008898 
               XSTACK = 0000001D ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088C4 - 000088CA (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   GATTServApp_RegisterForMsg
                                                   gattServApp_FindPrepareWriteQ
                                                   gattServApp_FindServiceCBs
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088CB - 000088D0 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   gattServApp_FindServiceCBs
                                                   gattServApp_HandleConnStatusCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000088D1 - 00008AC3 (0x1f3 bytes), align: 0
  Segment part 53.            Intra module refs:   gattServApp_ProcessMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg
                                   000088D1 
               calls direct
               XSTACK = 0000000C ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008AC4 - 00008ACD (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008ACE - 00008AD5 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008AD6 - 00008AE4 (0xf bytes), align: 0
  Segment part 57.            Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008AE5 - 00008CC0 (0x1dc bytes), align: 0
  Segment part 58.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq
                                   00008AE5 
               calls direct
               XSTACK = 00000016 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008CC1 - 00008E6A (0x1aa bytes), align: 0
  Segment part 60.            Intra module refs:   gattServApp_ProcessReadByTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq
                                   00008CC1 
               calls direct
               XSTACK = 00000016 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E6B - 00008E72 (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E73 - 00008E79 (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E7A - 00008E7D (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   Segment part 63
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E7E - 00008E82 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E83 - 00008E8C (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E8D - 00008E8F (0x3 bytes), align: 0
  Segment part 67.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E90 - 00008E98 (0x9 bytes), align: 0
  Segment part 68.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 67
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E99 - 00008E9C (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E9D - 00008E9E (0x2 bytes), align: 0
  Segment part 70.            Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008E9F - 00008EA2 (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008EA3 - 00008EAB (0x9 bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008EAC - 00008FB5 (0x10a bytes), align: 0
  Segment part 73.            Intra module refs:   gattServApp_ProcessReadMultiReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq
                                   00008EAC 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FB6 - 00008FBA (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   GATTServApp_WriteAttr
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FBB - 00008FC2 (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FC3 - 00008FCB (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FCC - 00008FD4 (0x9 bytes), align: 0
  Segment part 78.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FD5 - 00008FE2 (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00008FE3 - 000091F5 (0x213 bytes), align: 0
  Segment part 80.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq
                                   00008FE3 
               calls direct
               XSTACK = 00000016 ( 00000022 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000091F6 - 000091FF (0xa bytes), align: 0
  Segment part 82.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009200 - 00009203 (0x4 bytes), align: 0
  Segment part 83.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009204 - 00009209 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000920A - 0000920D (0x4 bytes), align: 0
  Segment part 85.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 84
                                                   gattServApp_FindAuthorizeAttrCB
                                                   gattServApp_FindServiceCBs
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000920E - 00009213 (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   Segment part 150
                                                   Segment part 182
                                                   Segment part 41
                                                   Segment part 57
                                                   Segment part 85
                                                   Segment part 87
                                                   Segment part 95
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009214 - 0000921D (0xa bytes), align: 0
  Segment part 87.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000921E - 0000922F (0x12 bytes), align: 0
  Segment part 88.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009230 - 00009238 (0x9 bytes), align: 0
  Segment part 89.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009239 - 00009242 (0xa bytes), align: 0
  Segment part 90.            Intra module refs:   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009243 - 0000930E (0xcc bytes), align: 0
  Segment part 91.            Intra module refs:   gattServApp_ProcessWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq
                                   00009243 
               calls direct
               XSTACK = 00000016 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000930F - 00009313 (0x5 bytes), align: 0
  Segment part 93.            Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009314 - 00009319 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000931A - 00009320 (0x7 bytes), align: 0
  Segment part 95.            Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009321 - 0000932E (0xe bytes), align: 0
  Segment part 96.            Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000932F - 00009426 (0xf8 bytes), align: 0
  Segment part 97.            Intra module refs:   gattServApp_ProcessPrepareWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq
                                   0000932F 
               calls direct
               XSTACK = 00000016 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009427 - 00009434 (0xe bytes), align: 0
  Segment part 99.            Intra module refs:   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009435 - 0000944B (0x17 bytes), align: 0
  Segment part 100.           Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000944C - 00009461 (0x16 bytes), align: 0
  Segment part 101.           Intra module refs:   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009462 - 0000946A (0x9 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 101
                                                   Segment part 79
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000946B - 0000946C (0x2 bytes), align: 0
  Segment part 103.           Intra module refs:   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000946D - 0000946F (0x3 bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 103
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009470 - 00009474 (0x5 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009475 - 0000955B (0xe7 bytes), align: 0
  Segment part 106.           Intra module refs:   gattServApp_ProcessExecuteWriteReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq
                                   00009475 
               calls direct
               XSTACK = 00000016 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000955C - 0000955E (0x3 bytes), align: 0
  Segment part 108.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000955F - 00009563 (0x5 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009564 - 00009564 (0x1 bytes), align: 0
  Segment part 110.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009565 - 00009569 (0x5 bytes), align: 0
  Segment part 111.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 110
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000956A - 0000956E (0x5 bytes), align: 0
  Segment part 112.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 111
                                                   Segment part 72
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000956F - 00009572 (0x4 bytes), align: 0
  Segment part 113.           Intra module refs:   gattServApp_ProcessReadMultiReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009573 - 0000957B (0x9 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000957C - 00009581 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   Segment part 114
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessMsg
                                                   gattServApp_ProcessPrepareWriteReq
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009582 - 0000959E (0x1d bytes), align: 0
  Segment part 116.           Intra module refs:   gattServApp_FindPrepareWriteQ::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ
                                   00009582 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000959F - 000095D1 (0x33 bytes), align: 0
  Segment part 118.           Intra module refs:   gattServApp_FindCharCfgItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem
                                   0000959F 
               XSTACK = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095D2 - 000095D6 (0x5 bytes), align: 0
  Segment part 120.           Intra module refs:   GATTServApp_Init
                                                   GATTServApp_SendServiceChangedInd
                                                   gattServApp_FindCharCfgItem
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095D7 - 000095F0 (0x1a bytes), align: 0
  Segment part 121.           Intra module refs:   gattServApp_FindAuthorizeAttrCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB
                                   000095D7 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 123. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_WriteAttrCB
                                   
               calls direct, is indirectly called, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095F1 - 000095F8 (0x8 bytes), align: 0
  Segment part 125.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000095F9 - 00009A0F (0x417 bytes), align: 0
  Segment part 126.           Intra module refs:   GATTServApp_ReadAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr    000095F9 
               calls direct
               XSTACK = 00000039 ( 00000023 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A10 - 00009A16 (0x7 bytes), align: 0
  Segment part 128.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 145
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A17 - 00009A19 (0x3 bytes), align: 0
  Segment part 129.           Intra module refs:   gattServApp_ProcessMsg
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A1A - 00009A1E (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 129
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessFindByTypeValueReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A1F - 00009A27 (0x9 bytes), align: 0
  Segment part 131.           Intra module refs:   GATTServApp_ReadAttr
                                                   gattServApp_ProcessReadByGrpTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A28 - 00009A2F (0x8 bytes), align: 0
  Segment part 132.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A30 - 00009A33 (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A34 - 00009A38 (0x5 bytes), align: 0
  Segment part 134.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_UpdateCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A39 - 00009A3E (0x6 bytes), align: 0
  Segment part 135.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A3F - 00009A42 (0x4 bytes), align: 0
  Segment part 136.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A43 - 00009A48 (0x6 bytes), align: 0
  Segment part 137.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 136
                                                   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A49 - 00009A58 (0x10 bytes), align: 0
  Segment part 138.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A59 - 00009A60 (0x8 bytes), align: 0
  Segment part 139.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A61 - 00009A62 (0x2 bytes), align: 0
  Segment part 140.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A63 - 00009A69 (0x7 bytes), align: 0
  Segment part 141.           Intra module refs:   Segment part 140
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A6A - 00009A6F (0x6 bytes), align: 0
  Segment part 142.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A70 - 00009A78 (0x9 bytes), align: 0
  Segment part 143.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A79 - 00009A81 (0x9 bytes), align: 0
  Segment part 144.           Intra module refs:   Segment part 143
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A82 - 00009A88 (0x7 bytes), align: 0
  Segment part 145.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A89 - 00009A92 (0xa bytes), align: 0
  Segment part 146.           Intra module refs:   Segment part 133
                                                   Segment part 135
                                                   Segment part 145
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009A93 - 00009B15 (0x83 bytes), align: 0
  Segment part 147.           Intra module refs:   GATTServApp_WriteAttr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr   00009A93 
               calls direct
               XSTACK = 0000001C ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B16 - 00009B20 (0xb bytes), align: 0
  Segment part 149.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B21 - 00009B27 (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_WriteAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B28 - 00009B33 (0xc bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 152. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParamValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParamValue
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B34 - 00009B84 (0x51 bytes), align: 0
  Segment part 156.           Intra module refs:   GATTServApp_UpdateCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg
                                   00009B34 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009B85 - 00009BAB (0x27 bytes), align: 0
  Segment part 158.           Intra module refs:   GATTServApp_SendServiceChangedInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd
                                   00009B85 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BAC - 00009BE8 (0x3d bytes), align: 0
  Segment part 160.           Intra module refs:   GATTServApp_InitCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg
                                   00009BAC 
               calls direct
               XSTACK = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BE9 - 00009BED (0x5 bytes), align: 0
  Segment part 162.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
                                                   GATTServApp_UpdateCharCfg
                                                   gattServApp_FindAuthorizeAttrCB
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BEE - 00009BF9 (0xc bytes), align: 0
  Segment part 163.           Intra module refs:   GATTServApp_InitCharCfg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009BFA - 00009C17 (0x1e bytes), align: 0
  Segment part 164.           Intra module refs:   GATTServApp_ReadCharCfg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg
                                   00009BFA 
               calls direct
               XSTACK = 0000001D ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C18 - 00009C1C (0x5 bytes), align: 0
  Segment part 168.           Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_SetNumPrepareWrites
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 169. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 170. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C1D - 00009C20 (0x4 bytes), align: 0
  Segment part 172.           Intra module refs:   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessPrepareWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C21 - 00009C24 (0x4 bytes), align: 0
  Segment part 173.           Intra module refs:   GATTServApp_ReadAttr
                                                   Segment part 172
                                                   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C25 - 00009C2A (0x6 bytes), align: 0
  Segment part 174.           Intra module refs:   Segment part 114
                                                   Segment part 134
                                                   Segment part 173
                                                   Segment part 52
                                                   Segment part 55
                                                   Segment part 82
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C2B - 00009C32 (0x8 bytes), align: 0
  Segment part 177.           Intra module refs:   GATTServApp_ReadAttr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C33 - 00009C3C (0xa bytes), align: 0
  Segment part 178.           Intra module refs:   gattServApp_ProcessReadByTypeReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C3D - 00009C48 (0xc bytes), align: 0
  Segment part 179.           Intra module refs:   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C49 - 00009C4A (0x2 bytes), align: 0
  Segment part 180.           Intra module refs:   gattServApp_ProcessMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C4B - 00009C50 (0x6 bytes), align: 0
  Segment part 181.           Intra module refs:   Segment part 180
                                                   gattServApp_ProcessFindByTypeValueReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C51 - 00009C59 (0x9 bytes), align: 0
  Segment part 182.           Intra module refs:   Segment part 181
                                                   gattServApp_ProcessReadByGrpTypeReq
                                                   gattServApp_ProcessReadByTypeReq
                                                   gattServApp_ProcessReadMultiReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009C5A - 00009CD6 (0x7d bytes), align: 0
  Segment part 183.           Intra module refs:   gattServApp_HandleConnStatusCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB
                                   00009C5A 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CD7 - 00009CE1 (0xb bytes), align: 0
  Segment part 185.           Intra module refs:   gattServApp_HandleConnStatusCB
                                                   gattServApp_ProcessExecuteWriteReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 186. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 188. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000377 - 00000377 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   appTaskID
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B00 - 00000B05 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterForMsg::?relay
                                   00000B00        GAPBondMgr_Register (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B06 - 00000B0B (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_Init::?relay
                                   00000B06        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B0C - 00000B11 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessEvent::?relay
                                   00000B0C        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_RegisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DeregisterService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParameter::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B12 - 00000B17 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_SetNumPrepareWrites::?relay
                                   00000B12 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_FindAttr::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_AddService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_DelService::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B18 - 00000B1D (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 151
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindServiceCBs::?relay
                                   00000B18 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B1E - 00000B23 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   GATTServApp_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessMsg::?relay
                                   00000B1E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B24 - 00000B29 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessFindByTypeValueReq::?relay
                                   00000B24 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B2A - 00000B2F (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByTypeReq::?relay
                                   00000B2A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B30 - 00000B35 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadMultiReq::?relay
                                   00000B30 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B36 - 00000B3B (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessReadByGrpTypeReq::?relay
                                   00000B36 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B3C - 00000B41 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessWriteReq::?relay
                                   00000B3C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B42 - 00000B47 (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessPrepareWriteReq::?relay
                                   00000B42 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B48 - 00000B4D (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   gattServApp_ProcessMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_ProcessExecuteWriteReq::?relay
                                   00000B48 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B4E - 00000B53 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 185
                                                   Segment part 99
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindPrepareWriteQ::?relay
                                   00000B4E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B54 - 00000B59 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   GATTServApp_InitCharCfg
                                                   GATTServApp_ReadCharCfg
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindCharCfgItem::?relay
                                   00000B54 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B5A - 00000B5F (0x6 bytes), align: 0
  Segment part 122.           Intra module refs:   Segment part 95
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_FindAuthorizeAttrCB::?relay
                                   00000B5A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 124. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B60 - 00000B65 (0x6 bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 182
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadAttr::?relay
                                   00000B60        gapBondMgr_SyncCharCfg (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B66 - 00000B6B (0x6 bytes), align: 0
  Segment part 148.           Intra module refs:   GATTServApp_UpdateCharCfg
                                                   gattServApp_ProcessExecuteWriteReq
                                                   gattServApp_ProcessWriteReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteAttr::?relay
                                   00000B66 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_GetParamValue::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B6C - 00000B71 (0x6 bytes), align: 0
  Segment part 157.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_UpdateCharCfg::?relay
                                   00000B6C        GAPBondMgr_LinkEst (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B72 - 00000B77 (0x6 bytes), align: 0
  Segment part 159.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendServiceChangedInd::?relay
                                   00000B72        GAPBondMgr_LinkEst (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B78 - 00000B7D (0x6 bytes), align: 0
  Segment part 161.           Intra module refs:   GATTServApp_Init
                                                   gattServApp_HandleConnStatusCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_InitCharCfg::?relay
                                   00000B78 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B7E - 00000B83 (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   GATTServApp_ReadAttr
                                                   GATTServApp_SendServiceChangedInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ReadCharCfg::?relay
                                   00000B7E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_WriteCharCfg::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCCCWriteReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 176. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_ProcessCharCfg::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B84 - 00000B89 (0x6 bytes), align: 0
  Segment part 184.           Intra module refs:   GATTServApp_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           gattServApp_HandleConnStatusCB::?relay
                                   00000B84 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 187. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GATTServApp_SendCCCUpdatedEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 189. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 190. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci

  SEGMENTS IN THE MODULE
  ======================
XDATA_ROM_C
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           supportedCmdsTable      
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D6 - 000007D6 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_SendDataPkt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciPTMenabled           000007D6        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D7 - 000007D7 (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ctrlToHostEnable        000007D7        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007D8 - 000007D9 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numHostBufs             000007D8        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007DA - 000007DA (0x1 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCtrlCmdToken         000007DA        Segment part 35 (hci_event)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018AD5 - 00018ADE (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc            00018AD5 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ValidConnTimeParams
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ADF - 00018BA9 (0xcb bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_SendDataPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt         00018ADF 
               calls direct
               XSTACK = 00000002 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BAA - 00018BBD (0x14 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_DisconnectCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd       00018BAA 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRemoteVersionInfoCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetEventMaskCmd     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ResetCmd            
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadTransmitPowerLevelCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetControllerToHostFlowCtrlCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostBufferSizeCmd   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalVersionInfoCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedCommandsCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BBE - 00018BC4 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_LE_RandCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BC5 - 00018BEA (0x26 bytes), align: 0
  Segment part 50.            Intra module refs:   HCI_ReadBDADDRCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd       00018BC5 
               calls direct
               XSTACK = 00000000 ( 00000007 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018BEB - 00018C22 (0x38 bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_ReadRssiCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd         00018BEB 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C23 - 00018C29 (0x7 bytes), align: 0
  Segment part 54.            Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetEventMaskCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2A - 00018C2E (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetRandomAddressCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2F - 00018C5F (0x31 bytes), align: 0
  Segment part 59.            Intra module refs:   HCI_LE_ReadBufSizeCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd   00018C2F 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C60 - 00018C66 (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C67 - 00018C8F (0x29 bytes), align: 0
  Segment part 64.            Intra module refs:   HCI_LE_SetRandomAddressCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd
                                   00018C67 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018C90 - 00018D00 (0x71 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_LE_SetAdvParamCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd   00018C90 
               calls direct
               XSTACK = 00000006 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D01 - 00018D08 (0x8 bytes), align: 0
  Segment part 68.            Intra module refs:   HCI_LE_SetAdvParamCmd
                                                   Segment part 126
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D09 - 00018D1D (0x15 bytes), align: 0
  Segment part 69.            Intra module refs:   HCI_LE_SetAdvDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd    00018D09 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D1E - 00018D32 (0x15 bytes), align: 0
  Segment part 71.            Intra module refs:   HCI_LE_SetScanRspDataCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd
                                   00018D1E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D33 - 00018D47 (0x15 bytes), align: 0
  Segment part 73.            Intra module refs:   HCI_LE_SetAdvEnableCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd
                                   00018D33 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D48 - 00018D4E (0x7 bytes), align: 0
  Segment part 75.            Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_ClearWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetAdvParamCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D4F - 00018D56 (0x8 bytes), align: 0
  Segment part 76.            Intra module refs:   HCI_LE_SetRandomAddressCmd
                                                   Segment part 75
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadAdvChanTxPowerCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D57 - 00018D5C (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D5D - 00018D69 (0xd bytes), align: 0
  Segment part 82.            Intra module refs:   HCI_ReadBDADDRCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadWhiteListSizeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D6A - 00018D7D (0x14 bytes), align: 0
  Segment part 85.            Intra module refs:   HCI_LE_ClearWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd
                                   00018D6A 
               calls direct
               XSTACK = 00000000 ( 00000001 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D7E - 00018D92 (0x15 bytes), align: 0
  Segment part 87.            Intra module refs:   HCI_LE_AddWhiteListCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd
                                   00018D7E 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RemoveWhiteListCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 91. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadChannelMapCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D93 - 00018D96 (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   HCI_LE_ReadBufSizeCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D97 - 00018D9A (0x4 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 54
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018D9B - 00018DA6 (0xc bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 151
                                                   Segment part 94
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_EncryptCmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018DA7 - 00018DAE (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_RandCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018DAF - 00018DE8 (0x3a bytes), align: 0
  Segment part 99.            Intra module refs:   HCI_LE_RandCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd          00018DAF 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018DE9 - 00018E14 (0x2c bytes), align: 0
  Segment part 101.           Intra module refs:   HCI_LE_LtkReqReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd   00018DE9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E15 - 00018E42 (0x2e bytes), align: 0
  Segment part 103.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd
                                   00018E15 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadSupportedStatesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 107. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReceiverTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TransmitterTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 111. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TestEndCmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetRxGainCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E43 - 00018E45 (0x3 bytes), align: 0
  Segment part 115.           Intra module refs:   HCI_ReadRssiCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E46 - 00018E4C (0x7 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetTxPowerCmd   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 119. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 120. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 121. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 122. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 123. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ExtendRfRangeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 125. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E4D - 00018E4F (0x3 bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E50 - 00018E52 (0x3 bytes), align: 0
  Segment part 127.           Intra module refs:   HCI_ReadBDADDRCmd
                                                   Segment part 126
                                                   Segment part 188
                                                   Segment part 49
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E53 - 00018E59 (0x7 bytes), align: 0
  Segment part 128.           Intra module refs:   HCI_bm_alloc
                                                   Segment part 127
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 129. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_HaltDuringRfCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E5A - 00018E5B (0x2 bytes), align: 0
  Segment part 131.           Intra module refs:   HCI_LE_AddWhiteListCmd
                                                   HCI_LE_SetAdvDataCmd
                                                   HCI_LE_SetAdvEnableCmd
                                                   HCI_LE_SetScanRspDataCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E5C - 00018E5E (0x3 bytes), align: 0
  Segment part 132.           Intra module refs:   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E5F - 00018E62 (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   Segment part 132
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E63 - 00018E65 (0x3 bytes), align: 0
  Segment part 134.           Intra module refs:   Segment part 116
                                                   Segment part 133
                                                   Segment part 153
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E66 - 00018E6A (0x5 bytes), align: 0
  Segment part 135.           Intra module refs:   HCI_DisconnectCmd
                                                   Segment part 134
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_OnePktPerEvtCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 138. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ClkDivOnHaltCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DeclareNvUsageCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DecryptCmd      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 144. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 145. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetLocalSupportedFeaturesCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFastTxResponseTimeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E6B - 00018E6E (0x4 bytes), align: 0
  Segment part 150.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E6F - 00018E74 (0x6 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
                                                   Segment part 156
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E75 - 00018E79 (0x5 bytes), align: 0
  Segment part 152.           Intra module refs:   HCI_LE_LtkReqNegReplyCmd
                                                   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E7A - 00018E80 (0x7 bytes), align: 0
  Segment part 153.           Intra module refs:   Segment part 152
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSlaveLatencyOverrideCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E81 - 00018E86 (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   HCI_LE_LtkReqReplyCmd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestTxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 159. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemHopTestTxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestRxCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EndModemTestCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetBDADDRCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSCACmd       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 170. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EnablePTMCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFreqTuneCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SaveFreqTuneCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 176. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetMaxDtmTxPowerCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_MapPmIoPortCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 180. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DisconnectImmedCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PacketErrorRateCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PERbyChanCmd    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 186. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E87 - 00018E8B (0x5 bytes), align: 0
  Segment part 188.           Intra module refs:   Segment part 199
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_AdvEventNoticeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ConnEventNoticeCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_BuildRevisionCmd
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018E8C - 00018ED4 (0x49 bytes), align: 0
  Segment part 195.           Intra module refs:   LL_RandCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback            00018E8C 
               calls direct
               XSTACK = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018ED5 - 00018EF6 (0x22 bytes), align: 0
  Segment part 197.           Intra module refs:   LL_EXT_SetRxGainCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback   00018ED5 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EF7 - 00018EFE (0x8 bytes), align: 0
  Segment part 199.           Intra module refs:   LL_EXT_ExtendRfRangeCback
                                                   LL_EXT_SetRxGainCback
                                                   LL_EXT_SetTxPowerCback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018EFF - 00018F23 (0x25 bytes), align: 0
  Segment part 200.           Intra module refs:   LL_EXT_SetTxPowerCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback
                                   00018EFF 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 202. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRateCback
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F24 - 00018F4B (0x28 bytes), align: 0
  Segment part 204.           Intra module refs:   LL_EXT_ExtendRfRangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback
                                   00018F24 
               calls direct
               XSTACK = 00000000 ( 00000003 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B8A - 00000B8F (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_bm_alloc::?relay    00000B8A        L2CAP_bm_alloc (l2cap_util)
                                                   LL_RxReqDataBufCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ValidConnTimeParams::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B90 - 00000B95 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendDataPkt::?relay
                                   00000B90        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B96 - 00000B9B (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DisconnectCmd::?relay
                                   00000B96        GAP_TerminateLinkReq (gap_linkmgr)
                                                   disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRemoteVersionInfoCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetEventMaskCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ResetCmd::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadTransmitPowerLevelCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SetControllerToHostFlowCtrlCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostBufferSizeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HostNumCompletedPktCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalVersionInfoCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedCommandsCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 46. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000B9C - 00000BA1 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadBDADDRCmd::?relay
                                   00000B9C        GAP_ParamsInit (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA2 - 00000BA7 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReadRssiCmd::?relay
                                   00000BA2        GAPRole_ProcessEvent (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetEventMaskCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BA8 - 00000BAD (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadBufSizeCmd::?relay
                                   00000BA8        gapReadBD_ADDRStatus (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BAE - 00000BB3 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetRandomAddressCmd::?relay
                                   00000BAE        gapProcessNewAddr (gap_configmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BB4 - 00000BB9 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvParamCmd::?relay
                                   00000BB4        gapSetAdvParams (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BBA - 00000BBF (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvDataCmd::?relay
                                   00000BBA        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BC0 - 00000BC5 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetScanRspDataCmd::?relay
                                   00000BC0        GAP_UpdateAdvertisingData (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BC6 - 00000BCB (0x6 bytes), align: 0
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_SetAdvEnableCmd::?relay
                                   00000BC6        GAP_EndDiscoverable (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadAdvChanTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadWhiteListSizeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BCC - 00000BD1 (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ClearWhiteListCmd::?relay
                                   00000BCC        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD2 - 00000BD7 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_AddWhiteListCmd::?relay
                                   00000BD2        gapBondMgr_SyncWhiteList (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RemoveWhiteListCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 92. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadChannelMapCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_EncryptCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BD8 - 00000BDD (0x6 bytes), align: 0
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_RandCmd::?relay
                                   00000BD8        smProcessRandComplete (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BDE - 00000BE3 (0x6 bytes), align: 0
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqReplyCmd::?relay
                                   00000BDE        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BE4 - 00000BE9 (0x6 bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_LtkReqNegReplyCmd::?relay
                                   00000BE4        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReadSupportedStatesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_ReceiverTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 110. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TransmitterTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 112. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_LE_TestEndCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 114. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetRxGainCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 124. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ExtendRfRangeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 130. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_HaltDuringRfCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 137. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_OnePktPerEvtCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 139. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ClkDivOnHaltCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DeclareNvUsageCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DecryptCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetLocalSupportedFeaturesCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 148. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFastTxResponseTimeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSlaveLatencyOverrideCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestTxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemHopTestTxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ModemTestRxCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EndModemTestCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetBDADDRCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetSCACmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_EnablePTMCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetFreqTuneCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SaveFreqTuneCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_SetMaxDtmTxPowerCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 179. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_MapPmIoPortCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_DisconnectImmedCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PacketErrorRateCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 185. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_PERbyChanCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_AdvEventNoticeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_ConnEventNoticeCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_EXT_BuildRevisionCmd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BEA - 00000BEF (0x6 bytes), align: 0
  Segment part 196.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RandCback::?relay    00000BEA        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BF0 - 00000BF5 (0x6 bytes), align: 0
  Segment part 198.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGainCback::?relay
                                   00000BF0        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BF6 - 00000BFB (0x6 bytes), align: 0
  Segment part 201.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPowerCback::?relay
                                   00000BF6        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 203. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRateCback::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000BFC - 00000C01 (0x6 bytes), align: 0
  Segment part 205.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRangeCback::?relay
                                   00000BFC        llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 206. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 207. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 208. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 209. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_data

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007DB - 000007FA (0x20 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_TxDataBufferInsert
                                                   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007FB - 000007FB (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_TxDataBufferInsert
                                                   HCI_TxDataSend
                                                   LL_TxDataCompleteCback
                                                   Segment part 18
                                                   hciTxDataBufferReset
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007FC - 000007FC (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_TxDataBufferInsert
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInit    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017C09 - 00017CC7 (0xbf bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_TxDataBufferInsert::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInsert
                                   00017C09 
               calls direct
               XSTACK = 00000002 ( 0000000F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CC8 - 00017CD2 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_TxDataBufferInsert
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReverseBytes        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017CD3 - 00017D98 (0xc6 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_TxDataSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataSend          00017CD3 
               calls direct
               XSTACK = 0000000F ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D99 - 00017DA6 (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_TxDataSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DA7 - 00017DAA (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_TxDataSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DAB - 00017DB5 (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DB6 - 00017DFE (0x49 bytes), align: 0
  Segment part 21.            Intra module refs:   hciTxDataBufferReset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           hciTxDataBufferReset    00017DB6 
               calls direct
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017DFF - 00017E0A (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_TxDataBufferInsert
                                                   hciTxDataBufferReset
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E0B - 00017E20 (0x16 bytes), align: 0
  Segment part 24.            Intra module refs:   hciTxDataBufferReset
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E21 - 00017E2B (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E2C - 00017E68 (0x3d bytes), align: 0
  Segment part 26.            Intra module refs:   LL_RxReqDataBufCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxReqDataBufCback    00017E2C 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E69 - 00017E6D (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   HCI_TxDataSend
                                                   LL_RxReqDataBufCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E6E - 00017F72 (0x105 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_RxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback
                                   00017E6E 
               calls direct
               XSTACK = 00000002 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F73 - 00017F76 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F77 - 00017F84 (0xe bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F85 - 00017F89 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F8A - 00017F93 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   LL_RxDataCompleteCback
                                                   Segment part 33
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F94 - 00017F9A (0x7 bytes), align: 0
  Segment part 35.            Intra module refs:   LL_RxDataCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017F9B - 00017FF4 (0x5a bytes), align: 0
  Segment part 36.            Intra module refs:   LL_TxDataCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxDataCompleteCback
                                   00017F9B 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInit::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C02 - 00000C07 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataBufferInsert::?relay
                                   00000C02        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ReverseBytes::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C08 - 00000C0D (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_TxDataBufferInsert
                                                   LL_TxDataCompleteCback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TxDataSend::?relay
                                   00000C08 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C0E - 00000C13 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_TxDataSend
                                                   LL_TxDataCompleteCback
           LOCAL                   ADDRESS         
           =====                   =======         
           hciTxDataBufferReset::?relay
                                   00000C0E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C14 - 00000C19 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxReqDataBufCback::?relay
                                   00000C14        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C1A - 00000C1F (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RxDataCompleteCback::?relay
                                   00000C1A        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C20 - 00000C25 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxDataCompleteCback::?relay
                                   00000C20        llConnCleanup (ll_common)
                                                   llProcessPendingTxData (ll_common)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : hci_event

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000007FD - 000007FD (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bleEvtMask              000007FD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000007FE - 00000805 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   hciInitEventMasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pHciEvtMask             000007FE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B5E - 00011B7F (0x22 bytes), align: 0
  Segment part 8.             Intra module refs:   hciInitEventMasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks       00011B5E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B80 - 00011B86 (0x7 bytes), align: 0
  Segment part 10.            Intra module refs:   hciInitEventMasks
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B87 - 00011B9A (0x14 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_DataBufferOverflowEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DataBufferOverflowEvent
                                   00011B87 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B9B - 00011B9F (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_DataBufferOverflowEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011BA0 - 00011CB2 (0x113 bytes), align: 0
  Segment part 14.            Intra module refs:   HCI_NumOfCompletedPacketsEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent
                                   00011BA0 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CB3 - 00011CB7 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CB8 - 00011CBC (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CBD - 00011CD3 (0x17 bytes), align: 0
  Segment part 18.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   Segment part 17
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CD4 - 00011CD7 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CD8 - 00011CDE (0x7 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 21
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CDF - 00011CE4 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011CE5 - 00011DC2 (0xde bytes), align: 0
  Segment part 22.            Intra module refs:   HCI_CommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent
                                   00011CE5 
               calls direct
               XSTACK = 00000003 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011DC3 - 00011DE1 (0x1f bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_VendorSpecifcCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent
                                   00011DC3 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011DE2 - 00011E3C (0x5b bytes), align: 0
  Segment part 26.            Intra module refs:   HCI_CommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent
                                   00011DE2 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HardwareErrorEvent
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E3D - 00011E52 (0x16 bytes), align: 0
  Segment part 30.            Intra module refs:   HCI_DataBufferOverflowEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E53 - 00011E6A (0x18 bytes), align: 0
  Segment part 31.            Intra module refs:   HCI_DataBufferOverflowEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E6B - 00011E6E (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 30
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011E6F - 00011EAB (0x3d bytes), align: 0
  Segment part 33.            Intra module refs:   HCI_SendCommandStatusEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent
                                   00011E6F 
               calls direct
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011EAC - 00011EB1 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_CommandStatusEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011EB2 - 00011FB3 (0x102 bytes), align: 0
  Segment part 36.            Intra module refs:   HCI_SendCommandCompleteEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent
                                   00011EB2 
               calls direct
               XSTACK = 00000014 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FB4 - 00011FB8 (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FB9 - 00011FC1 (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FC2 - 00011FC5 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FC6 - 00011FCA (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FCB - 00011FCE (0x4 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 30
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FCF - 00011FD3 (0x5 bytes), align: 0
  Segment part 43.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FD4 - 00011FD6 (0x3 bytes), align: 0
  Segment part 44.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FD7 - 00011FDC (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 44
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FDD - 00011FDD (0x1 bytes), align: 0
  Segment part 46.            Intra module refs:   HCI_CommandCompleteEvent
                                                   LL_EncLtkReqCback
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FDE - 00011FE3 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 46
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FE4 - 00011FEC (0x9 bytes), align: 0
  Segment part 48.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FED - 00011FF0 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FF1 - 00011FF8 (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FF9 - 00011FFE (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011FFF - 0001205B (0x5d bytes), align: 0
  Segment part 52.            Intra module refs:   HCI_SendControllerToHostEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent
                                   00011FFF 
               calls direct
               XSTACK = 0000000D ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001205C - 0001205F (0x4 bytes), align: 0
  Segment part 54.            Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012060 - 00012065 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 110
                                                   Segment part 152
                                                   Segment part 54
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012066 - 00012072 (0xd bytes), align: 0
  Segment part 56.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012073 - 0001207E (0xc bytes), align: 0
  Segment part 57.            Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001207F - 00012082 (0x4 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012083 - 0001208B (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 50
                                                   Segment part 58
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AdvReportCback       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001208C - 00012090 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012091 - 00012095 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   HCI_SendControllerToHostEvent
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012096 - 00012096 (0x1 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 100
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012097 - 0001209D (0x7 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 42
                                                   Segment part 69
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001209E - 00012285 (0x1e8 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_ConnectionCompleteCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback
                                   0001209E 
               calls direct
               XSTACK = 00000009 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012286 - 00012289 (0x4 bytes), align: 0
  Segment part 74.            Intra module refs:   HCI_SendCommandCompleteEvent
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001228A - 00012294 (0xb bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 74
                                                   Segment part 76
                                                   Segment part 77
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012295 - 00012299 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001229A - 0001229F (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122A0 - 000122A5 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122A6 - 000122AE (0x9 bytes), align: 0
  Segment part 79.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122AF - 000122B2 (0x4 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122B3 - 000122B6 (0x4 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 138
                                                   Segment part 80
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122B7 - 000122C5 (0xf bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 147
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122C6 - 000122D3 (0xe bytes), align: 0
  Segment part 83.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122D4 - 000122D7 (0x4 bytes), align: 0
  Segment part 84.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122D8 - 000122E0 (0x9 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 84
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122E1 - 000122E4 (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122E5 - 000122E8 (0x4 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122E9 - 000122EF (0x7 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 87
                                                   Segment part 91
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122F0 - 000122F5 (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122F6 - 000122F9 (0x4 bytes), align: 0
  Segment part 90.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000122FA - 00012301 (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   Segment part 90
                                                   Segment part 95
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012302 - 0001230B (0xa bytes), align: 0
  Segment part 92.            Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001230C - 0001230F (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   Segment part 152
                                                   Segment part 92
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012310 - 00012315 (0x6 bytes), align: 0
  Segment part 94.            Intra module refs:   Segment part 101
                                                   Segment part 107
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012316 - 0001231C (0x7 bytes), align: 0
  Segment part 95.            Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001231D - 00012388 (0x6c bytes), align: 0
  Segment part 96.            Intra module refs:   LL_DisconnectCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback      0001231D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012389 - 0001238D (0x5 bytes), align: 0
  Segment part 98.            Intra module refs:   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001238E - 00012391 (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012392 - 00012398 (0x7 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 123
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012399 - 0001239C (0x4 bytes), align: 0
  Segment part 101.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001239D - 000123A0 (0x4 bytes), align: 0
  Segment part 102.           Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000123A1 - 000123AD (0xd bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 102
                                                   Segment part 104
                                                   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000123AE - 000123B3 (0x6 bytes), align: 0
  Segment part 104.           Intra module refs:   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000123B4 - 0001245D (0xaa bytes), align: 0
  Segment part 105.           Intra module refs:   LL_ConnParamUpdateCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback
                                   000123B4 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001245E - 00012463 (0x6 bytes), align: 0
  Segment part 107.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012464 - 00012467 (0x4 bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012468 - 0001246E (0x7 bytes), align: 0
  Segment part 109.           Intra module refs:   Segment part 108
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001246F - 00012477 (0x9 bytes), align: 0
  Segment part 110.           Intra module refs:   Segment part 109
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012478 - 0001247C (0x5 bytes), align: 0
  Segment part 111.           Intra module refs:   LL_ConnParamUpdateCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001247D - 0001247E (0x2 bytes), align: 0
  Segment part 112.           Intra module refs:   HCI_CommandCompleteEvent
                                                   Segment part 111
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001247F - 0001247F (0x1 bytes), align: 0
  Segment part 113.           Intra module refs:   LL_ConnParamUpdateCback
                                                   Segment part 112
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012480 - 00012481 (0x2 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_ConnectionCompleteCback
                                                   Segment part 113
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012482 - 00012487 (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   LL_EncChangeCback
                                                   Segment part 114
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012488 - 0001251A (0x93 bytes), align: 0
  Segment part 116.           Intra module refs:   LL_ReadRemoteVersionInfoCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback
                                   00012488 
               calls direct
               XSTACK = 00000004 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001251B - 00012520 (0x6 bytes), align: 0
  Segment part 118.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012521 - 00012524 (0x4 bytes), align: 0
  Segment part 119.           Intra module refs:   Segment part 118
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012525 - 00012525 (0x1 bytes), align: 0
  Segment part 120.           Intra module refs:   Segment part 119
                                                   Segment part 126
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012526 - 0001252D (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 120
                                                   Segment part 20
                                                   Segment part 70
                                                   Segment part 88
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001252E - 00012535 (0x8 bytes), align: 0
  Segment part 122.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_EncLtkReqCback
                                                   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012536 - 0001253F (0xa bytes), align: 0
  Segment part 123.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012540 - 00012543 (0x4 bytes), align: 0
  Segment part 124.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012544 - 00012547 (0x4 bytes), align: 0
  Segment part 125.           Intra module refs:   Segment part 124
                                                   Segment part 127
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012548 - 00012551 (0xa bytes), align: 0
  Segment part 126.           Intra module refs:   Segment part 125
                                                   Segment part 129
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012552 - 00012557 (0x6 bytes), align: 0
  Segment part 127.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012558 - 0001255B (0x4 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001255C - 00012563 (0x8 bytes), align: 0
  Segment part 129.           Intra module refs:   Segment part 128
                                                   Segment part 130
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012564 - 00012569 (0x6 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_ReadRemoteVersionInfoCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001256A - 000126AC (0x143 bytes), align: 0
  Segment part 131.           Intra module refs:   LL_EncLtkReqCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback       0001256A 
               calls direct
               XSTACK = 00000002 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126AD - 000126B0 (0x4 bytes), align: 0
  Segment part 133.           Intra module refs:   LL_ConnectionCompleteCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126B1 - 000126B5 (0x5 bytes), align: 0
  Segment part 134.           Intra module refs:   LL_EncLtkReqCback
                                                   Segment part 133
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126B6 - 000126C2 (0xd bytes), align: 0
  Segment part 135.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126C3 - 000126C4 (0x2 bytes), align: 0
  Segment part 136.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126C5 - 000126CD (0x9 bytes), align: 0
  Segment part 137.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncLtkReqCback
                                                   Segment part 136
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126CE - 000126D5 (0x8 bytes), align: 0
  Segment part 138.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_EncLtkReqCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000126D6 - 00012721 (0x4c bytes), align: 0
  Segment part 139.           Intra module refs:   LL_EncChangeCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback       000126D6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012722 - 00012722 (0x1 bytes), align: 0
  Segment part 141.           Intra module refs:   HCI_NumOfCompletedPacketsEvent
                                                   HCI_SendCommandCompleteEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012723 - 00012725 (0x3 bytes), align: 0
  Segment part 142.           Intra module refs:   HCI_SendControllerToHostEvent
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 141
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012726 - 0001272B (0x6 bytes), align: 0
  Segment part 143.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_ConnectionCompleteCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_EncLtkReqCback
                                                   Segment part 142
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001272C - 0001272D (0x2 bytes), align: 0
  Segment part 144.           Intra module refs:   HCI_DataBufferOverflowEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001272E - 00012735 (0x8 bytes), align: 0
  Segment part 145.           Intra module refs:   HCI_CommandStatusEvent
                                                   LL_ConnParamUpdateCback
                                                   LL_DisconnectCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
                                                   LL_ReadRemoteVersionInfoCback
                                                   Segment part 144
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012736 - 00012745 (0x10 bytes), align: 0
  Segment part 146.           Intra module refs:   LL_ConnParamUpdateCback
                                                   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012746 - 00012761 (0x1c bytes), align: 0
  Segment part 147.           Intra module refs:   Segment part 146
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012762 - 00012768 (0x7 bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 103
                                                   Segment part 147
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012769 - 000127B0 (0x48 bytes), align: 0
  Segment part 149.           Intra module refs:   LL_EncKeyRefreshCback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback   00012769 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000127B1 - 000127BB (0xb bytes), align: 0
  Segment part 151.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000127BC - 000127D3 (0x18 bytes), align: 0
  Segment part 152.           Intra module refs:   LL_EncChangeCback
                                                   LL_EncKeyRefreshCback
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEndDoneCback
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000127D4 - 000127DF (0xc bytes), align: 0
  Segment part 155.           Intra module refs:   HCI_SendCommandStatusEvent
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C26 - 00000C2B (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciInitEventMasks::?relay
                                   00000C26        HCI_Init (hci_tl)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C2C - 00000C31 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_DataBufferOverflowEvent::?relay
                                   00000C2C        HCI_TxDataBufferInsert (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C32 - 00000C37 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_NumOfCompletedPacketsEvent::?relay
                                   00000C32        HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   LL_TxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C38 - 00000C3D (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandCompleteEvent::?relay
                                   00000C38        HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   LL_RandCback (hci)
                                                   Segment part 115 (hci)
                                                   Segment part 132 (hci)
                                                   Segment part 152 (hci)
                                                   Segment part 68 (hci)
                                                   Segment part 81 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C3E - 00000C43 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_VendorSpecifcCommandCompleteEvent::?relay
                                   00000C3E        Segment part 199 (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C44 - 00000C49 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_CommandStatusEvent::?relay
                                   00000C44        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_HardwareErrorEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C4A - 00000C4F (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   HCI_CommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandStatusEvent::?relay
                                   00000C4A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C50 - 00000C55 (0x6 bytes), align: 0
  Segment part 37.            Intra module refs:   HCI_CommandCompleteEvent
                                                   HCI_VendorSpecifcCommandCompleteEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendCommandCompleteEvent::?relay
                                   00000C50 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C56 - 00000C5B (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   HCI_SendCommandStatusEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SendControllerToHostEvent::?relay
                                   00000C56 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AdvReportCback::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C5C - 00000C61 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnectionCompleteCback::?relay
                                   00000C5C        LL_ProcessEvent (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C62 - 00000C67 (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DisconnectCback::?relay
                                   00000C62        llConnTerminate (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C68 - 00000C6D (0x6 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnParamUpdateCback::?relay
                                   00000C68        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C6E - 00000C73 (0x6 bytes), align: 0
  Segment part 117.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfoCback::?relay
                                   00000C6E        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C74 - 00000C79 (0x6 bytes), align: 0
  Segment part 132.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReqCback::?relay
                                   00000C74        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C7A - 00000C7F (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncChangeCback::?relay
                                   00000C7A        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C80 - 00000C85 (0x6 bytes), align: 0
  Segment part 150.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncKeyRefreshCback::?relay
                                   00000C80        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEndDoneCback::?relay
                                   
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_if

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCF2 - 0001BD5A (0x69 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_RegisterApp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp       0001BCF2 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BD5B - 0001BDAE (0x54 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_SendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData          0001BD5B 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDAF - 0001BDD0 (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   L2CAP_CmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject         0001BDAF 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_EchoReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_InfoReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDD1 - 0001BDD5 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   L2CAP_ConnParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDD6 - 0001BDF9 (0x24 bytes), align: 0
  Segment part 17.            Intra module refs:   L2CAP_ConnParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq
                                   0001BDD6 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDFA - 0001BDFC (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   L2CAP_CmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BDFD - 0001BE01 (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 16
                                                   Segment part 19
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001BE02 - 0001BE06 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   L2CAP_SendData
                                                   Segment part 20
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateRsp
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C86 - 00000C8B (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_RegisterApp::?relay
                                   00000C86        GAP_Init (gap_task)
                                                   GATT_Init (gatt_task)
                                                   SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C8C - 00000C91 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_SendData::?relay
                                   00000C8C        attSendMsg (att_util)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C92 - 00000C97 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_CmdReject::?relay
                                   00000C92        gapProcessOSALMsg (gap_task)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_EchoReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_InfoReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C98 - 00000C9D (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateReq::?relay
                                   00000C98        gapRole_startConnUpdate (peripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ConnParamUpdateRsp::?relay
                                   
               is not allocated
               not allocated function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000806 - 00000806 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   L2CAP_Init
                                                   L2CAP_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capTaskID             00000806        l2capEncapSendData (l2cap_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000807 - 00000812 (0xc bytes), align: 0
  Segment part 7.             Intra module refs:   L2CAP_Init
                                                   l2capProcessReq
                                                   l2capProcessRxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFixedChannels      00000807        L2CAP_RegisterApp (l2cap_if)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000813 - 0000082A (0x18 bytes), align: 0
  Segment part 8.             Intra module refs:   L2CAP_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capChannels           00000813        Segment part 108 (l2cap_util)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018F4C - 00018FB8 (0x6d bytes), align: 0
  Segment part 9.             Intra module refs:   L2CAP_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init              00018F4C 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FB9 - 00018FFE (0x46 bytes), align: 0
  Segment part 11.            Intra module refs:   L2CAP_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent      00018FB9 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00018FFF - 00019003 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   L2CAP_ProcessEvent
                                                   l2capProcessSignal
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019004 - 000190F8 (0xf5 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capProcessRxData::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData      00019004 
               calls direct
               XSTACK = 0000000C ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000190F9 - 000191F4 (0xfc bytes), align: 0
  Segment part 16.            Intra module refs:   l2capProcessSignal::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal      000190F9 
               calls direct
               XSTACK = 0000000F ( 00000018 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000191F5 - 000192DE (0xea bytes), align: 0
  Segment part 18.            Intra module refs:   l2capProcessRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp         000191F5 
               calls direct
               XSTACK = 00000018 ( 0000001F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000192DF - 00019399 (0xbb bytes), align: 0
  Segment part 20.            Intra module refs:   l2capProcessReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq         000192DF 
               calls direct
               XSTACK = 00000018 ( 00000024 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001939A - 000193A0 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capProcessReq
                                                   l2capProcessRxData
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000C9E - 00000CA3 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_Init::?relay      00000C9E        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CA4 - 00000CA9 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ProcessEvent::?relay
                                   00000CA4        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CAA - 00000CAF (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   L2CAP_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRxData::?relay
                                   00000CAA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CB0 - 00000CB5 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capProcessRxData
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessSignal::?relay
                                   00000CB0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CB6 - 00000CBB (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessRsp::?relay
                                   00000CB6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CBC - 00000CC1 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capProcessSignal
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capProcessReq::?relay
                                   00000CBC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : l2cap_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000082B - 0000082B (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F1D - 00015F44 (0x28 bytes), align: 0
  Segment part 7.             Intra module refs:   l2capParseSignalHdr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr     00015F1D 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F45 - 00015F45 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   l2capParsePacket
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F46 - 00015F4D (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F4E - 00015F4F (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   l2capParseCmdReject
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F50 - 00015F53 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 11
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F54 - 00015F5E (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F5F - 00016033 (0xd5 bytes), align: 0
  Segment part 14.            Intra module refs:   l2capSendReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq            00015F5F 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016034 - 00016038 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   l2capNotifySignal
                                                   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016039 - 00016109 (0xd1 bytes), align: 0
  Segment part 17.            Intra module refs:   l2capSendCmd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd            00016039 
               calls direct
               XSTACK = 00000016 ( 00000018 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001610A - 00016111 (0x8 bytes), align: 0
  Segment part 19.            Intra module refs:   l2capSendCmd
                                                   l2capSendReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016112 - 000161EB (0xda bytes), align: 0
  Segment part 20.            Intra module refs:   l2capEncapSendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData      00016112 
               calls direct
               XSTACK = 00000018 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161EC - 000161F0 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   l2capEncapSendData
                                                   l2capParsePacket
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161F1 - 000161F4 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   l2capEncapSendData
                                                   l2capParseSignalHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000161F5 - 00016203 (0xf bytes), align: 0
  Segment part 24.            Intra module refs:   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016204 - 0001620C (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001620D - 000162E1 (0xd5 bytes), align: 0
  Segment part 26.            Intra module refs:   l2capParsePacket::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket        0001620D 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000162E2 - 000162E3 (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   l2capParsePacket
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000162E4 - 000162EB (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000162EC - 00016340 (0x55 bytes), align: 0
  Segment part 30.            Intra module refs:   L2CAP_BuildCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject    000162EC 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016341 - 00016353 (0x13 bytes), align: 0
  Segment part 32.            Intra module refs:   L2CAP_BuildCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016354 - 00016357 (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 23
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016358 - 000163D9 (0x82 bytes), align: 0
  Segment part 34.            Intra module refs:   l2capParseCmdReject::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject     00016358 
               XSTACK = 00000002 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163DA - 000163E4 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   l2capParseCmdReject
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 37. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoReq       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163E5 - 000163E5 (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163E6 - 000163ED (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 39
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseEchoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildInfoReq       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163EE - 000163F4 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   l2capFreeChannel
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseInfoReq      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildInfoRsp      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163F5 - 000163FD (0x9 bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 77
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163FE - 00016402 (0x5 bytes), align: 0
  Segment part 62.            Intra module refs:   L2CAP_bm_alloc
                                                   l2capFindLocalId
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseInfoRsp       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016403 - 00016407 (0x5 bytes), align: 0
  Segment part 65.            Intra module refs:   l2capAllocChannel
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016408 - 0001640C (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 85
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001640D - 00016416 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 67
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016417 - 0001641E (0x8 bytes), align: 0
  Segment part 70.            Intra module refs:   l2capNotifySignal
                                                   l2capSendCmd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001641F - 00016441 (0x23 bytes), align: 0
  Segment part 71.            Intra module refs:   l2capBuildParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq
                                   0001641F 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016442 - 00016445 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016446 - 00016454 (0xf bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016455 - 0001645B (0x7 bytes), align: 0
  Segment part 75.            Intra module refs:   Segment part 33
                                                   Segment part 58
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001645C - 00016464 (0x9 bytes), align: 0
  Segment part 76.            Intra module refs:   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016465 - 00016474 (0x10 bytes), align: 0
  Segment part 77.            Intra module refs:   L2CAP_BuildCmdReject
                                                   l2capBuildParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016475 - 00016478 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016479 - 00016483 (0xb bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 74
                                                   Segment part 78
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016484 - 00016484 (0x1 bytes), align: 0
  Segment part 80.            Intra module refs:   l2capParseSignalHdr
                                                   l2capStopTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016485 - 00016489 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   Segment part 80
                                                   l2capBuildParamUpdateReq
                                                   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001648A - 000164C1 (0x38 bytes), align: 0
  Segment part 82.            Intra module refs:   L2CAP_ParseParamUpdateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq
                                   0001648A 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164C2 - 000164C7 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capHandleTimerCB
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164C8 - 000164D9 (0x12 bytes), align: 0
  Segment part 85.            Intra module refs:   L2CAP_ParseParamUpdateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164DA - 000164DD (0x4 bytes), align: 0
  Segment part 86.            Intra module refs:   L2CAP_ParseParamUpdateReq
                                                   l2capParseCmdReject
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164DE - 000164F0 (0x13 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   Segment part 93
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildParamUpdateRsp
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000164F1 - 0001650C (0x1c bytes), align: 0
  Segment part 90.            Intra module refs:   l2capParseParamUpdateRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp
                                   000164F1 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001650D - 00016515 (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016516 - 0001651B (0x6 bytes), align: 0
  Segment part 93.            Intra module refs:   l2capParseParamUpdateRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001651C - 0001658C (0x71 bytes), align: 0
  Segment part 94.            Intra module refs:   l2capNotifyData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData         0001651C 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001658D - 00016611 (0x85 bytes), align: 0
  Segment part 96.            Intra module refs:   l2capNotifySignal::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal       0001658D 
               calls direct
               XSTACK = 0000000D ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016612 - 00016619 (0x8 bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 99
                                                   l2capNotifyData
                                                   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001661A - 0001661F (0x6 bytes), align: 0
  Segment part 99.            Intra module refs:   l2capNotifySignal
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016620 - 00016678 (0x59 bytes), align: 0
  Segment part 100.           Intra module refs:   l2capAllocChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel       00016620 
               XSTACK = 00000012 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016679 - 0001667D (0x5 bytes), align: 0
  Segment part 102.           Intra module refs:   l2capAllocChannel
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001667E - 00016688 (0xb bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 102
                                                   l2capEncapSendData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016689 - 0001669D (0x15 bytes), align: 0
  Segment part 104.           Intra module refs:   l2capFreeChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel        00016689 
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001669E - 000166D5 (0x38 bytes), align: 0
  Segment part 106.           Intra module refs:   l2capFindLocalId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId        0001669E 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166D6 - 000166E5 (0x10 bytes), align: 0
  Segment part 108.           Intra module refs:   l2capAllocChannel
                                                   l2capFindLocalId
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166E6 - 000166FE (0x19 bytes), align: 0
  Segment part 109.           Intra module refs:   l2capStopTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer          000166E6 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166FF - 00016763 (0x65 bytes), align: 0
  Segment part 111.           Intra module refs:   l2capHandleTimerCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB      000166FF 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016764 - 00016766 (0x3 bytes), align: 0
  Segment part 113.           Intra module refs:   l2capHandleRxError::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError      00016764 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016767 - 0001678A (0x24 bytes), align: 0
  Segment part 115.           Intra module refs:   L2CAP_bm_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc          00016767 
               calls direct
               XSTACK = 00000018 ( 0000000A )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC2 - 00000CC7 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseSignalHdr::?relay
                                   00000CC2        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CC8 - 00000CCD (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendReq::?relay    00000CC8        Segment part 16 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CCE - 00000CD3 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capSendCmd::?relay    00000CCE        Segment part 19 (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CD4 - 00000CD9 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capEncapSendData::?relay
                                   00000CD4        L2CAP_SendData (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CDA - 00000CDF (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParsePacket::?relay
                                   00000CDA        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CE0 - 00000CE5 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildCmdReject::?relay
                                   00000CE0        L2CAP_CmdReject (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CE6 - 00000CEB (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseCmdReject::?relay
                                   00000CE6        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildEchoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseEchoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseInfoReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseInfoRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CEC - 00000CF1 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capBuildParamUpdateReq::?relay
                                   00000CEC        L2CAP_ConnParamUpdateReq (l2cap_if)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF2 - 00000CF7 (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_ParseParamUpdateReq::?relay
                                   00000CF2        l2capProcessReq (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_BuildParamUpdateRsp::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CF8 - 00000CFD (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capParseParamUpdateRsp::?relay
                                   00000CF8        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000CFE - 00000D03 (0x6 bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifyData::?relay
                                   00000CFE        l2capProcessRxData (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D04 - 00000D09 (0x6 bytes), align: 0
  Segment part 97.            Intra module refs:   l2capHandleTimerCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capNotifySignal::?relay
                                   00000D04        l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D0A - 00000D0F (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capAllocChannel::?relay
                                   00000D0A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D10 - 00000D15 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   l2capHandleTimerCB
                                                   l2capSendReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFreeChannel::?relay
                                   00000D10        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D16 - 00000D1B (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capFindLocalId::?relay
                                   00000D16        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D1C - 00000D21 (0x6 bytes), align: 0
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capStopTimer::?relay
                                   00000D1C        l2capProcessRsp (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D22 - 00000D27 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   l2capSendReq
           LOCAL                   ADDRESS         
           =====                   =======         
           l2capHandleTimerCB::?relay
                                   00000D22 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D28 - 00000D2D (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           l2capHandleRxError::?relay
                                   00000D28        l2capProcessSignal (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D2E - 00000D33 (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   l2capSendCmd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           L2CAP_bm_alloc::?relay
                                   00000D2E        attSendMsg (att_util)
                                                   smSendSMMsg (smp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : linkdb

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000082C - 0000084E (0x23 bytes), align: 0
  Segment part 6.             Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000084F - 00000866 (0x18 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 37
                                                   linkDB_Register
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019E35 - 00019E5C (0x28 bytes), align: 0
  Segment part 8.             Intra module refs:   linkDB_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init             00019E35 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019E5D - 00019E9A (0x3e bytes), align: 0
  Segment part 10.            Intra module refs:   linkDB_Register::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register         00019E5D 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019E9B - 00019F58 (0xbe bytes), align: 0
  Segment part 12.            Intra module refs:   linkDB_Add::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add              00019E9B 
               calls direct
               XSTACK = 00000004 ( 00000016 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019F59 - 00019FBA (0x62 bytes), align: 0
  Segment part 14.            Intra module refs:   linkDB_Remove::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove           00019F59 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Update           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019FBB - 00019FC3 (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019FC4 - 00019FDF (0x1c bytes), align: 0
  Segment part 19.            Intra module refs:   linkDB_Find::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find             00019FC4 
               XSTACK = 00000014 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019FE0 - 0001A000 (0x21 bytes), align: 0
  Segment part 21.            Intra module refs:   linkDB_FindFirst::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst        00019FE0 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A001 - 0001A007 (0x7 bytes), align: 0
  Segment part 23.            Intra module refs:   linkDB_Find
                                                   linkDB_FindFirst
                                                   linkDB_Init
                                                   linkDB_NumActive
                                                   linkDB_PerformFunc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A008 - 0001A032 (0x2b bytes), align: 0
  Segment part 24.            Intra module refs:   linkDB_State::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State            0001A008 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A033 - 0001A037 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   linkDB_Remove
                                                   linkDB_State
                                                   reportStatusChange
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A038 - 0001A046 (0xf bytes), align: 0
  Segment part 27.            Intra module refs:   linkDB_NumActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive        0001A038 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A047 - 0001A0B7 (0x71 bytes), align: 0
  Segment part 29.            Intra module refs:   linkDB_Authen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen           0001A047 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0B8 - 0001A0BB (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   linkDB_Add
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0BC - 0001A0C0 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   linkDB_Authen
                                                   linkDB_Remove
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0C1 - 0001A0E6 (0x26 bytes), align: 0
  Segment part 33.            Intra module refs:   linkDB_PerformFunc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc      0001A0C1 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0E7 - 0001A11D (0x37 bytes), align: 0
  Segment part 35.            Intra module refs:   reportStatusChange::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange      0001A0E7 
               XSTACK = 00000014 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001A11E - 0001A12E (0x11 bytes), align: 0
  Segment part 37.            Intra module refs:   linkDB_Init
                                                   reportStatusChange
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D34 - 00000D39 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Init::?relay     00000D34        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D3A - 00000D3F (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Register::?relay
                                   00000D3A        GATTServApp_Init (gattservapp)
                                                   GATT_InitServer (gatt_server)
                                                   SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D40 - 00000D45 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Add::?relay      00000D40        gapProcessConnectionCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D46 - 00000D4B (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Remove::?relay   00000D46        gapProcessDisconnectCompleteEvt (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Update::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D4C - 00000D51 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   linkDB_Add
                                                   linkDB_Authen
                                                   linkDB_Remove
                                                   linkDB_State
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Find::?relay     00000D4C        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 48 (gap_linkmgr)
                                                   Segment part 61 (gap_linkmgr)
                                                   Segment part 84 (gap_linkmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   sendAuthEvent (gap_linkmgr)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D52 - 00000D57 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_FindFirst::?relay
                                   00000D52        disconnectNext (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D58 - 00000D5D (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_State::?relay    00000D58        L2CAP_SendData (l2cap_if)
                                                   attSendMsg (att_util)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   l2capSendReq (l2cap_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D5E - 00000D63 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_NumActive::?relay
                                   00000D5E        GAP_NumActiveConnections (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D64 - 00000D69 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_Authen::?relay   00000D64        GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D6A - 00000D6F (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linkDB_PerformFunc::?relay
                                   00000D6A        GAPBondMgr_ServiceChangeInd (gapbondmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D70 - 00000D75 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 18
                                                   linkDB_Add
           LOCAL                   ADDRESS         
           =====                   =======         
           reportStatusChange::?relay
                                   00000D70 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PMUX                    000000AE 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncReq (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APCFG                   000000F2 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 14. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 15. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 16. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 17. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000867 - 0000086C (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_Init
                                                   LL_ReadBDADDR
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownPublicAddr           00000867 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000086D - 00000872 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_Init
                                                   LL_SetAdvParam
                                                   LL_SetRandomAddress
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownRandomAddr           0000086D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000873 - 00000878 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ownSavedPublicAddr      00000873 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000879 - 00000879 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_Init
                                                   LL_ProcessEvent
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TaskID               00000879        LL_PowerOnReq (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000087A - 0000087A (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_Rand
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llState                 0000087A        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFreeTask (ll_scheduler)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000087B - 0000087B (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCause            0000087B        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000087C - 0000087D (0x2 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_Rand
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           postRfOperations        0000087C        llProcessPostRfOps (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000087E - 0000087E (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   LL_ReadRssi
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rssiCorrection          0000087E        llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000087F - 0000087F (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clkDivOnHalt            0000087F        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000880 - 00000880 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nvInUse                 00000880        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000881 - 0000088C (0xc bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfCounters              00000881        llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000088D - 00000895 (0x9 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deviceFeatureSet        0000088D        llAllocConnId (ll_common)
                                                   llInitFeatureSet (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000896 - 00000896 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maxTxPwrForDTM          00000896 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000897 - 0000089B (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           verInfo                 00000897        llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000089C - 000008A3 (0x8 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dtmInfo                 0000089C        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008A4 - 000008A5 (0x2 bytes), align: 0
  Segment part 38.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buildInfo               000008A4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000008A6 - 000009AD (0x108 bytes), align: 0
  Segment part 39.            Intra module refs:   LL_ConnActive
                                                   LL_Disconnect
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ProcessEvent
                                                   LL_ReadRssi
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConns                 000008A6        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llConnCleanup (ll_common)
                                                   llGetNextConn (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llReleaseAllConnId (ll_common)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009AE - 000009B4 (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   LL_ProcessEvent
                                                   LL_Reset
                                                   LL_SetAdvParam
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           peerInfo                000009AE        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009B5 - 000009B9 (0x5 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chanMapUpdate           000009B5        llAllocConnId (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BA - 000009BA (0x1 bytes), align: 0
  Segment part 42.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onePktPerEvt            000009BA        llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BB - 000009BB (0x1 bytes), align: 0
  Segment part 43.            Intra module refs:   LL_Reset
                                                   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fastTxRespTime          000009BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BC - 000009BC (0x1 bytes), align: 0
  Segment part 44.            Intra module refs:   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           slOverride              000009BC        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009BD - 00000A11 (0x55 bytes), align: 0
  Segment part 45.            Intra module refs:   LL_Init
                                                   LL_Reset
                                                   LL_SetAdvControl
                                                   LL_SetAdvData
                                                   LL_SetAdvParam
                                                   LL_SetScanRspData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           advInfo                 000009BD        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCheckWhiteListUsage (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llStartAdvSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A12 - 00000A13 (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dcdcData                00000A12        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A14 - 00000A14 (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           extendRfRange           00000A14        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llExtendRfRange (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A15 - 00000A15 (0x1 bytes), align: 0
  Segment part 48.            Intra module refs:   LL_CtrlToHostFlowControl
                                                   LL_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rxFifoFlowCtrl          00000A15        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A16 - 00000A16 (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           haltDuringRf            00000A16        llScheduleTask (ll_scheduler)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E3D - 00000E4A (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskEndCauses           00000E3D        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E4B - 00000E56 (0xc bytes), align: 0
  Segment part 52.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskErrorEndCauses      00000E4B        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           psbs9Data               
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A17 - 00000A17 (0x1 bytes), align: 0
  Segment part 55.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trngCounter             00000A17        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
IDATA_Z
  Relative segment, address: IDATA 00000029 - 0000002A (0x2 bytes), align: 0
  Segment part 56. ROOT.      Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           myPC                    00000029        RF_NormalIsr (ll_isr)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EDA6 - 0000EF82 (0x1dd bytes), align: 0
  Segment part 68.            Intra module refs:   LL_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init                 0000EDA6 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000EF83 - 0000F17D (0x1fb bytes), align: 0
  Segment part 70.            Intra module refs:   LL_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent         0000EF83 
               calls direct
               XSTACK = 00000000 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F17E - 0000F250 (0xd3 bytes), align: 0
  Segment part 72.            Intra module refs:   LL_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset                0000F17E 
               calls direct
               XSTACK = 0000000C ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F251 - 0000F29B (0x4b bytes), align: 0
  Segment part 74.            Intra module refs:   LL_ReadBDADDR::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR           0000F251 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F29C - 0000F2E6 (0x4b bytes), align: 0
  Segment part 76.            Intra module refs:   LL_SetRandomAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress     0000F29C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2E7 - 0000F2F8 (0x12 bytes), align: 0
  Segment part 78.            Intra module refs:   LL_ClearWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList       0000F2E7 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F2F9 - 0000F338 (0x40 bytes), align: 0
  Segment part 80.            Intra module refs:   LL_AddWhiteListDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice   0000F2F9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RemoveWhiteListDevice
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadWlSize           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_NumEmptyWlEntries    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F339 - 0000F36D (0x35 bytes), align: 0
  Segment part 88.            Intra module refs:   LL_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt              0000F339 
               calls direct
               XSTACK = 00000002 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F36E - 0000F3B9 (0x4c bytes), align: 0
  Segment part 90.            Intra module refs:   LL_Rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand                 0000F36E 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3BA - 0000F3E8 (0x2f bytes), align: 0
  Segment part 92.            Intra module refs:   LL_PseudoRand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand           0000F3BA 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 94. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadSupportedStates
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalSupportedFeatures
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalVersionInfo
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F3E9 - 0000F40B (0x23 bytes), align: 0
  Segment part 100.           Intra module refs:   LL_CtrlToHostFlowControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl
                                   0000F3E9 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfo
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 104. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadTxPowerLevel     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 106. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadChanMap          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F40C - 0000F458 (0x4d bytes), align: 0
  Segment part 108.           Intra module refs:   LL_ReadRssi::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi             0000F40C 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F459 - 0000F4DC (0x84 bytes), align: 0
  Segment part 110.           Intra module refs:   LL_Disconnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect           0000F459 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 112. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4DD - 0000F4E1 (0x5 bytes), align: 0
  Segment part 114.           Intra module refs:   LL_AddWhiteListDevice
                                                   LL_Disconnect
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F4E2 - 0000F6EE (0x20d bytes), align: 0
  Segment part 115.           Intra module refs:   LL_TxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData               0000F4E2 
               calls direct
               XSTACK = 00000001 ( 00000016 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestTxTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 119. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestRxTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 121. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEnd        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F6EF - 0000F8D9 (0x1eb bytes), align: 0
  Segment part 123.           Intra module refs:   LL_SetAdvParam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam          0000F6EF 
               calls direct
               XSTACK = 00000006 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F8DA - 0000F917 (0x3e bytes), align: 0
  Segment part 125.           Intra module refs:   LL_SetAdvData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData           0000F8DA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F918 - 0000F91C (0x5 bytes), align: 0
  Segment part 127.           Intra module refs:   LL_Encrypt
                                                   LL_ProcessEvent
                                                   LL_PseudoRand
                                                   LL_SetAdvData
                                                   LL_SetScanRspData
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000F91D - 0000FA7C (0x160 bytes), align: 0
  Segment part 128.           Intra module refs:   LL_SetAdvControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl        0000F91D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA7D - 0000FA81 (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   LL_Init
                                                   LL_Rand
                                                   LL_SetAdvControl
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadAdvChanTxPower   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FA82 - 0000FAC2 (0x41 bytes), align: 0
  Segment part 133.           Intra module refs:   LL_SetScanRspData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData       0000FA82 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FAC3 - 0000FB35 (0x73 bytes), align: 0
  Segment part 135.           Intra module refs:   LL_EncLtkReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply          0000FAC3 
               calls direct
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FB36 - 0000FB81 (0x4c bytes), align: 0
  Segment part 137.           Intra module refs:   LL_EncLtkNegReply::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply       0000FB36 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FB82 - 0000FBA2 (0x21 bytes), align: 0
  Segment part 139.           Intra module refs:   LL_ConnActive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnActive           0000FB82 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGain        
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPower       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 145. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_OnePacketPerEvent
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBA3 - 0000FBA3 (0x1 bytes), align: 0
  Segment part 148.           Intra module refs:   LL_ReadBDADDR
                                                   LL_SetRandomAddress
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBA4 - 0000FBA5 (0x2 bytes), align: 0
  Segment part 149.           Intra module refs:   Segment part 148
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBA6 - 0000FBAC (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   LL_ClearWhiteList
                                                   LL_ConnActive
                                                   LL_CtrlToHostFlowControl
                                                   LL_EncLtkNegReply
                                                   LL_EncLtkReply
                                                   LL_ReadRssi
                                                   LL_Reset
                                                   Segment part 149
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 151. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ClkDivOnHalt     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 153. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DeclareNvUsage   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_Decrypt          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetLocalSupportedFeatures
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 159. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFastTxResponseTime
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSlaveLatencyOverride
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestTx      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemHopTestTx   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestRx      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_EndModemTest     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 171. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetBDADDR        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSCA           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 175. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFreqTune      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SaveFreqTune     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 179. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetMaxDtmTxPower
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_MapPmIoPort      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DisconnectImmed
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRate
                                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 187. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PERbyChan        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRange    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_HaltDuringRf     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_AdvEventNotice   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 195. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ConnEventNotice
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 197. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_BuildRevision    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000378 - 00000385 (0xe bytes), align: 0
  Segment part 51.            Intra module refs:   taskEndCauses
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000386 - 00000391 (0xc bytes), align: 0
  Segment part 53.            Intra module refs:   taskErrorEndCauses
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 57. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 58. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008731 - 00008734 (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_190          00008731 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000872D - 00008730 (0x4 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_Reset
                                                   llSetupAdv (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_555555       0000872D 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 61. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008729 - 0000872C (0x4 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_TxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_6            00008729 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008725 - 00008728 (0x4 bytes), align: 0
  Segment part 63.            Intra module refs:   LL_SetAdvControl
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData
                                                   Segment part 94 (ll_timer2)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       00008725 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_71764129     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008721 - 00008724 (0x4 bytes), align: 0
  Segment part 65.            Intra module refs:   LL_SetAdvControl
                                                   llScheduler (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3            00008721 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_b            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff00     
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D76 - 00000D7B (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Init::?relay         00000D76        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D7C - 00000D81 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ProcessEvent::?relay
                                   00000D7C        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D82 - 00000D87 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   LL_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Reset::?relay        00000D82 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D88 - 00000D8D (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadBDADDR::?relay   00000D88        HCI_ReadBDADDRCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D8E - 00000D93 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetRandomAddress::?relay
                                   00000D8E        HCI_LE_SetRandomAddressCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D94 - 00000D99 (0x6 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ClearWhiteList::?relay
                                   00000D94        HCI_LE_ClearWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000D9A - 00000D9F (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_AddWhiteListDevice::?relay
                                   00000D9A        HCI_LE_AddWhiteListCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_RemoveWhiteListDevice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadWlSize::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_NumEmptyWlEntries::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DA0 - 00000DA5 (0x6 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Encrypt::?relay      00000DA0        Segment part 82 (sm_mgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DA6 - 00000DAB (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Rand::?relay         00000DA6        HCI_LE_RandCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DAC - 00000DB1 (0x6 bytes), align: 0
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PseudoRand::?relay   00000DAC        Onboard_rand (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadSupportedStates::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalSupportedFeatures::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadLocalVersionInfo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB2 - 00000DB7 (0x6 bytes), align: 0
  Segment part 101.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_CtrlToHostFlowControl::?relay
                                   00000DB2        LL_RxDataCompleteCback (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 103. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRemoteVersionInfo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 105. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadTxPowerLevel::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 107. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadChanMap::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DB8 - 00000DBD (0x6 bytes), align: 0
  Segment part 109.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadRssi::?relay     00000DB8        HCI_ReadRssiCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DBE - 00000DC3 (0x6 bytes), align: 0
  Segment part 111.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_Disconnect::?relay   00000DBE        HCI_DisconnectCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DC4 - 00000DC9 (0x6 bytes), align: 0
  Segment part 116.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TxData::?relay       00000DC4        HCI_TxDataSend (hci_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestTxTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 120. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestRxTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 122. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_DirectTestEnd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DCA - 00000DCF (0x6 bytes), align: 0
  Segment part 124.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvParam::?relay
                                   00000DCA        HCI_LE_SetAdvParamCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DD0 - 00000DD5 (0x6 bytes), align: 0
  Segment part 126.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvData::?relay   00000DD0        HCI_LE_SetAdvDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DD6 - 00000DDB (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetAdvControl::?relay
                                   00000DD6        HCI_LE_SetAdvEnableCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 132. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ReadAdvChanTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DDC - 00000DE1 (0x6 bytes), align: 0
  Segment part 134.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_SetScanRspData::?relay
                                   00000DDC        HCI_LE_SetScanRspDataCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE2 - 00000DE7 (0x6 bytes), align: 0
  Segment part 136.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkReply::?relay
                                   00000DE2        HCI_LE_LtkReqReplyCmd (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DE8 - 00000DED (0x6 bytes), align: 0
  Segment part 138.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EncLtkNegReply::?relay
                                   00000DE8        HCI_LE_LtkReqNegReplyCmd (hci)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DEE - 00000DF3 (0x6 bytes), align: 0
  Segment part 140.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ConnActive::?relay   00000DEE        HCI_SendDataPkt (hci)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetRxGain::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 144. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_OnePacketPerEvent::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 152. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ClkDivOnHalt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DeclareNvUsage::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 156. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_Decrypt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetLocalSupportedFeatures::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFastTxResponseTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSlaveLatencyOverride::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestTx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemHopTestTx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ModemTestRx::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 170. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_EndModemTest::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 172. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetBDADDR::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetSCA::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 176. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetFreqTune::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SaveFreqTune::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 180. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_SetMaxDtmTxPower::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_MapPmIoPort::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_DisconnectImmed::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 186. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PacketErrorRate::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_PERbyChan::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ExtendRfRange::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_HaltDuringRf::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_AdvEventNotice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 196. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_ConnEventNotice::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 198. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_EXT_BuildRevision::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 199. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 200. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 201. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008731 - 00008734 (0x4 bytes), align: 0
  Segment part 202.           Intra module refs:   __Constant_190
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000872D - 00008730 (0x4 bytes), align: 0
  Segment part 203.           Intra module refs:   __Constant_555555
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 204. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008729 - 0000872C (0x4 bytes), align: 0
  Segment part 205.           Intra module refs:   __Constant_6
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008725 - 00008728 (0x4 bytes), align: 0
  Segment part 206.           Intra module refs:   __Constant_ffffff
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 207. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008721 - 00008724 (0x4 bytes), align: 0
  Segment part 208.           Intra module refs:   __Constant_3
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 209. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 210. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_advEndCauses

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000127E0 - 00012800 (0x21 bytes), align: 0
  Segment part 16.            Intra module refs:   llDirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk
                                   000127E0 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012801 - 0001280A (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   llAdvEvt_TaskAbort
                                                   llDirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001280B - 00012EF1 (0x6e7 bytes), align: 0
  Segment part 19.            Intra module refs:   llAdvEvt_TaskConnect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect    0001280B 
               calls direct
               XSTACK = 00000000 ( 0000001A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00012EF2 - 0001310D (0x21c bytes), align: 0
  Segment part 21.            Intra module refs:   llUndirectedAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk
                                   00012EF2 
               calls direct
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001310E - 00013115 (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk
                                                   llNonConnAdvEvt_TaskEndOk
                                                   llUndirectedAdvEvt_TaskEndOk
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013116 - 000132D0 (0x1bb bytes), align: 0
  Segment part 24.            Intra module refs:   llDiscoverableAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk
                                   00013116 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000132D1 - 0001342D (0x15d bytes), align: 0
  Segment part 26.            Intra module refs:   llNonConnAdvEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk
                                   000132D1 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001342E - 00013450 (0x23 bytes), align: 0
  Segment part 28.            Intra module refs:   llAdvEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort      0001342E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from ll_common
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DF4 - 00000DF9 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDirectedAdvEvt_TaskEndOk::?relay
                                   00000DF4        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000DFA - 00000DFF (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskConnect::?relay
                                   00000DFA        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E00 - 00000E05 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUndirectedAdvEvt_TaskEndOk::?relay
                                   00000E00        llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E06 - 00000E0B (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDiscoverableAdvEvt_TaskEndOk::?relay
                                   00000E06        llSetupScannableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E0C - 00000E11 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llNonConnAdvEvt_TaskEndOk::?relay
                                   00000E0C        llSetupNonConnectableAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E12 - 00000E17 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdvEvt_TaskAbort::?relay
                                   00000E12        llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 34. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_common

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AF - 000000AF (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1STAT                  000000AF 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 10. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llClearSetInts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from hal_dma
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                
    -------------------------------------------------------------------------
SFR_AN
  Segment part 14. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DA - 000000DA (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0L                  000000DA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CC0H                  000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 18. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTL                  000000E2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CNTH                  000000E3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 23. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 24. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 25. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000405E - 000040F4 (0x97 bytes), align: 0
  Segment part 42.            Intra module refs:   llRfInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit                0000405E 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040F5 - 00004121 (0x2d bytes), align: 0
  Segment part 44.            Intra module refs:   llSetFreqTune::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune           000040F5 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004122 - 00004167 (0x46 bytes), align: 0
  Segment part 46.            Intra module refs:   llClearSetInts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts          00004122 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableRfInts         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearRfInts           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnableRfInts          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004168 - 00004297 (0x130 bytes), align: 0
  Segment part 54.            Intra module refs:   llProcessPostRfOps::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps      00004168 
               calls direct
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004298 - 0000429C (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   llProcessPostRfOps
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetRxGain             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000429D - 0000429E (0x2 bytes), align: 0
  Segment part 59.            Intra module refs:   llStartAdvSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000429F - 0000429F (0x1 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   Segment part 82
                                                   llExtendRfRange
                                                   llSetupNonConnectableAdvEvt
                                                   llSetupScannableAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000042A0 - 000042A6 (0x7 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 56
                                                   Segment part 60
                                                   llCheckWhiteListUsage
                                                   llClearSetInts
                                                   llGetNextConn
                                                   llMemCopySrc
                                                   llReleaseAllConnId
                                                   llReplaceCtrlPkt
                                                   llRfInit
                                                   llSetFreqTune
                                                   llSetupAdv
                                                   llSetupStartEncReq
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetTxPower            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTxPower            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000042A7 - 00004438 (0x192 bytes), align: 0
  Segment part 66.            Intra module refs:   llFindTxPowerSettings::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings   000042A7 
               calls direct
               XSTACK = 00000000 ( 00000022 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004439 - 0000443D (0x5 bytes), align: 0
  Segment part 68.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000443E - 000044B2 (0x75 bytes), align: 0
  Segment part 69.            Intra module refs:   llExtendRfRange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange         0000443E 
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimeToStableXOSC   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000044B3 - 000044B7 (0x5 bytes), align: 0
  Segment part 73.            Intra module refs:   llSetupDirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000044B8 - 000044D2 (0x1b bytes), align: 0
  Segment part 74.            Intra module refs:   llCheckWhiteListUsage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage   000044B8 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000044D3 - 00004547 (0x75 bytes), align: 0
  Segment part 76.            Intra module refs:   llSetupAdv::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv              000044D3 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004548 - 00004676 (0x12f bytes), align: 0
  Segment part 78.            Intra module refs:   llSetupDirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt   00004548 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004677 - 000047CC (0x156 bytes), align: 0
  Segment part 80.            Intra module refs:   llSetupUndirectedAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt
                                   00004677 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047CD - 000047D1 (0x5 bytes), align: 0
  Segment part 82.            Intra module refs:   llInitFeatureSet
                                                   llSetupUndirectedAdvEvt
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047D2 - 000048D3 (0x102 bytes), align: 0
  Segment part 83.            Intra module refs:   llSetupNonConnectableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt
                                   000047D2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048D4 - 00004A30 (0x15d bytes), align: 0
  Segment part 85.            Intra module refs:   llSetupScannableAdvEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt
                                   000048D4 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 87. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupInit             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupConn             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004A31 - 00004A49 (0x19 bytes), align: 0
  Segment part 91.            Intra module refs:   llStartAdvSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup         00004A31 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004A4A - 00004AA6 (0x5d bytes), align: 0
  Segment part 93.            Intra module refs:   llStartSlaveSetup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup       00004A4A 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartRawSetup         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateParamReq   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 99. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateChanReq    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncReq           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004AA7 - 00004B88 (0xe2 bytes), align: 0
  Segment part 103.           Intra module refs:   llSetupEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp           00004AA7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004B89 - 00004BBB (0x33 bytes), align: 0
  Segment part 105.           Intra module refs:   llSetupStartEncReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq      00004B89 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004BBC - 00004C2B (0x70 bytes), align: 0
  Segment part 107.           Intra module refs:   llSetupStartEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp      00004BBC 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncReq      
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004C2C - 00004CA5 (0x7a bytes), align: 0
  Segment part 111.           Intra module refs:   llSetupPauseEncRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp      00004C2C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CA6 - 00004CEE (0x49 bytes), align: 0
  Segment part 113.           Intra module refs:   llSetupRejectInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd        00004CA6 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CEF - 00004CEF (0x1 bytes), align: 0
  Segment part 115.           Intra module refs:   llStartSlaveSetup
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CF0 - 00004CF4 (0x5 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   llAllocConnId
                                                   llConnTerminate
                                                   llProcessPendingTxData
                                                   llSetupEncRsp
                                                   llSetupRejectInd
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 117. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetReq    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004CF5 - 00004DBB (0xc7 bytes), align: 0
  Segment part 119.           Intra module refs:   llSetupFeatureSetRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp    00004CF5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004DBC - 00004DC0 (0x5 bytes), align: 0
  Segment part 121.           Intra module refs:   llConnCleanup
                                                   llConvertCtrlProcTimeoutToEvent
                                                   llConvertLstoToEvent
                                                   llDequeueCtrlPkt
                                                   llSetupFeatureSetRsp
                                                   llSetupPauseEncRsp
                                                   llSetupStartEncRsp
                                                   llSetupTermInd
                                                   llSetupUnknownRsp
                                                   llSetupVersionIndReq
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004DC1 - 00004EC5 (0x105 bytes), align: 0
  Segment part 122.           Intra module refs:   llSetupVersionIndReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq    00004DC1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004EC6 - 00004FA4 (0xdf bytes), align: 0
  Segment part 124.           Intra module refs:   llSetupTermInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd          00004EC6 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004FA5 - 0000502F (0x8b bytes), align: 0
  Segment part 126.           Intra module refs:   llSetupUnknownRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp       00004FA5 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005030 - 0000509D (0x6e bytes), align: 0
  Segment part 128.           Intra module refs:   llEnqueueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt        00005030 
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000509E - 00005111 (0x74 bytes), align: 0
  Segment part 130.           Intra module refs:   llDequeueCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt        0000509E 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005112 - 0000513A (0x29 bytes), align: 0
  Segment part 132.           Intra module refs:   llReplaceCtrlPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt        00005112 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000513B - 000051F9 (0xbf bytes), align: 0
  Segment part 134.           Intra module refs:   llProcessChanMap::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap        0000513B 
               XSTACK = 0000000B ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001C0D - 00001CB9 (0xad bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextDataChan       00001C0D        llAdvEvt_TaskConnect (ll_advEndCauses)
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001CBA - 00001CBE (0x5 bytes), align: 0
  Segment part 171.           Intra module refs:   llGetNextDataChan
                                                   llSetNextDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001CBF - 00001E32 (0x174 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetNextDataChan       00001CBF        LL_TxData (ll)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAtLeastTwoChans       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000051FA - 00005373 (0x17a bytes), align: 0
  Segment part 138.           Intra module refs:   llAllocConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId           000051FA 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseConnId         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005374 - 00005390 (0x1d bytes), align: 0
  Segment part 142.           Intra module refs:   llReleaseAllConnId::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId      00005374 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005391 - 000053AF (0x1f bytes), align: 0
  Segment part 144.           Intra module refs:   llGetNextConn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn           00005391 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000053B0 - 00005440 (0x91 bytes), align: 0
  Segment part 146.           Intra module refs:   llConnCleanup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup           000053B0 
               calls direct
               XSTACK = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005441 - 00005465 (0x25 bytes), align: 0
  Segment part 148.           Intra module refs:   llConnTerminate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate         00005441 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 150. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llPendingUpdateParam    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005466 - 0000548D (0x28 bytes), align: 0
  Segment part 152.           Intra module refs:   llInitFeatureSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet        00005466 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 154. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGenerateCRC           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E33 - 00001E6F (0x3d bytes), align: 0
  Segment part 173.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventInRange          00001E33        llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E70 - 00001E77 (0x8 bytes), align: 0
  Segment part 174.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEventDelta            00001E70        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000548E - 00005508 (0x7b bytes), align: 0
  Segment part 156.           Intra module refs:   llConvertLstoToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent    0000548E 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005509 - 00005562 (0x5a bytes), align: 0
  Segment part 158.           Intra module refs:   llConvertCtrlProcTimeoutToEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent
                                   00005509 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005563 - 000056B6 (0x154 bytes), align: 0
  Segment part 160.           Intra module refs:   llAdjustForMissedEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent
                                   00005563 
               calls direct
               XSTACK = 00000004 ( 00000014 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000056B7 - 00005773 (0xbd bytes), align: 0
  Segment part 162.           Intra module refs:   llProcessPendingTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPendingTxData
                                   000056B7 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005774 - 00005846 (0xd3 bytes), align: 0
  Segment part 164.           Intra module refs:   llWriteTxData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData           00005774 
               calls direct
               XSTACK = 0000000A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005847 - 00005874 (0x2e bytes), align: 0
  Segment part 166.           Intra module refs:   llMemCopySrc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc            00005847 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopyDst            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E18 - 00000E1D (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRfInit::?relay        00000E18        LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E1E - 00000E23 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetFreqTune::?relay   00000E1E        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E24 - 00000E29 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearSetInts::?relay
                                   00000E24        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 49. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableRfInts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llClearRfInts::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnableRfInts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E2A - 00000E2F (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPostRfOps::?relay
                                   00000E2A        RF_NormalIsr (ll_isr)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetRxGain::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetTxPower::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTxPower::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E30 - 00000E35 (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindTxPowerSettings::?relay
                                   00000E30        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E36 - 00000E3B (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   llProcessPostRfOps
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llExtendRfRange::?relay
                                   00000E36        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 72. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimeToStableXOSC::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E3C - 00000E41 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckWhiteListUsage::?relay
                                   00000E3C        LL_AddWhiteListDevice (ll)
                                                   LL_ClearWhiteList (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E42 - 00000E47 (0x6 bytes), align: 0
  Segment part 77.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupAdv::?relay      00000E42        LL_SetAdvControl (ll)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E48 - 00000E4D (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupDirectedAdvEvt::?relay
                                   00000E48 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E4E - 00000E53 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUndirectedAdvEvt::?relay
                                   00000E4E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E54 - 00000E59 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNonConnectableAdvEvt::?relay
                                   00000E54 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E5A - 00000E5F (0x6 bytes), align: 0
  Segment part 86.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupScannableAdvEvt::?relay
                                   00000E5A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 88. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupInit::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupConn::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E60 - 00000E65 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartAdvSetup::?relay
                                   00000E60        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E66 - 00000E6B (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartSlaveSetup::?relay
                                   00000E66        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartRawSetup::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateParamReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 100. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUpdateChanReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncReq::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E6C - 00000E71 (0x6 bytes), align: 0
  Segment part 104.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupEncRsp::?relay   00000E6C        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E72 - 00000E77 (0x6 bytes), align: 0
  Segment part 106.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncReq::?relay
                                   00000E72        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E78 - 00000E7D (0x6 bytes), align: 0
  Segment part 108.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupStartEncRsp::?relay
                                   00000E78        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 110. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E7E - 00000E83 (0x6 bytes), align: 0
  Segment part 112.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupPauseEncRsp::?relay
                                   00000E7E        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E84 - 00000E89 (0x6 bytes), align: 0
  Segment part 114.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupRejectInd::?relay
                                   00000E84        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetReq::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E8A - 00000E8F (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupFeatureSetRsp::?relay
                                   00000E8A        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E90 - 00000E95 (0x6 bytes), align: 0
  Segment part 123.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupVersionIndReq::?relay
                                   00000E90        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E96 - 00000E9B (0x6 bytes), align: 0
  Segment part 125.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupTermInd::?relay
                                   00000E96        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000E9C - 00000EA1 (0x6 bytes), align: 0
  Segment part 127.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupUnknownRsp::?relay
                                   00000E9C        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA2 - 00000EA7 (0x6 bytes), align: 0
  Segment part 129.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llEnqueueCtrlPkt::?relay
                                   00000EA2        LL_Disconnect (ll)
                                                   LL_EncLtkNegReply (ll)
                                                   LL_EncLtkReply (ll)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EA8 - 00000EAD (0x6 bytes), align: 0
  Segment part 131.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDequeueCtrlPkt::?relay
                                   00000EA8        llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EAE - 00000EB3 (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReplaceCtrlPkt::?relay
                                   00000EAE        LL_Disconnect (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EB4 - 00000EB9 (0x6 bytes), align: 0
  Segment part 135.           Intra module refs:   llSetNextDataChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessChanMap::?relay
                                   00000EB4        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 137. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAtLeastTwoChans::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EBA - 00000EBF (0x6 bytes), align: 0
  Segment part 139.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocConnId::?relay   00000EBA        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseConnId::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EC0 - 00000EC5 (0x6 bytes), align: 0
  Segment part 143.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llReleaseAllConnId::?relay
                                   00000EC0        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EC6 - 00000ECB (0x6 bytes), align: 0
  Segment part 145.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNextConn::?relay   00000EC6        llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ECC - 00000ED1 (0x6 bytes), align: 0
  Segment part 147.           Intra module refs:   llConnTerminate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnCleanup::?relay   00000ECC        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED2 - 00000ED7 (0x6 bytes), align: 0
  Segment part 149.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConnTerminate::?relay
                                   00000ED2        LL_ProcessEvent (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 151. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llPendingUpdateParam::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000ED8 - 00000EDD (0x6 bytes), align: 0
  Segment part 153.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitFeatureSet::?relay
                                   00000ED8        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 155. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGenerateCRC::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EDE - 00000EE3 (0x6 bytes), align: 0
  Segment part 157.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertLstoToEvent::?relay
                                   00000EDE        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EE4 - 00000EE9 (0x6 bytes), align: 0
  Segment part 159.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llConvertCtrlProcTimeoutToEvent::?relay
                                   00000EE4        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EEA - 00000EEF (0x6 bytes), align: 0
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustForMissedEvent::?relay
                                   00000EEA        llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EF0 - 00000EF5 (0x6 bytes), align: 0
  Segment part 163.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessPendingTxData::?relay
                                   00000EF0        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EF6 - 00000EFB (0x6 bytes), align: 0
  Segment part 165.           Intra module refs:   llProcessPendingTxData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llWriteTxData::?relay   00000EF6        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000EFC - 00000F01 (0x6 bytes), align: 0
  Segment part 167.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopySrc::?relay    00000EFC        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 169. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llMemCopyDst::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000871D - 00008720 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008686 - 0000868D (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   llFindTxPowerSettings
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 33. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff0000     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086BD - 000086C0 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   llSetupAdv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_8e89bed6     000086BD 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 36. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_555555       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 37. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 38. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 40. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086B9 - 000086BC (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   llAdjustForMissedEvent
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            000086B9 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000871D - 00008720 (0x4 bytes), align: 0
  Segment part 175.           Intra module refs:   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008686 - 0000868D (0x8 bytes), align: 0
  Segment part 176.           Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 177. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 178. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086BD - 000086C0 (0x4 bytes), align: 0
  Segment part 179.           Intra module refs:   __Constant_8e89bed6
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 180. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 181. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 182. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 183. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 184. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086B9 - 000086BC (0x4 bytes), align: 0
  Segment part 185.           Intra module refs:   __Constant_2

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_constData

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 000026CC - 000026CF (0x4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedTxPowerSetting     000026CC        llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           txOutputPower           
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was CODE_C)
  Relative segment, address: CODE 000026C8 - 000026CB (0x4 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ptmFreqTune             000026C8        LL_PowerOnReq (ll_sleep)
                                                   llRfInit (ll_common)
    -------------------------------------------------------------------------
CODE_C
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timeToStableXOSC        
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 10. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_enc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_adc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_crc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_crc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from hal_aes
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_MoveData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A18 - 00000A37 (0x20 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dataPkt                 00000A18        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A38 - 00000A43 (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cachedTRNGdata          00000A38        LL_Init (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085AA - 000085C9 (0x20 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_DecryptMsg
                                                   LL_ENC_Encrypt
                                                   LL_ENC_EncryptMsg
                                                   LL_ENC_GenerateMIC
                                                   LL_ENC_LoadEmptyIV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeroBlock               000085AA 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010000 - 0001004F (0x50 bytes), align: 0
  Segment part 18.            Intra module refs:   LL_ENC_ReverseBytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes     00010000 
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010050 - 0001005B (0xc bytes), align: 0
  Segment part 20.            Intra module refs:   LL_ENC_GeneratePseudoRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum
                                   00010050 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001005C - 00010138 (0xdd bytes), align: 0
  Segment part 22.            Intra module refs:   LL_ENC_GenerateTrueRandNum::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum
                                   0001005C 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010139 - 00010168 (0x30 bytes), align: 0
  Segment part 24.            Intra module refs:   LL_ENC_GenDeviceSKD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD     00010139 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010169 - 00010198 (0x30 bytes), align: 0
  Segment part 26.            Intra module refs:   LL_ENC_GenDeviceIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV      00010169 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010199 - 00010199 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   LL_ENC_InitAesDMA
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001019A - 000101A0 (0x7 bytes), align: 0
  Segment part 29.            Intra module refs:   LL_ENC_GenDeviceIV
                                                   LL_ENC_GenDeviceSKD
                                                   LL_ENC_GeneratePseudoRandNum
                                                   LL_ENC_LoadEmptyIV
                                                   Segment part 28
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateNonce    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000101A1 - 0001021A (0x7a bytes), align: 0
  Segment part 32.            Intra module refs:   LL_ENC_AES128_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt   000101A1 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Decrypt   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001021B - 0001021F (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   LL_ENC_AES128_Encrypt
                                                   LL_ENC_GenerateTrueRandNum
                                                   LL_ENC_MoveData
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010220 - 00010257 (0x38 bytes), align: 0
  Segment part 37.            Intra module refs:   LL_ENC_InitAesDMA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA       00010220 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitDMA0         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010258 - 000102A9 (0x52 bytes), align: 0
  Segment part 41.            Intra module refs:   LL_ENC_MoveData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData         00010258 
               XSTACK = 00000002 ( 00000009 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupLoadDMA     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupCryptoDMA   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_StartAES         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000102AA - 000102E6 (0x3d bytes), align: 0
  Segment part 49.            Intra module refs:   LL_ENC_LoadEmptyIV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV      000102AA 
               XSTACK = 0000002F ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadKey          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000102E7 - 00010501 (0x21b bytes), align: 0
  Segment part 53.            Intra module refs:   LL_ENC_EncryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg       000102E7 
               XSTACK = 0000001A ( 0000002C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010502 - 0001050B (0xa bytes), align: 0
  Segment part 55.            Intra module refs:   LL_ENC_DecryptMsg
                                                   LL_ENC_EncryptMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001050C - 00010737 (0x22c bytes), align: 0
  Segment part 56.            Intra module refs:   LL_ENC_DecryptMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg       0001050C 
               XSTACK = 0000001E ( 0000002C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010738 - 00010932 (0x1fb bytes), align: 0
  Segment part 58.            Intra module refs:   LL_ENC_GenerateMIC::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC      00010738 
               calls direct
               XSTACK = 00000020 ( 0000002F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010933 - 00010B05 (0x1d3 bytes), align: 0
  Segment part 60.            Intra module refs:   LL_ENC_Encrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt          00010933 
               calls direct
               XSTACK = 00000002 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010B06 - 00010B0D (0x8 bytes), align: 0
  Segment part 62.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010B0E - 00010DCE (0x2c1 bytes), align: 0
  Segment part 63.            Intra module refs:   LL_ENC_Decrypt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt          00010B0E 
               calls direct
               XSTACK = 00000002 ( 00000020 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F02 - 00000F07 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_ReverseBytes::?relay
                                   00000F02        llSetupEncRsp (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F08 - 00000F0D (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GeneratePseudoRandNum::?relay
                                   00000F08        LL_PseudoRand (ll)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F0E - 00000F13 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateTrueRandNum::?relay
                                   00000F0E        LL_Init (ll)
                                                   LL_Rand (ll)
                                                   llProcessPostRfOps (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F14 - 00000F19 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceSKD::?relay
                                   00000F14        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F1A - 00000F1F (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenDeviceIV::?relay
                                   00000F1A        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateNonce::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F20 - 00000F25 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Encrypt::?relay
                                   00000F20        LL_Encrypt (ll)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_AES128_Decrypt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F26 - 00000F2B (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitAesDMA::?relay
                                   00000F26        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_InitDMA0::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F2C - 00000F31 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_MoveData::?relay
                                   00000F2C        llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupLoadDMA::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 46. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_SetupCryptoDMA::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_StartAES::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F32 - 00000F37 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   LL_ENC_GenerateMIC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadEmptyIV::?relay
                                   00000F32 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_LoadKey::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F38 - 00000F3D (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_EncryptMsg::?relay
                                   00000F38 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F3E - 00000F43 (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   LL_ENC_Decrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_DecryptMsg::?relay
                                   00000F3E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F44 - 00000F49 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   LL_ENC_Decrypt
                                                   LL_ENC_Encrypt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_GenerateMIC::?relay
                                   00000F44 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F4A - 00000F4F (0x6 bytes), align: 0
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Encrypt::?relay
                                   00000F4A        llSetupFeatureSetRsp (ll_common)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llWriteTxData (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F50 - 00000F55 (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_ENC_Decrypt::?relay
                                   00000F50        llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085AA - 000085C9 (0x20 bytes), align: 0
  Segment part 65.            Intra module refs:   zeroBlock
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 66. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_errorEndCauses

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FF1 - 00007FF3 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   llUnexpectedEndCauseHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler
                                   00007FF1 
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F56 - 00000F5B (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llUnexpectedEndCauseHandler::?relay
                                   00000F56        Segment part 51 (ll)
                                                   Segment part 53 (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_halt

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00001E78 - 00001E7E (0x7 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HaltMcuUsingPhyFlag     00001E78        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000021 - 00000022 (0x2 bytes), align: 0
  Segment part 1.             Intra module refs:   HaltMcuUsingPhyFlag
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           phyState                00000021        LL_Reset (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llT2OVFC1_ISR (ll_isr)
           clkState                00000022        llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ll_isr

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LL_SetAdvControl (ll)
                                                   RF_NormalIsr
                                                   llClearSetInts (ll_common)
                                                   llScheduleTask (ll_scheduler)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009F - 0000009F (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    0000009F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   T2_Isr
                                                   llDisableT2Ints (ll_timer2)
                                                   llDisableT2IntsEvts (ll_timer2)
                                                   llInitTimer2 (ll_timer2)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BF - 000000BF (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   RF_ErrorIsr
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llClearSetInts (ll_common)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  000000BF 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 9. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   RF_NormalIsr
                                                   llClearSetInts (ll_common)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001E7F - 00001FB3 (0x135 bytes), align: 0
  Segment part 21.            Intra module refs:   RF_NormalIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr            00001E7F 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001FB4 - 00001FC5 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   RF_NormalIsr
                                                   T2_Isr
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001FC6 - 00001FCA (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   RF_ErrorIsr
                                                   Segment part 22
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001FCB - 0000203D (0x73 bytes), align: 0
  Segment part 24.            Intra module refs:   RF_ErrorIsr::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr             00001FCB 
               interrupt function
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000203E - 000020A2 (0x65 bytes), align: 0
  Segment part 25.            Intra module refs:   T2_Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr                  0000203E 
               interrupt function
               calls direct
               ISTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000020A3 - 00002126 (0x84 bytes), align: 0
  Segment part 26.            Intra module refs:   T2_Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llT2OVFC1_ISR           000020A3 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000005 (0x6 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_ErrorIsr::??INTVEC 3
                                   00000003 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2_Isr::??INTVEC 83     00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RF_NormalIsr::??INTVEC 131
                                   00000083 
    -------------------------------------------------------------------------
ISTACK
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086B1 - 000086B4 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         000086B1 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086AD - 000086B0 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   LL_Init (ll)
                                                   RF_NormalIsr
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     000086AD 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086B1 - 000086B4 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_ffff
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086AD - 000086B0 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __Constant_ffff7fff

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_math

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: DATA 00000023 - 00000028 (0x6 bytes), align: 0
  Segment part 0.             Intra module refs:   llDivide31By16To16
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002128 - 00002178 (0x51 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDivide31By16To16      00002128        LL_TxData (ll)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_scheduler

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A44 - 00000A78 (0x35 bytes), align: 0
  Segment part 8.             Intra module refs:   llAllocTask
                                                   llFindNextSecTask
                                                   llFreeTask
                                                   llGetActiveTasks
                                                   llGetCurrentTask
                                                   llGetNumTasks
                                                   llGetTaskState
                                                   llScheduleTask
                                                   llScheduler
                                                   llSchedulerInit
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000A79 - 00000C02 (0x18a bytes), align: 0
  Segment part 9.             Intra module refs:   llRestoreConnState
                                                   llScheduler
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009CE2 - 00009D2B (0x4a bytes), align: 0
  Segment part 22.            Intra module refs:   llSchedulerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit         00009CE2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00009D2C - 0000A30A (0x5df bytes), align: 0
  Segment part 24.            Intra module refs:   llScheduler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler             00009D2C 
               calls direct
               XSTACK = 00000000 ( 0000001C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A30B - 0000A486 (0x17c bytes), align: 0
  Segment part 26.            Intra module refs:   llScheduleTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask          0000A30B 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A487 - 0000A48B (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   llFindNextSecTask
                                                   llScheduleTask
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindStartType         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000A48C - 0000AAEA (0x65f bytes), align: 0
  Segment part 31.            Intra module refs:   llFindNextSecTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask       0000A48C 
               calls direct
               XSTACK = 00000018 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AAEB - 0000ABE0 (0xf6 bytes), align: 0
  Segment part 33.            Intra module refs:   llAllocTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask             0000AAEB 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABE1 - 0000ABE5 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   llAllocTask
                                                   llSave_rxFIFO
                                                   llSave_txFIFO
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000ABE6 - 0000AC22 (0x3d bytes), align: 0
  Segment part 37.            Intra module refs:   llFreeTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask              0000ABE6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC23 - 0000AC3C (0x1a bytes), align: 0
  Segment part 39.            Intra module refs:   llGetCurrentTask::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask        0000AC23 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC3D - 0000AC3E (0x2 bytes), align: 0
  Segment part 41.            Intra module refs:   llGetActiveTasks
                                                   llGetNumTasks
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC3F - 0000AC45 (0x7 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 41
                                                   llFreeTask
                                                   llGetCurrentTask
                                                   llGetTaskState
                                                   llSchedulerInit
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC46 - 0000AC87 (0x42 bytes), align: 0
  Segment part 43.            Intra module refs:   llGetTaskState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState          0000AC46 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC88 - 0000AC90 (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   llGetActiveTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks        0000AC88 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 47. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTask               
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC91 - 0000AC9A (0xa bytes), align: 0
  Segment part 49.            Intra module refs:   llGetNumTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks           0000AC91 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AC9B - 0000AD86 (0xec bytes), align: 0
  Segment part 51.            Intra module refs:   llSave_txFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO           0000AC9B 
               calls direct
               XSTACK = 00000018 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AD87 - 0000AE7A (0xf4 bytes), align: 0
  Segment part 53.            Intra module refs:   llSave_rxFIFO::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO           0000AD87 
               calls direct
               XSTACK = 00000018 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_txFIFO        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_rxFIFO        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 59. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveRfRegs            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreRfRegs         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 63. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveConnState         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000AE7B - 0000B092 (0x218 bytes), align: 0
  Segment part 65.            Intra module refs:   llRestoreConnState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState      0000AE7B 
               calls direct
               XSTACK = 00000018 ( 00000010 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086A9 - 000086AC (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1a           000086A9 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe7     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086A5 - 000086A8 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7            000086A5 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3            
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086A1 - 000086A4 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff1     000086A1 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from simpleBLEPeripheral
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 18. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 19. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086F9 - 000086FC (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   llScheduleTask
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5            000086F9 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086C1 - 000086C4 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   llFindNextSecTask
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff6     000086C1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F5C - 00000F61 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSchedulerInit::?relay
                                   00000F5C        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F62 - 00000F67 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduler::?relay     00000F62        LL_SetAdvControl (ll)
                                                   Segment part 18 (ll_advEndCauses)
                                                   Segment part 23 (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnTerminate (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F68 - 00000F6D (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llScheduleTask::?relay
                                   00000F68        LL_TxData (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindStartType::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F6E - 00000F73 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFindNextSecTask::?relay
                                   00000F6E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F74 - 00000F79 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAllocTask::?relay     00000F74        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F7A - 00000F7F (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llFreeTask::?relay      00000F7A        LL_SetAdvControl (ll)
                                                   llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llConnCleanup (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F80 - 00000F85 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTask::?relay
                                   00000F80        LL_PowerOnReq (ll_sleep)
                                                   LL_Rand (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F86 - 00000F8B (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTaskState::?relay
                                   00000F86        llAdvEvt_TaskAbort (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F8C - 00000F91 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetActiveTasks::?relay
                                   00000F8C        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTask::?relay       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F92 - 00000F97 (0x6 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetNumTasks::?relay   00000F92        LL_SetAdvControl (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F98 - 00000F9D (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_txFIFO::?relay   00000F98 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000F9E - 00000FA3 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSave_rxFIFO::?relay   00000F9E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_txFIFO::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 58. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestore_rxFIFO::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveRfRegs::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 62. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreRfRegs::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSaveConnState::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FA4 - 00000FA9 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   llScheduler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llRestoreConnState::?relay
                                   00000FA4 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086A9 - 000086AC (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   __Constant_1a
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086A5 - 000086A8 (0x4 bytes), align: 0
  Segment part 71.            Intra module refs:   __Constant_7
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086A1 - 000086A4 (0x4 bytes), align: 0
  Segment part 73.            Intra module refs:   __Constant_fffffff1
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 76. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086F9 - 000086FC (0x4 bytes), align: 0
  Segment part 77.            Intra module refs:   __Constant_5
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086C1 - 000086C4 (0x4 bytes), align: 0
  Segment part 78.            Intra module refs:   __Constant_fffffff6

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_slaveEndCauses

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FMAP                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFERRF                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005875 - 000062EC (0xa78 bytes), align: 0
  Segment part 17.            Intra module refs:   llSlaveEvt_TaskEndOk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk    00005875 
               calls direct
               XSTACK = 00000000 ( 00000018 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062ED - 000062F2 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   llSlaveEvt_TaskAbort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort    000062ED 
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062F3 - 000069FE (0x70c bytes), align: 0
  Segment part 21.            Intra module refs:   llSetupNextSlaveEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent   000062F3 
               calls direct
               XSTACK = 00000016 ( 00000016 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000069FF - 00006EB9 (0x4bb bytes), align: 0
  Segment part 23.            Intra module refs:   llProcessSlaveControlProcedures::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures
                                   000069FF 
               calls direct
               XSTACK = 00000016 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckForLstoDuringSL
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 10. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 11. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff7fff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 13. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086CD - 000086D0 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   llSetupNextSlaveEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_50           000086CD 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 16. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FAA - 00000FAF (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskEndOk::?relay
                                   00000FAA        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FB0 - 00000FB5 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSlaveEvt_TaskAbort::?relay
                                   00000FB0        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llRestoreConnState (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FB6 - 00000FBB (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetupNextSlaveEvent::?relay
                                   00000FB6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FBC - 00000FC1 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   llSlaveEvt_TaskEndOk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llProcessSlaveControlProcedures::?relay
                                   00000FBC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCheckForLstoDuringSL::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086CD - 000086D0 (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   __Constant_50
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 33. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 5. TENTATIVE. Used definition from SimpleBLEPeripheral_Main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
SFR_AN
  Segment part 7. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   
    -------------------------------------------------------------------------
SFR_AN
  Segment part 8. TENTATIVE. Used definition from hal_uart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002179 - 000022F4 (0x17c bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_TimeToNextRfEvent    00002179        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 0000001B )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000022F5 - 00002388 (0x94 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOffReq          000022F5        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002389 - 0000238D (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   LL_PowerOffReq
                                                   LL_PowerOnReq
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000238E - 0000245D (0xd0 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LL_PowerOnReq           0000238E        halSleep (hal_sleep)
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 14. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 15. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086FD - 00008700 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   LL_TimeToNextRfEvent
                                                   ll24BitTimeCompare (ll_timer2)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c801         000086FD 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 17. TENTATIVE. Used definition from hal_key
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_19           
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086B5 - 000086B8 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   LL_TimeToNextRfEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_d            000086B5 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000086C9 - 000086CC (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   LL_TimeToNextRfEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_fffffff4     000086C9 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 20. TENTATIVE. Used definition from gap_linkmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086FD - 00008700 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_c801
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086B5 - 000086B8 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   __Constant_d
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000086C9 - 000086CC (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   __Constant_fffffff4
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 31. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timer2

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   llInitTimer2
                                                   llStartTimer2
                                                   llStopTimer2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CTRL                  00000094 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 3. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST1                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 4. TENTATIVE. Used definition from hal_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST2                     
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   llDisableT2E1
                                                   llDisableT2IntsEvts
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CSPCFG                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 6. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQF                  
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M0                    000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2M1                    000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF0                 000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF1                 000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MOVF2                 000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Segment part 12. TENTATIVE. Used definition from ll_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2IRQM                  
    -------------------------------------------------------------------------
SFR_AN
  Segment part 13. TENTATIVE. Used definition from OSAL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   llGetCurrentTime
                                                   llGetFullCTandST
                                                   llGetTimer2Capture
                                                   llInitTimer2
                                                   llSetT2C1Event1
                                                   llSetT2LongC1Event1
                                                   llSetT2LongC1Timeout
                                                   llSetT2OVFC2Event2
                                                   ll_McuPrecisionCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2MSEL                  000000C3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019772 - 00019807 (0x96 bytes), align: 0
  Segment part 24.            Intra module refs:   llInitTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2            00019772 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019808 - 00019817 (0x10 bytes), align: 0
  Segment part 26.            Intra module refs:   llStopTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2            00019808 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019818 - 0001981D (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   llStartTimer2
                                                   llStopTimer2
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001981E - 0001982F (0x12 bytes), align: 0
  Segment part 29.            Intra module refs:   llStartTimer2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2           0001981E 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Timeout        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019830 - 00019837 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   llSetT2C1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019838 - 0001986D (0x36 bytes), align: 0
  Segment part 34.            Intra module refs:   llGetCurrentTime
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001986E - 0001986F (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019870 - 00019872 (0x3 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   Segment part 41
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019873 - 00019879 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
                                                   Segment part 74
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C2Timeout        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001987A - 00019889 (0x10 bytes), align: 0
  Segment part 40.            Intra module refs:   ll_McuPrecisionCount
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001988A - 0001988D (0x4 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 33
                                                   Segment part 40
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Timeout     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Timeout     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001988E - 0001988F (0x2 bytes), align: 0
  Segment part 46.            Intra module refs:   llSetT2LongC1Event1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019890 - 00019897 (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
                                                   llSetT2LongC1Timeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019898 - 000198ED (0x56 bytes), align: 0
  Segment part 48.            Intra module refs:   llSetT2LongC1Timeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout    00019898 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 50. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC2Timeout    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000198EE - 0001992B (0x3e bytes), align: 0
  Segment part 52.            Intra module refs:   llSetT2C1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1         000198EE 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Event1      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001992C - 00019988 (0x5d bytes), align: 0
  Segment part 56.            Intra module refs:   llSetT2LongC1Event1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1     0001992C 
               XSTACK = 00000002 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019989 - 00019A05 (0x7d bytes), align: 0
  Segment part 58.            Intra module refs:   llSetT2OVFC2Event2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2      00019989 
               XSTACK = 00000000 ( 00000010 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2Delta            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A06 - 00019A0E (0x9 bytes), align: 0
  Segment part 62.            Intra module refs:   llDisableT2Ints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints         00019A06 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A0F - 00019A1A (0xc bytes), align: 0
  Segment part 64.            Intra module refs:   llDisableT2IntsEvts::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts     00019A0F 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A1B - 00019A23 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   llDisableT2E1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1           00019A1B 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A24 - 00019A26 (0x3 bytes), align: 0
  Segment part 68.            Intra module refs:   llDisableT2Ints
                                                   llDisableT2IntsEvts
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A27 - 00019A28 (0x2 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   llDisableT2E1
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A29 - 00019A2D (0x5 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 28
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A2E - 00019A39 (0xc bytes), align: 0
  Segment part 71.            Intra module refs:   llGetTimer2Capture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture      00019A2E 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A3A - 00019A5C (0x23 bytes), align: 0
  Segment part 73.            Intra module refs:   llGetTimer2Capture
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A5D - 00019A69 (0xd bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   llGetFullCTandST
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A6A - 00019A7F (0x16 bytes), align: 0
  Segment part 75.            Intra module refs:   llGetCurrentTime::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime        00019A6A 
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentFineTime    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 79. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCurrentTime    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019A80 - 00019ADE (0x5f bytes), align: 0
  Segment part 81.            Intra module refs:   llGetFullCTandST::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST        00019A80 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC1            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC2            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000245E - 000024B5 (0x58 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeCompare      0000245E        LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000024B6 - 000024BA (0x5 bytes), align: 0
  Segment part 90.            Intra module refs:   ll24BitTimeCompare
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000024BB - 00002522 (0x68 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitTimeDelta        000024BB        LL_TxData (ll)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
               XSTACK = 00000004 ( 00000013 )
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 92. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll24BitAbsTimeDelta     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 93. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeForward     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002523 - 00002538 (0x16 bytes), align: 0
  Segment part 94.            Intra module refs:   llAdjustTimeBackward
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00002539 - 000025A2 (0x6a bytes), align: 0
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llAdjustTimeBackward    00002539        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00019ADF - 00019B0E (0x30 bytes), align: 0
  Segment part 87.            Intra module refs:   ll_McuPrecisionCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount    00019ADF 
               XSTACK = 00000000 ( 00000002 )
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 20. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 21. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 22. TENTATIVE. Used definition from ll_sleep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c801         
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 23. TENTATIVE. Used definition from OSAL_Timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC2 - 00000FC7 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llInitTimer2::?relay    00000FC2        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FC8 - 00000FCD (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStopTimer2::?relay    00000FC8        LL_PowerOffReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FCE - 00000FD3 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llStartTimer2::?relay   00000FCE        LL_PowerOnReq (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FD4 - 00000FD9 (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Timeout::?relay
                                   00000FD4        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC2Timeout::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FDA - 00000FDF (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2C1Event1::?relay
                                   00000FDA        llT2OVFC1_ISR (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC1Event1::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FE0 - 00000FE5 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2LongC1Event1::?relay
                                   00000FE0        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FE6 - 00000FEB (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2OVFC2Event2::?relay
                                   00000FE6        llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llSetT2Delta::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FEC - 00000FF1 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2Ints::?relay
                                   00000FEC        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF2 - 00000FF7 (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2IntsEvts::?relay
                                   00000FF2        LL_Reset (ll)
                                                   LL_SetAdvControl (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   llDirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FF8 - 00000FFD (0x6 bytes), align: 0
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llDisableT2E1::?relay   00000FF8        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000FFE - 00001003 (0x6 bytes), align: 0
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetTimer2Capture::?relay
                                   00000FFE        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001004 - 00001009 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentTime::?relay
                                   00001004        LL_SetAdvControl (ll)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 78. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetCurrentFineTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCurrentTime::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000100A - 0000100F (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetFullCTandST::?relay
                                   0000100A        LL_TimeToNextRfEvent (ll_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 84. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC1::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llGetT2OVFC2::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001010 - 00001015 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ll_McuPrecisionCount::?relay
                                   00001010        osalTimeUpdate (OSAL_ClockBLE)
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 96. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 97. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 98. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 99. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ll_timerDrift

  SEGMENTS IN THE MODULE
  ======================
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000862F - 0000863E (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   llCalcScaFactor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SCA                     0000862F 
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008690 - 00008695 (0x6 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OverheadJitter          00008690        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025A3 - 000025F6 (0x54 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcScaFactor         000025A3        llAdvEvt_TaskConnect (ll_advEndCauses)
               calls direct
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000025F7 - 000026B8 (0xc2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           llCalcTimerDrift        000025F7        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
               calls direct
               XSTACK = 00000006 ( 00000011 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from gapbondmgr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_f4240        
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008735 - 00008738 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   llCalcTimerDrift
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_271          00008735 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000862F - 0000863E (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   SCA
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008690 - 00008695 (0x6 bytes), align: 2
  Segment part 13.            Intra module refs:   OverheadJitter
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008735 - 00008738 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_271

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Segment part 1. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     
    -------------------------------------------------------------------------
SFR_AN
  Segment part 2. TENTATIVE. Used definition from ll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_I
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C03 - 00000C03 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   PHY_AddWlEntry
                                                   PHY_ClearWhitelist
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           numWLEntries            00000C03 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBAD - 0000FBB9 (0xd bytes), align: 0
  Segment part 12.            Intra module refs:   PHY_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init                0000FBAD 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetChipID           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBBA - 0000FBD3 (0x1a bytes), align: 0
  Segment part 16.            Intra module refs:   PHY_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset               0000FBBA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_LoadNR              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_VerifyNR            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FBD4 - 0000FC02 (0x2f bytes), align: 0
  Segment part 23.            Intra module refs:   PHY_ClearAllRegsAndFifos::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos
                                   0000FBD4 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC03 - 0000FC07 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC08 - 0000FC12 (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetSem              
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReleaseSem          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC13 - 0000FC50 (0x3e bytes), align: 0
  Segment part 31.            Intra module refs:   PHY_SetOwnAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr          0000FC13 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC51 - 0000FC8E (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   PHY_SetPeerAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr         0000FC51 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC8F - 0000FC97 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC98 - 0000FC9C (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FC9D - 0000FCA1 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCA2 - 0000FCA7 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCA8 - 0000FCAC (0x5 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 37
                                                   Segment part 38
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCAD - 0000FCB5 (0x9 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 36
                                                   Segment part 39
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCB6 - 0000FCC3 (0xe bytes), align: 0
  Segment part 41.            Intra module refs:   PHY_SetCRCInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit          0000FCB6 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCC4 - 0000FCCA (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   PHY_SetCRCInit
                                                   PHY_SetSyncWord
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCCB - 0000FCD5 (0xb bytes), align: 0
  Segment part 44.            Intra module refs:   PHY_GetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans         0000FCCB 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCD6 - 0000FCE2 (0xd bytes), align: 0
  Segment part 46.            Intra module refs:   PHY_SetAdvChans::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans         0000FCD6 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000026B9 - 000026C1 (0x9 bytes), align: 0
  Segment part 236.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDataChan         000026B9        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetNextDataChan (ll_common)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000026C2 - 000026C6 (0x5 bytes), align: 0
  Segment part 237.           Intra module refs:   PHY_SetDataChan
    -------------------------------------------------------------------------
NEAR_CODE
  Segment part 238. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetDataChan         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCE3 - 0000FCF9 (0x17 bytes), align: 0
  Segment part 48.            Intra module refs:   PHY_SetEndConnection::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection    0000FCE3 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FCFA - 0000FD07 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   PHY_ConfigureMD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD         0000FCFA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBackoffCnt       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanMode         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 56. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanEnd          
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD08 - 0000FD12 (0xb bytes), align: 0
  Segment part 58.            Intra module refs:   PHY_GetEndCause::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause         0000FD08 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AnchorValid         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD13 - 0000FD1E (0xc bytes), align: 0
  Segment part 62.            Intra module refs:   PHY_InitSeqStat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat         0000FD13 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_FirstPktReceived    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CtrlAckPending      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD1F - 0000FD2D (0xf bytes), align: 0
  Segment part 68.            Intra module refs:   PHY_SetSyncWord::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord         0000FD1F 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD2E - 0000FD38 (0xb bytes), align: 0
  Segment part 70.            Intra module refs:   PHY_SetMaxNack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack          0000FD2E 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD39 - 0000FD51 (0x19 bytes), align: 0
  Segment part 72.            Intra module refs:   PHY_ClearWhitelist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist      0000FD39 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 74. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlEntry        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 76. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlBasedOnBl    
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD52 - 0000FD52 (0x1 bytes), align: 0
  Segment part 78.            Intra module refs:   PHY_ClearBlacklistIndex
                                                   PHY_SetBlacklistIndex
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD53 - 0000FD57 (0x5 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 78
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 80. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetNumFreeWlEntries
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 82. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD58 - 0000FD5B (0x4 bytes), align: 0
  Segment part 84.            Intra module refs:   PHY_GetAdvChans
                                                   PHY_GetEndCause
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 85. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetWlSize           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FD5C - 0000FDF7 (0x9c bytes), align: 0
  Segment part 87.            Intra module refs:   PHY_AddWlEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry          0000FD5C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RemoveWlEntry       
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 91. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FDF8 - 0000FE04 (0xd bytes), align: 0
  Segment part 92.            Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE05 - 0000FE14 (0x10 bytes), align: 0
  Segment part 93.            Intra module refs:   PHY_SetAdvWlPolicy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy      0000FE05 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 95. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanWlPolicy     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 97. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetInitWlPolicy     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE15 - 0000FE2E (0x1a bytes), align: 0
  Segment part 99.            Intra module refs:   PHY_SetBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex   0000FE15 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 101. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistEntry   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE2F - 0000FE4B (0x1d bytes), align: 0
  Segment part 104.           Intra module refs:   PHY_ClearBlacklistIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex
                                   0000FE2F 
               XSTACK = 0000000C ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE4C - 0000FE56 (0xb bytes), align: 0
  Segment part 106.           Intra module refs:   PHY_ClearBlacklist::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist      0000FE4C 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 108. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveWhiteList       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 110. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 111. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreWhiteList    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 114. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE57 - 0000FE5C (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE5D - 0000FE61 (0x5 bytes), align: 0
  Segment part 116.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE62 - 0000FE67 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   Segment part 116
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 118. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE68 - 0000FE7D (0x16 bytes), align: 0
  Segment part 119.           Intra module refs:   PHY_ClearSavedWhiteList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList
                                   0000FE68 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE7E - 0000FE83 (0x6 bytes), align: 0
  Segment part 121.           Intra module refs:   PHY_ClearSavedWhiteList
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 122. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Command             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 124. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearCounters       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 126. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 127. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadCounters        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE84 - 0000FE87 (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   PHY_AddWlEntry
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE88 - 0000FE8C (0x5 bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 131. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE8D - 0000FE96 (0xa bytes), align: 0
  Segment part 132.           Intra module refs:   PHY_ConfigureFifoDataProcessing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing
                                   0000FE8D 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FE97 - 0000FEAA (0x14 bytes), align: 0
  Segment part 134.           Intra module refs:   PHY_ConfigureAppendRfStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus
                                   0000FE97 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEAB - 0000FEB4 (0xa bytes), align: 0
  Segment part 136.           Intra module refs:   PHY_SetFifoConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig       0000FEAB 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 138. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitLastRssi        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 140. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetLastRssi         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 142. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRssi             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 144. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWinConfig      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 146. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDynamicWinOffset
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEB5 - 0000FEBD (0x9 bytes), align: 0
  Segment part 148.           Intra module refs:   PHY_SetSyncWord
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEBE - 0000FEBF (0x2 bytes), align: 0
  Segment part 150.           Intra module refs:   PHY_ClearAllRegsAndFifos
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEC0 - 0000FEC0 (0x1 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEC1 - 0000FEC1 (0x1 bytes), align: 0
  Segment part 152.           Intra module refs:   Segment part 151
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEC2 - 0000FEC2 (0x1 bytes), align: 0
  Segment part 153.           Intra module refs:   PHY_ClearBlacklist
                                                   PHY_ConfigureAppendRfStatus
                                                   PHY_ConfigureFifoDataProcessing
                                                   PHY_ConfigureMD
                                                   PHY_InitSeqStat
                                                   PHY_SetAdvChans
                                                   PHY_SetAdvWlPolicy
                                                   PHY_SetEndConnection
                                                   PHY_SetFifoConfig
                                                   PHY_SetMaxNack
                                                   PHY_SetOwnAddr
                                                   PHY_SetPeerAddr
                                                   PHY_SetRfFreq
                                                   Segment part 121
                                                   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FEC3 - 0000FEC9 (0x7 bytes), align: 0
  Segment part 154.           Intra module refs:   PHY_ClearWhitelist
                                                   PHY_ConfigWhitener
                                                   PHY_Init
                                                   PHY_Reset
                                                   Segment part 153
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FECA - 0000FF2A (0x61 bytes), align: 0
  Segment part 155.           Intra module refs:   PHY_ConfigWhitener::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener      0000FECA 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 157. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxFifo         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 159. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetRxFifo         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 161. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxRxFifo       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 163. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoBytesFree     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 165. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoLen           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 167. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RxFifoLen           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF2B - 0000FF30 (0x6 bytes), align: 0
  Segment part 169.           Intra module refs:   PHY_RetryTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo         0000FF2B 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF31 - 0000FF36 (0x6 bytes), align: 0
  Segment part 171.           Intra module refs:   PHY_RetryRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo         0000FF31 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 173. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitTxFifo        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF37 - 0000FF3C (0x6 bytes), align: 0
  Segment part 175.           Intra module refs:   PHY_CommitRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo        0000FF37 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 177. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DiscardTxFifo       
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF3D - 0000FF42 (0x6 bytes), align: 0
  Segment part 179.           Intra module refs:   PHY_DeallocateRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo    0000FF3D 
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 181. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRxFifoThreshold
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 183. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetTxSWP            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 185. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 186. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRxSRP            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 188. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByte           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 190. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByteVal        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 192. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByte            
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 194. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByteVal         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 196. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_MapDataBank         
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 198. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveRestoreConn     
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 200. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreConn         
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 202. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawTxInit           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 204. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawRxInit           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 206. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 207. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumTxPkts     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 209. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF43 - 0000FF48 (0x6 bytes), align: 0
  Segment part 210.           Intra module refs:   Segment part 130
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 211. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumRxPkts     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 213. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetRxData        
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 215. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF49 - 0000FF7B (0x33 bytes), align: 0
  Segment part 216.           Intra module refs:   PHY_SetRfFreq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq           0000FF49 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FF7C - 0000FFF3 (0x78 bytes), align: 0
  Segment part 218.           Intra module refs:   phyFindWlEntry::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry          0000FF7C 
               XSTACK = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000FFF4 - 0000FFF8 (0x5 bytes), align: 0
  Segment part 220.           Intra module refs:   phyFindWlEntry
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 221. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phyCopyFIFO             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 223. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 224. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phySaveFifo             
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 226. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 227. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 228. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 229. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 230. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           phyRestoreFifo          
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 232. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 233. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 234. NOT NEEDED.
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 235. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001016 - 0000101B (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Init::?relay        00001016        LL_Init (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetChipID::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000101C - 00001021 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Reset::?relay       0000101C        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_LoadNR::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_VerifyNR::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001022 - 00001027 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   PHY_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearAllRegsAndFifos::?relay
                                   00001022        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetSem::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReleaseSem::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001028 - 0000102D (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetOwnAddr::?relay
                                   00001028        llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000102E - 00001033 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetPeerAddr::?relay
                                   0000102E        llSetupDirectedAdvEvt (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001034 - 00001039 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetCRCInit::?relay
                                   00001034        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000103A - 0000103F (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetAdvChans::?relay
                                   0000103A        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001040 - 00001045 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvChans::?relay
                                   00001040        llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001046 - 0000104B (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetEndConnection::?relay
                                   00001046        RF_NormalIsr (ll_isr)
                                                   llConnCleanup (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000104C - 00001051 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureMD::?relay
                                   0000104C        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBackoffCnt::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanMode::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 57. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanEnd::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001052 - 00001057 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetEndCause::?relay
                                   00001052        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 61. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AnchorValid::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001058 - 0000105D (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitSeqStat::?relay
                                   00001058        llAdvEvt_TaskConnect (ll_advEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_FirstPktReceived::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CtrlAckPending::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000105E - 00001063 (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetSyncWord::?relay
                                   0000105E        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001064 - 00001069 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetMaxNack::?relay
                                   00001064        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupVersionIndReq (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000106A - 0000106F (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWhitelist::?relay
                                   0000106A        LL_ClearWhiteList (ll)
                                                   LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 75. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 77. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWlBasedOnBl::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 81. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetNumFreeWlEntries::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 86. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetWlSize::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001070 - 00001075 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_AddWlEntry::?relay
                                   00001070        LL_AddWhiteListDevice (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 90. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RemoveWlEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001076 - 0000107B (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetAdvWlPolicy::?relay
                                   00001076        LL_SetAdvParam (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 96. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetScanWlPolicy::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 98. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetInitWlPolicy::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000107C - 00001081 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistIndex::?relay
                                   0000107C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 102. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetBlacklistEntry::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001082 - 00001087 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   PHY_AddWlEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklistIndex::?relay
                                   00001082 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001088 - 0000108D (0x6 bytes), align: 0
  Segment part 107.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearBlacklist::?relay
                                   00001088        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 109. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveWhiteList::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 112. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreWhiteList::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000108E - 00001093 (0x6 bytes), align: 0
  Segment part 120.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearSavedWhiteList::?relay
                                   0000108E        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 123. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_Command::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 125. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearCounters::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 128. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadCounters::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001094 - 00001099 (0x6 bytes), align: 0
  Segment part 133.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureFifoDataProcessing::?relay
                                   00001094        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000109A - 0000109F (0x6 bytes), align: 0
  Segment part 135.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigureAppendRfStatus::?relay
                                   0000109A        LL_Reset (ll)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupAdv (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010A0 - 000010A5 (0x6 bytes), align: 0
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetFifoConfig::?relay
                                   000010A0        LL_Reset (ll)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 139. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_InitLastRssi::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 141. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetLastRssi::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 143. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRssi::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 145. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ClearWinConfig::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 147. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetDynamicWinOffset::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010A6 - 000010AB (0x6 bytes), align: 0
  Segment part 156.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ConfigWhitener::?relay
                                   000010A6        llRfInit (ll_common)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 158. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 160. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetRxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 162. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ResetTxRxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 164. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoBytesFree::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 166. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_TxFifoLen::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 168. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RxFifoLen::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010AC - 000010B1 (0x6 bytes), align: 0
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryTxFifo::?relay
                                   000010AC        llSave_txFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B2 - 000010B7 (0x6 bytes), align: 0
  Segment part 172.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RetryRxFifo::?relay
                                   000010B2        llSave_rxFIFO (ll_scheduler)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 174. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010B8 - 000010BD (0x6 bytes), align: 0
  Segment part 176.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_CommitRxFifo::?relay
                                   000010B8        llSave_rxFIFO (ll_scheduler)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 178. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DiscardTxFifo::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010BE - 000010C3 (0x6 bytes), align: 0
  Segment part 180.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_DeallocateRxFifo::?relay
                                   000010BE        llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 182. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRxFifoThreshold::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 184. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetTxSWP::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 187. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_GetRxSRP::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 189. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByte::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 191. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_WriteByteVal::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 193. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByte::?relay    
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 195. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_ReadByteVal::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 197. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_MapDataBank::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 199. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SaveRestoreConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 201. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RestoreConn::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 203. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawTxInit::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 205. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawRxInit::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 208. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumTxPkts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 212. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetNumRxPkts::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 214. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_RawGetRxData::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010C4 - 000010C9 (0x6 bytes), align: 0
  Segment part 217.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PHY_SetRfFreq::?relay   000010C4        RF_NormalIsr (ll_isr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010CA - 000010CF (0x6 bytes), align: 0
  Segment part 219.           Intra module refs:   PHY_AddWlEntry
           LOCAL                   ADDRESS         
           =====                   =======         
           phyFindWlEntry::?relay
                                   000010CA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 222. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 225. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 231. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : phy_image

  SEGMENTS IN THE MODULE
  ======================
XDATA_ROM_C
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NanoRiscImage           
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 7. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_mgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000C04 - 00000C05 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 31
                                                   Segment part 40
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 0000861F - 0000862E (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_NewRandKey           
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DCF - 00010DD3 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   sm_xor
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010DD4 - 00010E55 (0x82 bytes), align: 0
  Segment part 13.            Intra module refs:   SM_CalcRandomAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr       00010DD4 
               calls direct
               XSTACK = 00000000 ( 00000011 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010E56 - 00010EF6 (0xa1 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_ResolveRandomAddrs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs   00010E56 
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Encrypt              
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010EF7 - 00010EF9 (0x3 bytes), align: 0
  Segment part 19.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010EFA - 00010EFE (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   smGenerateRandBuf
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00010EFF - 0001103C (0x13e bytes), align: 0
  Segment part 21.            Intra module refs:   SM_GenerateAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig    00010EFF 
               calls direct
               XSTACK = 00000000 ( 00000032 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001103D - 00011046 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   SM_GenerateAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011047 - 00011243 (0x1fd bytes), align: 0
  Segment part 24.            Intra module refs:   SM_VerifyAuthenSig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig      00011047 
               calls direct
               XSTACK = 00000003 ( 0000003F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011244 - 00011254 (0x11 bytes), align: 0
  Segment part 26.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011255 - 0001131C (0xc8 bytes), align: 0
  Segment part 27.            Intra module refs:   smProcessRandComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete   00011255 
               calls direct
               XSTACK = 00000000 ( 0000000E )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001131D - 00011328 (0xc bytes), align: 0
  Segment part 29.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011329 - 0001132E (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   SM_VerifyAuthenSig
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001132F - 00011334 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011335 - 0001133A (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   smProcessRandComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001133B - 0001136F (0x35 bytes), align: 0
  Segment part 33.            Intra module refs:   smStartRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer         0001133B 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011370 - 0001137F (0x10 bytes), align: 0
  Segment part 35.            Intra module refs:   smStopRspTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer          00011370 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011380 - 00011386 (0x7 bytes), align: 0
  Segment part 37.            Intra module refs:   smAuthReqToUint8
                                                   smStopRspTimer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 38. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smInProcess             
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011387 - 00011391 (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   smProcessRandComplete
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 41. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_d1                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011392 - 000113E3 (0x52 bytes), align: 0
  Segment part 43.            Intra module refs:   sm_ah::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah                   00011392 
               calls direct
               XSTACK = 00000014 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000113E4 - 000113E9 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 64
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000113EA - 000113F3 (0xa bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000113F4 - 00011416 (0x23 bytes), align: 0
  Segment part 47.            Intra module refs:   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011417 - 0001141D (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001141E - 00011430 (0x13 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
                                                   sm_ah
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011431 - 00011435 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011436 - 0001143A (0x5 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smStartRspTimer
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_dm                   
               calls direct, is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001143B - 000115F0 (0x1b6 bytes), align: 0
  Segment part 54.            Intra module refs:   sm_c1new::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new                0001143B 
               calls direct
               XSTACK = 0000000B ( 0000006A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000115F1 - 000115F8 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_CMAC
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000115F9 - 000115FC (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   sm_ah
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000115FD - 00011602 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
                                                   Segment part 49
                                                   Segment part 57
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011603 - 0001160A (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_c1new
                                                   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001160B - 00011633 (0x29 bytes), align: 0
  Segment part 60.            Intra module refs:   sm_xor::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor                  0001160B 
               XSTACK = 00000068 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011634 - 000116A4 (0x71 bytes), align: 0
  Segment part 62.            Intra module refs:   sm_s1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1                   00011634 
               calls direct
               XSTACK = 00000004 ( 00000040 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000116A5 - 000116AB (0x7 bytes), align: 0
  Segment part 64.            Intra module refs:   sm_s1
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000116AC - 000116DD (0x32 bytes), align: 0
  Segment part 65.            Intra module refs:   smGenerateRandBuf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf       000116AC 
               calls direct
               XSTACK = 0000000F ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000116DE - 000116EA (0xd bytes), align: 0
  Segment part 67.            Intra module refs:   smAuthReqToUint8::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8        000116DE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000116EB - 00011730 (0x46 bytes), align: 0
  Segment part 69.            Intra module refs:   smUint8ToAuthReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq        000116EB 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011731 - 00011735 (0x5 bytes), align: 0
  Segment part 71.            Intra module refs:   smEncrypt
                                                   smUint8ToAuthReq
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011736 - 00011759 (0x24 bytes), align: 0
  Segment part 72.            Intra module refs:   smEncrypt::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt               00011736 
               calls direct
               XSTACK = 00000068 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001175A - 00011996 (0x23d bytes), align: 0
  Segment part 74.            Intra module refs:   sm_CMAC::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC                 0001175A 
               calls direct
               XSTACK = 0000003D ( 0000002D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011997 - 0001199A (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   SM_ResolveRandomAddrs
                                                   sm_c1new
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001199B - 000119A0 (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   SM_CalcRandomAddr
                                                   Segment part 76
                                                   smProcessRandComplete
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000119A1 - 000119AA (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   SM_VerifyAuthenSig
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000119AB - 00011A85 (0xdb bytes), align: 0
  Segment part 79.            Intra module refs:   generate_subkey::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey         000119AB 
               calls direct
               XSTACK = 0000002D ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A86 - 00011A8D (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A8E - 00011A93 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   Segment part 81
                                                   generate_subkey
                                                   smEncrypt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A94 - 00011A9B (0x8 bytes), align: 0
  Segment part 83.            Intra module refs:   generate_subkey
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011A9C - 00011AA1 (0x6 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AA2 - 00011AB4 (0x13 bytes), align: 0
  Segment part 85.            Intra module refs:   generate_subkey
                                                   sm_CMAC
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011AB5 - 00011B02 (0x4e bytes), align: 0
  Segment part 86.            Intra module refs:   xor_128::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128                 00011AB5 
               XSTACK = 0000002D ( 0000000A )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B03 - 00011B0B (0x9 bytes), align: 0
  Segment part 88.            Intra module refs:   smGenerateRandBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B0C - 00011B10 (0x5 bytes), align: 0
  Segment part 89.            Intra module refs:   SM_VerifyAuthenSig
                                                   Segment part 88
                                                   sm_CMAC
                                                   xor_128
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00011B11 - 00011B5D (0x4d bytes), align: 0
  Segment part 90.            Intra module refs:   leftshift_onebit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit        00011B11 
               XSTACK = 00000012 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_NewRandKey::?relay   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010D0 - 000010D5 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_CalcRandomAddr::?relay
                                   000010D0        GAP_ProcessEvent (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010D6 - 000010DB (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResolveRandomAddrs::?relay
                                   000010D6        GAP_ResolvePrivateAddr (gap_devmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Encrypt::?relay      
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010DC - 000010E1 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_GenerateAuthenSig::?relay
                                   000010DC        attSendMsg (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E2 - 000010E7 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_VerifyAuthenSig::?relay
                                   000010E2        ATT_ParsePacket (att_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010E8 - 000010ED (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessRandComplete::?relay
                                   000010E8        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010EE - 000010F3 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartRspTimer::?relay
                                   000010EE        smProcessDataMsg (sm_pairing)
                                                   smSendSMMsg (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010F4 - 000010F9 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStopRspTimer::?relay
                                   000010F4        smFreePairingParams (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smInProcess::?relay     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_d1::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000010FA - 000010FF (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   SM_CalcRandomAddr
                                                   SM_ResolveRandomAddrs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_ah::?relay           000010FA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 53. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_dm::?relay           
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001100 - 00001105 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1new::?relay        00001100        sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001106 - 0000110B (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_xor::?relay          00001106 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000110C - 00001111 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_s1::?relay           0000110C        smResponderProcessLTKReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001112 - 00001117 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   SM_CalcRandomAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandBuf::?relay
                                   00001112        SM_PasskeyUpdate (sm_pairing)
                                                   Segment part 28 (gap_configmgr)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001118 - 0000111D (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smAuthReqToUint8::?relay
                                   00001118        smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000111E - 00001123 (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smUint8ToAuthReq::?relay
                                   0000111E        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smpParsePairingReq (smp)
                                                   smpParseSecurityReq (smp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001124 - 00001129 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 46
                                                   sm_c1new
           LOCAL                   ADDRESS         
           =====                   =======         
           smEncrypt::?relay       00001124 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000112A - 0000112F (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   SM_GenerateAuthenSig
                                                   SM_VerifyAuthenSig
           LOCAL                   ADDRESS         
           =====                   =======         
           sm_CMAC::?relay         0000112A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001130 - 00001135 (0x6 bytes), align: 0
  Segment part 80.            Intra module refs:   sm_CMAC
           LOCAL                   ADDRESS         
           =====                   =======         
           generate_subkey::?relay
                                   00001130 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001136 - 0000113B (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 84
           LOCAL                   ADDRESS         
           =====                   =======         
           xor_128::?relay         00001136 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000113C - 00001141 (0x6 bytes), align: 0
  Segment part 91.            Intra module refs:   generate_subkey
           LOCAL                   ADDRESS         
           =====                   =======         
           leftshift_onebit::?relay
                                   0000113C 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 0000861F - 0000862E (0x10 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 93. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_pairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000C06 - 00000C07 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 13
                                                   Segment part 17
                                                   Segment part 21
                                                   Segment part 22
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 61
                                                   Segment part 69
                                                   Segment part 76
                                                   Segment part 77
                                                   Segment part 78
                                                   Segment part 86
                                                   smDetermineKeySize
                                                   smEndPairing
                                                   smFreePairingParams
                                                   smGenerateConfirm
                                                   smProcessEncryptChange
                                                   smSavePairInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pPairingParams          00000C06        Segment part 17 (sm_rsppairing)
                                                   Segment part 18 (sm_rsppairing)
                                                   Segment part 20 (sm_rsppairing)
                                                   Segment part 26 (sm_rsppairing)
                                                   Segment part 36 (sm_rsppairing)
                                                   Segment part 41 (sm_rsppairing)
                                                   Segment part 43 (sm_rsppairing)
                                                   Segment part 44 (sm_rsppairing)
                                                   Segment part 50 (sm_rsppairing)
                                                   Segment part 58 (sm_rsppairing)
                                                   Segment part 61 (sm_rsppairing)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 69 (sm_rsppairing)
                                                   Segment part 73 (sm_rsppairing)
                                                   Segment part 76 (sm_rsppairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C08 - 00000C09 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smRegisterResponder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pfnResponderCBs         00000C08        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C0A - 00000C0B (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smStartEncryption
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 000085CA - 000085E2 (0x19 bytes), align: 0
  Segment part 9.             Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C2DA - 0000C3C2 (0xe9 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_StartPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing         0000C2DA 
               calls direct
               XSTACK = 00000002 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3C3 - 0000C3C6 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3C7 - 0000C3CD (0x7 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 15
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3CE - 0000C3D7 (0xa bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3D8 - 0000C3DD (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   SM_StartPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3DE - 0000C3DF (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3E0 - 0000C3E2 (0x3 bytes), align: 0
  Segment part 17.            Intra module refs:   SM_PasskeyUpdate
                                                   SM_StartPairing
                                                   Segment part 16
                                                   smFreePairingParams
                                                   smGeneratePairingReqRsp
                                                   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSetPairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3E3 - 0000C3EA (0x8 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17
                                                   smNextPairingState
                                                   smProcessDataMsg
                                                   smProcessEncryptChange
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C3EB - 0000C4B5 (0xcb bytes), align: 0
  Segment part 19.            Intra module refs:   SM_PasskeyUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate        0000C3EB 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4B6 - 0000C4C3 (0xe bytes), align: 0
  Segment part 21.            Intra module refs:   SM_PasskeyUpdate
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4C4 - 0000C4C9 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4CA - 0000C4CE (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
                                                   smLinkCheck
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterInitiator     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4CF - 0000C4D8 (0xa bytes), align: 0
  Segment part 26.            Intra module refs:   smRegisterResponder::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder     0000C4CF 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4D9 - 0000C4F5 (0x1d bytes), align: 0
  Segment part 28.            Intra module refs:   smLinkCheck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck             0000C4D9 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4F6 - 0000C4FA (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   smEndPairing
                                                   smLinkCheck
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C4FB - 0000C506 (0xc bytes), align: 0
  Segment part 31.            Intra module refs:   smTimedOut::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut              0000C4FB 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C507 - 0000C6A2 (0x19c bytes), align: 0
  Segment part 33.            Intra module refs:   smProcessDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg        0000C507 
               calls direct
               XSTACK = 00000000 ( 0000001F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6A3 - 0000C6A5 (0x3 bytes), align: 0
  Segment part 35.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6A6 - 0000C6AA (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6AB - 0000C6D7 (0x2d bytes), align: 0
  Segment part 37.            Intra module refs:   smSendFailAndEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd        0000C6AB 
               calls direct
               XSTACK = 0000001F ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C6D8 - 0000C7ED (0x116 bytes), align: 0
  Segment part 39.            Intra module refs:   smProcessEncryptChange::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange
                                   0000C6D8 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C7EE - 0000C81C (0x2f bytes), align: 0
  Segment part 41.            Intra module refs:   smNextPairingState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState      0000C7EE 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C81D - 0000C823 (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C824 - 0000C836 (0x13 bytes), align: 0
  Segment part 44.            Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C837 - 0000C83B (0x5 bytes), align: 0
  Segment part 45.            Intra module refs:   smRegisterResponder
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C83C - 0000C842 (0x7 bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   smDetermineKeySize
                                                   smFreePairingParams
                                                   smNextPairingState
                                                   smTimedOut
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C843 - 0000C986 (0x144 bytes), align: 0
  Segment part 47.            Intra module refs:   sm_c1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1                   0000C843 
               calls direct
               XSTACK = 0000000C ( 0000003A )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C987 - 0000C989 (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   smProcessEncryptChange
                                                   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C98A - 0000C991 (0x8 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000C992 - 0000CA5D (0xcc bytes), align: 0
  Segment part 51.            Intra module refs:   smProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq     0000C992 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CA5E - 0000CA66 (0x9 bytes), align: 0
  Segment part 53.            Intra module refs:   smProcessDataMsg
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CA67 - 0000CABD (0x57 bytes), align: 0
  Segment part 54.            Intra module refs:   smStartEncryption::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption       0000CA67 
               XSTACK = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CABE - 0000CAC2 (0x5 bytes), align: 0
  Segment part 56.            Intra module refs:   SM_StartPairing
                                                   smStartEncryption
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CAC3 - 0000CB13 (0x51 bytes), align: 0
  Segment part 57.            Intra module refs:   smGeneratePairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp
                                   0000CAC3 
               calls direct
               XSTACK = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB14 - 0000CB16 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   smEndPairing
                                                   smGeneratePairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB17 - 0000CB1B (0x5 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 59
                                                   smNextPairingState
                                                   smProcessDataMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB1C - 0000CB27 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 88
                                                   smGeneratePairingReqRsp
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB28 - 0000CB2D (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   Segment part 56
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB2E - 0000CB62 (0x35 bytes), align: 0
  Segment part 63.            Intra module refs:   smGenerateConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm       0000CB2E 
               calls direct
               XSTACK = 0000000A ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB63 - 0000CB8F (0x2d bytes), align: 0
  Segment part 65.            Intra module refs:   smGenerateRandMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg       0000CB63 
               calls direct
               XSTACK = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB90 - 0000CB93 (0x4 bytes), align: 0
  Segment part 67.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
                                                   smPairingSendIdentityAddrInfo
                                                   smPairingSendMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB94 - 0000CB99 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 67
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CB9A - 0000CBA5 (0xc bytes), align: 0
  Segment part 69.            Intra module refs:   SM_PasskeyUpdate
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CBA6 - 0000CE21 (0x27c bytes), align: 0
  Segment part 70.            Intra module refs:   smSavePairInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo          0000CBA6 
               calls direct
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE22 - 0000CE2D (0xc bytes), align: 0
  Segment part 72.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE2E - 0000CE33 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   Segment part 72
                                                   Segment part 75
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE34 - 0000CE3F (0xc bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE40 - 0000CE45 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE46 - 0000CE4F (0xa bytes), align: 0
  Segment part 76.            Intra module refs:   SM_StartPairing
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE50 - 0000CE59 (0xa bytes), align: 0
  Segment part 77.            Intra module refs:   smSavePairInfo
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE5A - 0000CE5F (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   smDetermineKeySize
                                                   smSavePairInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE60 - 0000CE66 (0x7 bytes), align: 0
  Segment part 79.            Intra module refs:   Segment part 78
                                                   smProcessEncryptChange
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE67 - 0000CE6F (0x9 bytes), align: 0
  Segment part 80.            Intra module refs:   Segment part 23
                                                   Segment part 79
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE70 - 0000CE7A (0xb bytes), align: 0
  Segment part 81.            Intra module refs:   smPairingSendEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo    0000CE70 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE7B - 0000CE87 (0xd bytes), align: 0
  Segment part 83.            Intra module refs:   smPairingSendEncInfo
                                                   smPairingSendIdentityInfo
                                                   smPairingSendSingingInfo
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CE88 - 0000CEE2 (0x5b bytes), align: 0
  Segment part 84.            Intra module refs:   smPairingSendMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID   0000CE88 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEE3 - 0000CEE5 (0x3 bytes), align: 0
  Segment part 86.            Intra module refs:   smDetermineKeySize
                                                   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEE6 - 0000CEEB (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   smDetermineKeySize
                                                   smPairingSendMasterID
                                                   smProcessDataMsg
                                                   sm_c1
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CEEC - 0000CF06 (0x1b bytes), align: 0
  Segment part 88.            Intra module refs:   smGenerateConfirm
                                                   smGenerateRandMsg
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF07 - 0000CF09 (0x3 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 83
                                                   Segment part 88
                                                   smGeneratePairingReqRsp
                                                   smPairingSendMasterID
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF0A - 0000CF0E (0x5 bytes), align: 0
  Segment part 90.            Intra module refs:   SM_PasskeyUpdate
                                                   Segment part 89
                                                   smSendFailAndEnd
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF0F - 0000CF12 (0x4 bytes), align: 0
  Segment part 91.            Intra module refs:   smPairingSendIdentityAddrInfo
                                                   smPairingSendMasterID
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF13 - 0000CF18 (0x6 bytes), align: 0
  Segment part 92.            Intra module refs:   Segment part 83
                                                   Segment part 88
                                                   Segment part 91
                                                   smGeneratePairingReqRsp
                                                   smSendFailAndEnd
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF19 - 0000CF26 (0xe bytes), align: 0
  Segment part 93.            Intra module refs:   smPairingSendIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo
                                   0000CF19 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF27 - 0000CF73 (0x4d bytes), align: 0
  Segment part 95.            Intra module refs:   smPairingSendIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo
                                   0000CF27 
               calls direct
               XSTACK = 00000000 ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF74 - 0000CF81 (0xe bytes), align: 0
  Segment part 97.            Intra module refs:   smPairingSendSingingInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo
                                   0000CF74 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CF82 - 0000CFE3 (0x62 bytes), align: 0
  Segment part 99.            Intra module refs:   smFreePairingParams::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams     0000CF82 
               calls direct
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFE4 - 0000CFED (0xa bytes), align: 0
  Segment part 101.           Intra module refs:   smFreePairingParams
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000CFEE - 0000D04C (0x5f bytes), align: 0
  Segment part 102.           Intra module refs:   smEndPairing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing            0000CFEE 
               calls direct
               XSTACK = 0000000C ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D04D - 0000D050 (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D051 - 0000D054 (0x4 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D055 - 0000D05F (0xb bytes), align: 0
  Segment part 106.           Intra module refs:   Segment part 105
                                                   Segment part 108
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D060 - 0000D063 (0x4 bytes), align: 0
  Segment part 107.           Intra module refs:   SM_PasskeyUpdate
                                                   smEndPairing
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D064 - 0000D068 (0x5 bytes), align: 0
  Segment part 108.           Intra module refs:   Segment part 101
                                                   Segment part 107
                                                   Segment part 77
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D069 - 0000D0BF (0x57 bytes), align: 0
  Segment part 109.           Intra module refs:   smDetermineKeySize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize      0000D069 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D0C0 - 0000D142 (0x83 bytes), align: 0
  Segment part 111.           Intra module refs:   smSetPairingReqRsp::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp      0000D0C0 
               calls direct
               XSTACK = 0000002F ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D143 - 0000D145 (0x3 bytes), align: 0
  Segment part 113.           Intra module refs:   smProcessEncryptChange
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D146 - 0000D14B (0x6 bytes), align: 0
  Segment part 114.           Intra module refs:   Segment part 113
                                                   smSavePairInfo
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D14C - 0000D14D (0x2 bytes), align: 0
  Segment part 115.           Intra module refs:   SM_StartPairing
                                                   smProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D14E - 0000D151 (0x4 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 115
                                                   smProcessPairingReq
                                                   smSetPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000D152 - 0000D157 (0x6 bytes), align: 0
  Segment part 117.           Intra module refs:   Segment part 116
                                                   Segment part 44
                                                   Segment part 50
                                                   Segment part 60
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001142 - 00001147 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_StartPairing::?relay
                                   00001142        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001148 - 0000114D (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_PasskeyUpdate::?relay
                                   00001148        GAP_PasscodeUpdate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 25. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterInitiator::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000114E - 00001153 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smRegisterResponder::?relay
                                   0000114E        SM_ResponderInit (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001154 - 00001159 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smLinkCheck::?relay     00001154        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000115A - 0000115F (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTimedOut::?relay      0000115A        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001160 - 00001165 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessDataMsg::?relay
                                   00001160        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001166 - 0000116B (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 53
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendFailAndEnd::?relay
                                   00001166        GAP_TerminateAuth (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000116C - 00001171 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessEncryptChange::?relay
                                   0000116C        smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001172 - 00001177 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smNextPairingState::?relay
                                   00001172        SM_ProcessEvent (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001178 - 0000117D (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sm_c1::?relay           00001178        Segment part 54 (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000117E - 00001183 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smProcessPairingReq::?relay
                                   0000117E        GAP_Authenticate (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001184 - 00001189 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smStartEncryption::?relay
                                   00001184        GAP_Bond (gap_linkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000118A - 0000118F (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   SM_StartPairing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGeneratePairingReqRsp::?relay
                                   0000118A        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001190 - 00001195 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   SM_PasskeyUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateConfirm::?relay
                                   00001190        smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001196 - 0000119B (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smGenerateRandMsg::?relay
                                   00001196        smpResponderProcessPairingRandom (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000119C - 000011A1 (0x6 bytes), align: 0
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSavePairInfo::?relay
                                   0000119C        smpResponderProcessPairingReq (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A2 - 000011A7 (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendEncInfo::?relay
                                   000011A2        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011A8 - 000011AD (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendMasterID::?relay
                                   000011A8        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011AE - 000011B3 (0x6 bytes), align: 0
  Segment part 94.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityInfo::?relay
                                   000011AE        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011B4 - 000011B9 (0x6 bytes), align: 0
  Segment part 96.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendIdentityAddrInfo::?relay
                                   000011B4        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011BA - 000011BF (0x6 bytes), align: 0
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smPairingSendSingingInfo::?relay
                                   000011BA        smResponderSendNextKeyInfo (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011C0 - 000011C5 (0x6 bytes), align: 0
  Segment part 100.           Intra module refs:   SM_StartPairing
                                                   smEndPairing
                                                   smLinkCheck
           LOCAL                   ADDRESS         
           =====                   =======         
           smFreePairingParams::?relay
                                   000011C0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011C6 - 000011CB (0x6 bytes), align: 0
  Segment part 103.           Intra module refs:   smNextPairingState
                                                   smProcessEncryptChange
                                                   smSendFailAndEnd
                                                   smTimedOut
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smEndPairing::?relay    000011C6        smResponderProcessLTKReq (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011CC - 000011D1 (0x6 bytes), align: 0
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smDetermineKeySize::?relay
                                   000011CC        Segment part 15 (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D2 - 000011D7 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   smGeneratePairingReqRsp
                                                   sm_c1
           LOCAL                   ADDRESS         
           =====                   =======         
           smSetPairingReqRsp::?relay
                                   000011D2 
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 000085CA - 000085E2 (0x19 bytes), align: 0
  Segment part 118.           Intra module refs:   Segment part 9

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_rsppairing

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 00000E57 - 00000E5C (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_ResponderInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013451 - 00013472 (0x22 bytes), align: 0
  Segment part 10.            Intra module refs:   SM_ResponderInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit        00013451 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013473 - 0001363A (0x1c8 bytes), align: 0
  Segment part 12.            Intra module refs:   smResponderProcessLTKReq::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq
                                   00013473 
               calls direct, is indirectly called
               XSTACK = 00000002 ( 00000032 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001363B - 0001363F (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013640 - 0001364B (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001364C - 0001365D (0x12 bytes), align: 0
  Segment part 16.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001365E - 0001366B (0xe bytes), align: 0
  Segment part 17.            Intra module refs:   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001366C - 0001366E (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001366F - 00013673 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013674 - 00013679 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001367A - 00013683 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013684 - 00013925 (0x2a2 bytes), align: 0
  Segment part 22.            Intra module refs:   smpResponderProcessIncoming::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming
                                   00013684 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013926 - 00013929 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001392A - 0001392F (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013930 - 00013935 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013936 - 0001393C (0x7 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001393D - 00013942 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013943 - 00013A10 (0xce bytes), align: 0
  Segment part 29.            Intra module refs:   smpResponderProcessPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq
                                   00013943 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A11 - 00013A15 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   smpResponderProcessMasterID
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A16 - 00013A18 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A19 - 00013A19 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A1A - 00013A1F (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   smResponderProcessLTKReq
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A20 - 00013A23 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A24 - 00013A30 (0xd bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A31 - 00013A34 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A35 - 00013A38 (0x4 bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A39 - 00013A43 (0xb bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   Segment part 42
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A44 - 00013A47 (0x4 bytes), align: 0
  Segment part 40.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A48 - 00013A51 (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A52 - 00013A56 (0x5 bytes), align: 0
  Segment part 42.            Intra module refs:   Segment part 17
                                                   Segment part 21
                                                   Segment part 28
                                                   Segment part 40
                                                   Segment part 41
                                                   Segment part 43
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A57 - 00013A62 (0xc bytes), align: 0
  Segment part 43.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A63 - 00013A68 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A69 - 00013A6C (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013A6D - 00013AF9 (0x8d bytes), align: 0
  Segment part 46.            Intra module refs:   smpResponderProcessPairingRandom::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom
                                   00013A6D 
               calls direct
               XSTACK = 0000000E ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013AFA - 00013B05 (0xc bytes), align: 0
  Segment part 48.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B06 - 00013B06 (0x1 bytes), align: 0
  Segment part 49.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B07 - 00013B09 (0x3 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B0A - 00013B0D (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B0E - 00013B14 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B15 - 00013B1B (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 19
                                                   Segment part 25
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B1C - 00013B2A (0xf bytes), align: 0
  Segment part 54.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessPairingRandom
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013B2B - 00013BE3 (0xb9 bytes), align: 0
  Segment part 55.            Intra module refs:   smpResponderProcessMasterID::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID
                                   00013B2B 
               calls direct
               XSTACK = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BE4 - 00013BEE (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BEF - 00013BFD (0xf bytes), align: 0
  Segment part 58.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013BFE - 00013C00 (0x3 bytes), align: 0
  Segment part 59.            Intra module refs:   Segment part 58
                                                   Segment part 61
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C01 - 00013C07 (0x7 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 45
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C08 - 00013C16 (0xf bytes), align: 0
  Segment part 61.            Intra module refs:   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013C17 - 00013EFF (0x2e9 bytes), align: 0
  Segment part 62.            Intra module refs:   smResponderSendNextKeyInfo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo
                                   00013C17 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F00 - 00013F01 (0x2 bytes), align: 0
  Segment part 64.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F02 - 00013F0F (0xe bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F10 - 00013F15 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F16 - 00013F1B (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 66
                                                   smResponderProcessLTKReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F1C - 00013F25 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F26 - 00013F28 (0x3 bytes), align: 0
  Segment part 69.            Intra module refs:   smResponderProcessLTKReq
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F29 - 00013F2E (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 69
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
                                                   smpResponderProcessMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F2F - 00013F39 (0xb bytes), align: 0
  Segment part 71.            Intra module refs:   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F3A - 00013F44 (0xb bytes), align: 0
  Segment part 72.            Intra module refs:   Segment part 71
                                                   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F45 - 00013F4A (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F4B - 00013F54 (0xa bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 73
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F55 - 00013F5C (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   smResponderSendNextKeyInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F5D - 00013F68 (0xc bytes), align: 0
  Segment part 76.            Intra module refs:   Segment part 75
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessPairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00013F69 - 00013F6E (0x6 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   smResponderProcessLTKReq
                                                   smResponderSendNextKeyInfo
                                                   smpResponderProcessIncoming
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000392 - 00000397 (0x6 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 8. TENTATIVE. Used definition from osal_snv
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     
    -------------------------------------------------------------------------
<XDATA_ROM_C> 1 (was XDATA_ROM_C)
  Relative segment, address: CONST 00008709 - 0000870C (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   smResponderSendNextKeyInfo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1f4          00008709 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011D8 - 000011DD (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ResponderInit::?relay
                                   000011D8        GAP_DeviceInit (gap)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011DE - 000011E3 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderProcessLTKReq::?relay
                                   000011DE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011E4 - 000011E9 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessIncoming::?relay
                                   000011E4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011EA - 000011EF (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   smpResponderProcessIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpResponderProcessPairingReq::?relay
                                   000011EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011F0 - 000011F5 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessPairingRandom::?relay
                                   000011F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011F6 - 000011FB (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   smpResponderProcessIncoming
           LOCAL                   ADDRESS         
           =====                   =======         
           smpResponderProcessMasterID::?relay
                                   000011F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000011FC - 00001201 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   Segment part 7
           LOCAL                   ADDRESS         
           =====                   =======         
           smResponderSendNextKeyInfo::?relay
                                   000011FC 
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 78. NOT NEEDED.
    -------------------------------------------------------------------------
<BANKED_CODE,XDATA_ROM_C_FLASH> 1 (was XDATA_ROM_C_FLASH)
  Relative segment, address: CODE 00008709 - 0000870C (0x4 bytes), align: 0
  Segment part 79.            Intra module refs:   __Constant_1f4

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : sm_task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000C0C - 00000C0C (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SM_Init
                                                   SM_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smTaskID                00000C0C        smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smStopRspTimer (sm_mgr)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3BC - 0001B3E0 (0x25 bytes), align: 0
  Segment part 7.             Intra module refs:   SM_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init                 0001B3BC 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3E1 - 0001B456 (0x76 bytes), align: 0
  Segment part 9.             Intra module refs:   SM_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent         0001B3E1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B457 - 0001B569 (0x113 bytes), align: 0
  Segment part 11.            Intra module refs:   smProcessOSALMsg::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg        0001B457 
               calls direct
               XSTACK = 0000000C ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001B56A - 0001B574 (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   smProcessOSALMsg
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001202 - 00001207 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_Init::?relay         00001202        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001208 - 0000120D (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SM_ProcessEvent::?relay
                                   00001208        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000120E - 00001213 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   SM_ProcessEvent
           LOCAL                   ADDRESS         
           =====                   =======         
           smProcessOSALMsg::?relay
                                   0000120E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : smp

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001678B - 00016793 (0x9 bytes), align: 0
  Segment part 6.             Intra module refs:   smpBuildPairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq      0001678B 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016794 - 0001679C (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   smpBuildPairingRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp      00016794 
               calls direct, is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001679D - 0001685B (0xbf bytes), align: 0
  Segment part 10.            Intra module refs:   smpBuildPairingReqRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp   0001679D 
               calls direct
               XSTACK = 00000000 ( 0000000B )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001685C - 0001685C (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001685D - 0001685D (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001685E - 00016861 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016862 - 00016867 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016868 - 0001686D (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001686E - 00016874 (0x7 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
                                                   smpBuildPairingReqRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016875 - 00016A10 (0x19c bytes), align: 0
  Segment part 18.            Intra module refs:   smpParsePairingReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq      00016875 
               calls direct
               XSTACK = 00000000 ( 00000013 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A11 - 00016A1B (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   smpBuildPairingReqRsp
                                                   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A1C - 00016A25 (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   smpParsePairingReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A26 - 00016A55 (0x30 bytes), align: 0
  Segment part 22.            Intra module refs:   smpBuildPairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm
                                   00016A26 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A56 - 00016A80 (0x2b bytes), align: 0
  Segment part 24.            Intra module refs:   smpParsePairingConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm
                                   00016A56 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A81 - 00016AB0 (0x30 bytes), align: 0
  Segment part 26.            Intra module refs:   smpBuildPairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom   00016A81 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016AB1 - 00016ADB (0x2b bytes), align: 0
  Segment part 28.            Intra module refs:   smpParsePairingRandom::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom   00016AB1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016ADC - 00016B05 (0x2a bytes), align: 0
  Segment part 30.            Intra module refs:   smpBuildPairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed   00016ADC 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B06 - 00016B08 (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   smpBuildPairingReq
                                                   smpBuildPairingRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B09 - 00016B0F (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
                                                   smpBuildPairingFailed
                                                   smpParsePairingFailed
                                                   smpParseSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B10 - 00016B3B (0x2c bytes), align: 0
  Segment part 34.            Intra module refs:   smpParsePairingFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed   00016B10 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B3C - 00016B6B (0x30 bytes), align: 0
  Segment part 36.            Intra module refs:   smpBuildEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo         00016B3C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B6C - 00016B77 (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B78 - 00016B7E (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
                                                   smpBuildPairingReqRsp
                                                   smpBuildSecurityReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B7F - 00016BA9 (0x2b bytes), align: 0
  Segment part 40.            Intra module refs:   smpParseEncInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo         00016B7F 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BAA - 00016BF0 (0x47 bytes), align: 0
  Segment part 42.            Intra module refs:   smpBuildMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID        00016BAA 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BF1 - 00016C40 (0x50 bytes), align: 0
  Segment part 44.            Intra module refs:   smpParseMasterID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID        00016BF1 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C41 - 00016C45 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   smpBuildEncInfo
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildMasterID
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
                                                   smpParseEncInfo
                                                   smpParseIdentityAddrInfo
                                                   smpParseIdentityInfo
                                                   smpParseMasterID
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C46 - 00016C74 (0x2f bytes), align: 0
  Segment part 47.            Intra module refs:   smpBuildIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo    00016C46 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C75 - 00016C7D (0x9 bytes), align: 0
  Segment part 49.            Intra module refs:   smpParseEncInfo
                                                   smpParseIdentityInfo
                                                   smpParsePairingConfirm
                                                   smpParsePairingRandom
                                                   smpParseSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C7E - 00016C80 (0x3 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   smpBuildEncInfo
                                                   smpBuildIdentityInfo
                                                   smpBuildPairingConfirm
                                                   smpBuildPairingRandom
                                                   smpBuildSigningInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C81 - 00016C81 (0x1 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   smpParseMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C82 - 00016C87 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
                                                   smpParseIdentityAddrInfo
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C88 - 00016CC8 (0x41 bytes), align: 0
  Segment part 53.            Intra module refs:   smpBuildIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo
                                   00016C88 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CC9 - 00016CD6 (0xe bytes), align: 0
  Segment part 55.            Intra module refs:   smpBuildIdentityAddrInfo
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CD7 - 00016CE1 (0xb bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   smpBuildMasterID
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016CE2 - 00016D0C (0x2b bytes), align: 0
  Segment part 57.            Intra module refs:   smpParseIdentityInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo    00016CE2 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D0D - 00016D5B (0x4f bytes), align: 0
  Segment part 59.            Intra module refs:   smpParseIdentityAddrInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo
                                   00016D0D 
               calls direct
               XSTACK = 00000000 ( 0000000C )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D5C - 00016D8B (0x30 bytes), align: 0
  Segment part 61.            Intra module refs:   smpBuildSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo     00016D5C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D8C - 00016DB6 (0x2b bytes), align: 0
  Segment part 63.            Intra module refs:   smpParseSigningInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo     00016D8C 
               calls direct
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DB7 - 00016DE4 (0x2e bytes), align: 0
  Segment part 65.            Intra module refs:   smpBuildSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq     00016DB7 
               calls direct
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DE5 - 00016E07 (0x23 bytes), align: 0
  Segment part 67.            Intra module refs:   smpParseSecurityReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq     00016DE5 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E08 - 00016EA7 (0xa0 bytes), align: 0
  Segment part 69.            Intra module refs:   smSendSMMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg             00016E08 
               calls direct
               XSTACK = 00000002 ( 00000013 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001214 - 00001219 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReq::?relay
                                   00001214        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000121A - 0000121F (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRsp::?relay
                                   0000121A        smGeneratePairingReqRsp (sm_pairing)
                                                   sm_c1 (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001220 - 00001225 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingReqRsp::?relay
                                   00001220 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001226 - 0000122B (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingReq::?relay
                                   00001226        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000122C - 00001231 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingConfirm::?relay
                                   0000122C        smGenerateConfirm (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001232 - 00001237 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingConfirm::?relay
                                   00001232        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001238 - 0000123D (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingRandom::?relay
                                   00001238        smGenerateRandMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000123E - 00001243 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingRandom::?relay
                                   0000123E        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001244 - 00001249 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildPairingFailed::?relay
                                   00001244        smSendFailAndEnd (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000124A - 0000124F (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParsePairingFailed::?relay
                                   0000124A        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001250 - 00001255 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildEncInfo::?relay
                                   00001250        smPairingSendEncInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001256 - 0000125B (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseEncInfo::?relay
                                   00001256        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000125C - 00001261 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildMasterID::?relay
                                   0000125C        smPairingSendMasterID (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001262 - 00001267 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseMasterID::?relay
                                   00001262        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001268 - 0000126D (0x6 bytes), align: 0
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityInfo::?relay
                                   00001268        smPairingSendIdentityInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000126E - 00001273 (0x6 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildIdentityAddrInfo::?relay
                                   0000126E        smPairingSendIdentityAddrInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001274 - 00001279 (0x6 bytes), align: 0
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityInfo::?relay
                                   00001274        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000127A - 0000127F (0x6 bytes), align: 0
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseIdentityAddrInfo::?relay
                                   0000127A        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001280 - 00001285 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSigningInfo::?relay
                                   00001280        smPairingSendSingingInfo (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001286 - 0000128B (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSigningInfo::?relay
                                   00001286        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000128C - 00001291 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpBuildSecurityReq::?relay
                                   0000128C        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001292 - 00001297 (0x6 bytes), align: 0
  Segment part 68.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smpParseSecurityReq::?relay
                                   00001292        smProcessDataMsg (sm_pairing)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001298 - 0000129D (0x6 bytes), align: 0
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           smSendSMMsg::?relay     00001298        GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   Segment part 92 (sm_pairing)

    *************************************************************************

  FILE NAME : D:\APP\Texas Instruments\BLE-CC254x-1.3.2_AirTH(NTC)\Projects\ble\Libraries\Common\bin\CC254x_BLE_HCI_TL_None.lib
  LIBRARY MODULE, NAME : hci_tl

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000C0D - 00000C0D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HCI_Init
                                                   HCI_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTaskID               00000C0D        LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   Segment part 142 (hci_event)
                                                   Segment part 30 (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C0E - 00000C0E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciTestTaskID           00000C0E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C0F - 00000C0F (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciGapTaskID            00000C0F        HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C10 - 00000C10 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HCI_Init
                                                   HCI_L2CAPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciL2capTaskID          00000C10        HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C11 - 00000C11 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HCI_Init
                                                   HCI_SMPTaskRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciSmpTaskID            00000C11        HCI_CommandCompleteEvent (hci_event)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000C12 - 00000C12 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HCI_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciExtTaskID            00000C12 
    -------------------------------------------------------------------------
XDATA_ROM_C
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hciCmdTable             
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C25B - 0001C286 (0x2c bytes), align: 0
  Segment part 13.            Intra module refs:   HCI_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init                0001C25B 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C287 - 0001C2B3 (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   HCI_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent        0001C287 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TestAppTaskRegister
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2B4 - 0001C2BD (0xa bytes), align: 0
  Segment part 19.            Intra module refs:   HCI_GAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister     0001C2B4 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2BE - 0001C2C5 (0x8 bytes), align: 0
  Segment part 21.            Intra module refs:   HCI_L2CAPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister   0001C2BE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2C6 - 0001C2CD (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   HCI_GAPTaskRegister
                                                   HCI_L2CAPTaskRegister
                                                   HCI_SMPTaskRegister
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C2CE - 0001C2D7 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   HCI_SMPTaskRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister     0001C2CE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANKED_CODE
  Segment part 26. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ExtTaskRegister     
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000129E - 000012A3 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_Init::?relay        0000129E        osalInitTasks (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012A4 - 000012A9 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ProcessEvent::?relay
                                   000012A4        tasksArr (OSAL_SimpleBLEPeripheral)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_TestAppTaskRegister::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012AA - 000012AF (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_GAPTaskRegister::?relay
                                   000012AA        GAP_Init (gap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012B0 - 000012B5 (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_L2CAPTaskRegister::?relay
                                   000012B0        L2CAP_Init (l2cap_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012B6 - 000012BB (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_SMPTaskRegister::?relay
                                   000012B6        SM_Init (sm_task)
    -------------------------------------------------------------------------
BANK_RELAYS
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HCI_ExtTaskRegister::?relay
                                   
               is not allocated
               not allocated function
    -------------------------------------------------------------------------
XDATA_ROM_C_FLASH
  Segment part 28. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\APP\IAR Systems\Embedded Workbench 6.4\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000091 - 00000095 (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000091        ?call_main (?cmain)
           ?C_EXIT                 00000091 
           ?ROM_MONITOR_NOPS       00000091 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
DOVERLAY
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
ISTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  00000096        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000096 - 0000009E (0x9 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   00000096        __low_level_init (hal_startup)
    -------------------------------------------------------------------------
BDATA_Z
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_Z          
    -------------------------------------------------------------------------
DATA_Z
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000009F - 000000AC (0xe bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           0000009F        Segment part 1 (ll_halt)
    -------------------------------------------------------------------------
IDATA_Z
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000AD - 000000BA (0xe bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          000000AD        myPC (ll)
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_Z          
    -------------------------------------------------------------------------
XDATA_Z
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000BB - 000000CA (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000BB        GATTServApp_TaskID (gattservapp)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   LL_TaskID (ll)
                                                   OSAL_timeSeconds (OSAL_ClockBLE)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   Segment part 10 (gap_peridevmgr)
                                                   Segment part 10 (gap_task)
                                                   Segment part 10 (gapgattserver)
                                                   Segment part 10 (gattservapp)
                                                   Segment part 11 (gap_peridevmgr)
                                                   Segment part 11 (gattservapp)
                                                   Segment part 12 (gap_configmgr)
                                                   Segment part 12 (gattservapp)
                                                   Segment part 13 (gapgattserver)
                                                   Segment part 13 (gattservapp)
                                                   Segment part 14 (gattservapp)
                                                   Segment part 15 (gap_configmgr)
                                                   Segment part 16 (gapgattserver)
                                                   Segment part 18 (gattservapp)
                                                   Segment part 19 (gapgattserver)
                                                   Segment part 6 (hci_data)
                                                   Segment part 6 (l2cap_util)
                                                   Segment part 6 (linkdb)
                                                   Segment part 6 (sm_mgr)
                                                   Segment part 7 (gatt_task)
                                                   Segment part 7 (hci_data)
                                                   Segment part 7 (linkdb)
                                                   Segment part 8 (gatt_task)
                                                   Segment part 8 (hci_data)
                                                   Segment part 8 (ll_scheduler)
                                                   Segment part 8 (sm_pairing)
                                                   Segment part 9 (gap_linkmgr)
                                                   Segment part 9 (gap_peridevmgr)
                                                   Segment part 9 (gatt_server)
                                                   Segment part 9 (gattservapp)
                                                   Segment part 9 (ll_scheduler)
                                                   activePg (osal_snv)
                                                   adcRef (hal_adc)
                                                   advInfo (ll)
                                                   autoSyncWhiteList (gapbondmgr)
                                                   bat_ad_avg (simpleBLEPeripheral)
                                                   bat_ad_buf (simpleBLEPeripheral)
                                                   bat_ad_ct (simpleBLEPeripheral)
                                                   bat_ad_init_finish (simpleBLEPeripheral)
                                                   battCriticalLevel (battservice)
                                                   battLevelClientCharCfg (battservice)
                                                   battServiceCalcCB (battservice)
                                                   battServiceSetupCB (battservice)
                                                   battServiceTeardownCB (battservice)
                                                   bleEvtMask (hci_event)
                                                   bm_list_ptr (osal_bufmgr)
                                                   bonds (gapbondmgr)
                                                   buildInfo (ll)
                                                   cachedTRNGdata (ll_enc)
                                                   cbTimers (osal_cbtimer)
                                                   chanMapUpdate (ll)
                                                   clkDivOnHalt (ll)
                                                   connectionHandle (gapbondmgr)
                                                   ctrlToHostEnable (hci)
                                                   dataPkt (ll_enc)
                                                   dcdcData (ll)
                                                   devInfoSystemId (devinfoservice)
                                                   deviceFeatureSet (ll)
                                                   dmaCfg (hal_uart)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   dmaRdyDly (hal_uart)
                                                   dmaRdyIsr (hal_uart)
                                                   dtmInfo (ll)
                                                   eraseAllBonds (gapbondmgr)
                                                   extendRfRange (ll)
                                                   failF (osal_snv)
                                                   fastTxRespTime (ll)
                                                   gPairStatus (simpleBLEPeripheral)
                                                   gapAutoAdvPrivateAddrChange (gap_configmgr)
                                                   gapBondMgr_TaskID (gapbondmgr)
                                                   gapBond_AutoFail (gapbondmgr)
                                                   gapBond_Bonding (gapbondmgr)
                                                   gapBond_IOCap (gapbondmgr)
                                                   gapBond_MITM (gapbondmgr)
                                                   gapBond_OOBData (gapbondmgr)
                                                   gapBond_OOBDataFlag (gapbondmgr)
                                                   gapBond_Passcode (gapbondmgr)
                                                   gapDeviceAddrMode (gap_configmgr)
                                                   gapPrivateAddrChangeTimeout (gap_configmgr)
                                                   gapProfileRole (gap_configmgr)
                                                   gapProfileState (simpleBLEPeripheral)
                                                   gapRole_AdvChanMap (peripheral)
                                                   gapRole_AdvDirectAddr (peripheral)
                                                   gapRole_AdvDirectType (peripheral)
                                                   gapRole_AdvEventType (peripheral)
                                                   gapRole_AdvFilterPolicy (peripheral)
                                                   gapRole_ConnInterval (peripheral)
                                                   gapRole_ConnSlaveLatency (peripheral)
                                                   gapRole_ConnTimeout (peripheral)
                                                   gapRole_ConnectedDevAddr (peripheral)
                                                   gapRole_IRK (peripheral)
                                                   gapRole_ParamUpdateEnable (peripheral)
                                                   gapRole_RSSIReadRate (peripheral)
                                                   gapRole_SRK (peripheral)
                                                   gapRole_ScanRspData (peripheral)
                                                   gapRole_ScanRspDataLen (peripheral)
                                                   gapRole_SlaveLatency (peripheral)
                                                   gapRole_TaskID (peripheral)
                                                   gapRole_bdAddr (peripheral)
                                                   gapRole_profileRole (peripheral)
                                                   gapRole_signCounter (peripheral)
                                                   gapRole_state (peripheral)
                                                   gapTaskID (gap_task)
                                                   gattTaskID (gatt_task)
                                                   halKeySavedKeys (hal_key)
                                                   halPwrMgtMode (hal_sleep)
                                                   haltDuringRf (ll)
                                                   hciCtrlCmdToken (hci)
                                                   hciExtTaskID (hci_tl)
                                                   hciGapTaskID (hci_tl)
                                                   hciL2capTaskID (hci_tl)
                                                   hciPTMenabled (hci)
                                                   hciSmpTaskID (hci_tl)
                                                   hciTaskID (hci_tl)
                                                   hciTestTaskID (hci_tl)
                                                   isrCfg (hal_uart)
                                                   l2capChannels (l2cap_task)
                                                   l2capFixedChannels (l2cap_task)
                                                   l2capTaskID (l2cap_task)
                                                   llConns (ll)
                                                   llState (ll)
                                                   maxTxPwrForDTM (ll)
                                                   ntcTemp (simpleBLEPeripheral)
                                                   ntcTempAdBandBtm (simpleBLEPeripheral)
                                                   ntcTempAdBandTop (simpleBLEPeripheral)
                                                   ntcTempCnt (simpleBLEPeripheral)
                                                   ntc_ad_avg (simpleBLEPeripheral)
                                                   ntc_ad_buf (simpleBLEPeripheral)
                                                   ntc_ad_ct (simpleBLEPeripheral)
                                                   numHostBufs (hci)
                                                   numWLEntries (phy)
                                                   nvInUse (ll)
                                                   onePktPerEvt (ll)
                                                   osalMemStat (OSAL_Memory)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   ownPublicAddr (ll)
                                                   ownRandomAddr (ll)
                                                   ownSavedPublicAddr (ll)
                                                   pAuthLink (gap_linkmgr)
                                                   pEstLink (gap_linkmgr)
                                                   pGapAdvertState (gap_devmgr)
                                                   pGapBondCB (gapbondmgr)
                                                   pGapRoles_AppCGs (peripheral)
                                                   pGapRoles_ParamUpdateCB (peripheral)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pHciEvtMask (hci_event)
                                                   pPairingParams (sm_pairing)
                                                   paramUpdateNoSuccessOption (peripheral)
                                                   peerInfo (ll)
                                                   performPeriodicTask::NtcMeasCT (simpleBLEPeripheral)
                                                   pfnCentralConnCBs (gap_linkmgr)
                                                   pfnPeripheralCBs (gap_task)
                                                   pfnResponderCBs (sm_pairing)
                                                   pgOff (osal_snv)
                                                   postRfOperations (ll)
                                                   previousLLTimerTick (OSAL_ClockBLE)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   remUsTicks (OSAL_ClockBLE)
                                                   res (simpleBLEPeripheral)
                                                   rfCounters (ll)
                                                   rssiCorrection (ll)
                                                   rxFifoFlowCtrl (ll)
                                                   serverInfoTbl (gatt_server)
                                                   simpleBLEPeripheral_TaskID (simpleBLEPeripheral)
                                                   simpleBLEState (simpleBLEPeripheral)
                                                   simpleProfileChar1 (simpleGATTprofile)
                                                   simpleProfileChar2 (simpleGATTprofile)
                                                   simpleProfileChar3 (simpleGATTprofile)
                                                   simpleProfileChar4 (simpleGATTprofile)
                                                   simpleProfileChar4Config (simpleGATTprofile)
                                                   simpleProfileChar5 (simpleGATTprofile)
                                                   simpleProfile_AppCBs (simpleGATTprofile)
                                                   slOverride (ll)
                                                   smTaskID (sm_task)
                                                   taskEndCause (ll)
                                                   tasksEvents (OSAL_SimpleBLEPeripheral)
                                                   timeMSec (OSAL_ClockBLE)
                                                   timerHead (OSAL_Timers)
                                                   trngCounter (ll)
                                                   uartRxBug (hal_uart)
                                                   verInfo (ll)
                                                   wakeForRF (hal_sleep)
    -------------------------------------------------------------------------
IXDATA_Z
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_Z         
    -------------------------------------------------------------------------
BDATA_I
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
BDATA_ID
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_BDATA_I          
    -------------------------------------------------------------------------
DATA_I
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CB - 000000DD (0x13 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_I           000000CB        halSleepPconValue (hal_sleep)
    -------------------------------------------------------------------------
IDATA_I
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
IDATA_ID
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_I          
    -------------------------------------------------------------------------
PDATA_I
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
PDATA_ID
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_PDATA_I          
    -------------------------------------------------------------------------
XDATA_I
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
XDATA_ID
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DE - 00000106 (0x29 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000DE        Segment part 11 (gapgattserver)
                                                   Segment part 12 (gap_peridevmgr)
                                                   Segment part 13 (gap_configmgr)
                                                   Segment part 14 (gapgattserver)
                                                   Segment part 17 (gapgattserver)
                                                   Segment part 20 (gapgattserver)
                                                   Segment part 22 (gapgattserver)
                                                   Segment part 24 (gapgattserver)
                                                   Segment part 6 (gap_peridevmgr)
                                                   Segment part 6 (sm_rsppairing)
                                                   Segment part 8 (gapgattserver)
                                                   activeTaskID (OSAL)
                                                   advertData (simpleBLEPeripheral)
                                                   appTaskID (gattservapp)
                                                   attDeviceName (simpleBLEPeripheral)
                                                   baseTaskID (osal_cbtimer)
                                                   battAttrTbl (battservice)
                                                   battLevel (battservice)
                                                   battLevelProps (battservice)
                                                   battMaxLevel (battservice)
                                                   battMinLevel (battservice)
                                                   battServiceAdcCh (battservice)
                                                   gapAppTaskID (gap_configmgr)
                                                   gapBond_AutoFailReason (gapbondmgr)
                                                   gapBond_KeyDistList (gapbondmgr)
                                                   gapBond_KeySize (gapbondmgr)
                                                   gapBond_PairingMode (gapbondmgr)
                                                   gapRole_AdvEnabled (peripheral)
                                                   gapRole_AdvertData (peripheral)
                                                   gapRole_AdvertDataLen (peripheral)
                                                   gapRole_AdvertOffTime (peripheral)
                                                   gapRole_ConnectionHandle (peripheral)
                                                   gapRole_MaxConnInterval (peripheral)
                                                   gapRole_MinConnInterval (peripheral)
                                                   gapRole_TimeoutMultiplier (peripheral)
                                                   gapUnwantedTaskID (gap_task)
                                                   hidReportRefBattLevel (battservice)
                                                   performPeriodicTask::BattMeasCT (simpleBLEPeripheral)
                                                   registeredKeysTaskID (OnBoard)
                                                   reqTaskId (gatt_server)
                                                   simpleBLEPeripheral_BondMgrCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_PeripheralCBs (simpleBLEPeripheral)
                                                   simpleBLEPeripheral_SimpleProfileCBs (simpleBLEPeripheral)
                                                   simpleProfileAttrTbl (simpleGATTprofile)
                                                   simpleProfileChar1Props (simpleGATTprofile)
                                                   simpleProfileChar1UserDesp (simpleGATTprofile)
                                                   simpleProfileChar2Props (simpleGATTprofile)
                                                   simpleProfileChar2UserDesp (simpleGATTprofile)
                                                   simpleProfileChar3Props (simpleGATTprofile)
                                                   simpleProfileChar3UserDesp (simpleGATTprofile)
                                                   simpleProfileChar4Props (simpleGATTprofile)
                                                   simpleProfileChar4UserDesp (simpleGATTprofile)
                                                   simpleProfileChar5Props (simpleGATTprofile)
                                                   simpleProfileChar5UserDesp (simpleGATTprofile)
                                                   taskEndCauses (ll)
                                                   taskErrorEndCauses (ll)
    -------------------------------------------------------------------------
IXDATA_I
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
IXDATA_ID
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107, align: 0
  Segment part 37.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000107 - 0000011C (0x16 bytes), align: 0
  Segment part 38.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000107 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSTACK_START           
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
EXT_STACK
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000011D - 00000122 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000011D        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000120 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PSP              
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000123 - 00000128 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              00000123        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000129 - 0000012B (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        00000129        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
PDATA_Z
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       
    -------------------------------------------------------------------------
CSTART
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __disable_infineon_pflash
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000012C - 0000012E (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTPollISR (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   ProcessPairStateCB (simpleBLEPeripheral)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   RF_NormalIsr (ll_isr)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 100 (gattservapp)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 102 (gap_linkmgr)
                                                   Segment part 103 (gatt_server)
                                                   Segment part 105 (gap_linkmgr)
                                                   Segment part 107 (gap_linkmgr)
                                                   Segment part 107 (gatt_server)
                                                   Segment part 108 (gattservapp)
                                                   Segment part 108 (l2cap_util)
                                                   Segment part 109 (gattservapp)
                                                   Segment part 114 (gattservapp)
                                                   Segment part 114 (hci_event)
                                                   Segment part 115 (hci_event)
                                                   Segment part 122 (hci_event)
                                                   Segment part 125 (gattservapp)
                                                   Segment part 129 (gattservapp)
                                                   Segment part 13 (hci_data)
                                                   Segment part 130 (gattservapp)
                                                   Segment part 131 (gattservapp)
                                                   Segment part 132 (gattservapp)
                                                   Segment part 133 (hci_event)
                                                   Segment part 135 (hci_event)
                                                   Segment part 137 (hci_event)
                                                   Segment part 138 (gattservapp)
                                                   Segment part 139 (gattservapp)
                                                   Segment part 144 (gattservapp)
                                                   Segment part 146 (att_util)
                                                   Segment part 146 (gattservapp)
                                                   Segment part 149 (gattservapp)
                                                   Segment part 15 (sm_rsppairing)
                                                   Segment part 151 (hci_event)
                                                   Segment part 152 (att_util)
                                                   Segment part 152 (hci_event)
                                                   Segment part 16 (sm_rsppairing)
                                                   Segment part 168 (att_util)
                                                   Segment part 178 (gattservapp)
                                                   Segment part 18 (hci_data)
                                                   Segment part 18 (hci_event)
                                                   Segment part 181 (att_util)
                                                   Segment part 181 (gattservapp)
                                                   Segment part 185 (gattservapp)
                                                   Segment part 19 (l2cap_util)
                                                   Segment part 20 (hci_data)
                                                   Segment part 20 (smp)
                                                   Segment part 22 (gatt_task)
                                                   Segment part 23 (sm_mgr)
                                                   Segment part 24 (l2cap_util)
                                                   Segment part 25 (l2cap_util)
                                                   Segment part 26 (sm_mgr)
                                                   Segment part 27 (gap_linkmgr)
                                                   Segment part 31 (linkdb)
                                                   Segment part 34 (att_util)
                                                   Segment part 38 (smp)
                                                   Segment part 39 (hci_event)
                                                   Segment part 40 (gap_linkmgr)
                                                   Segment part 40 (gap_peridevmgr)
                                                   Segment part 41 (gap_linkmgr)
                                                   Segment part 46 (gap_peridevmgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 48 (hci_event)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 50 (att_util)
                                                   Segment part 50 (gap_configmgr)
                                                   Segment part 57 (gattservapp)
                                                   Segment part 59 (sm_mgr)
                                                   Segment part 60 (gap_linkmgr)
                                                   Segment part 61 (gatt_server)
                                                   Segment part 63 (gattservapp)
                                                   Segment part 64 (att_util)
                                                   Segment part 64 (gatt_server)
                                                   Segment part 64 (sm_mgr)
                                                   Segment part 65 (gatt_server)
                                                   Segment part 65 (sm_rsppairing)
                                                   Segment part 66 (gattservapp)
                                                   Segment part 67 (att_util)
                                                   Segment part 68 (gap_linkmgr)
                                                   Segment part 69 (gap_configmgr)
                                                   Segment part 69 (gap_linkmgr)
                                                   Segment part 70 (gap_linkmgr)
                                                   Segment part 70 (l2cap_util)
                                                   Segment part 71 (gap_linkmgr)
                                                   Segment part 71 (sm_rsppairing)
                                                   Segment part 72 (sm_pairing)
                                                   Segment part 74 (gap_linkmgr)
                                                   Segment part 74 (sm_pairing)
                                                   Segment part 75 (sm_rsppairing)
                                                   Segment part 77 (hci_event)
                                                   Segment part 78 (gattservapp)
                                                   Segment part 78 (hci_event)
                                                   Segment part 79 (gattservapp)
                                                   Segment part 81 (sm_mgr)
                                                   Segment part 82 (gattservapp)
                                                   Segment part 83 (hci_event)
                                                   Segment part 83 (sm_mgr)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 84 (gap_linkmgr)
                                                   Segment part 84 (gattservapp)
                                                   Segment part 85 (gap_linkmgr)
                                                   Segment part 85 (gatt_server)
                                                   Segment part 85 (hci_event)
                                                   Segment part 85 (sm_mgr)
                                                   Segment part 87 (gattservapp)
                                                   Segment part 88 (att_util)
                                                   Segment part 88 (gattservapp)
                                                   Segment part 88 (sm_mgr)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 90 (gattservapp)
                                                   Segment part 94 (gap_linkmgr)
                                                   Segment part 94 (ll_timer2)
                                                   Segment part 95 (gatt_server)
                                                   Segment part 96 (gattservapp)
                                                   Segment part 97 (gap_peridevmgr)
                                                   Segment part 99 (gatt_server)
                                                   Segment part 99 (gattservapp)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   bubble (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrSlaveSecurityReq (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTServMsg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_SetupGAP (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halGetJoyKeyInput (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   halUart0TxIsr (hal_uart)
                                                   halUart1TxIsr (hal_uart)
                                                   hciTxDataBufferReset (hci_data)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConnCleanup (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetNextDataChan (ll_common)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalClockUpdate (OSAL_ClockBLE)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   phyFindWlEntry (phy)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   read_temperature (simpleBLEPeripheral)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)
                                                   xor_128 (sm_mgr)
    -------------------------------------------------------------------------
PSP
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PSP                    
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000018 - 00000019 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000018        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 101 (gattservapp)
                                                   Segment part 155 (hci_event)
                                                   Segment part 34 (ll_timer2)
                                                   Segment part 40 (ll_timer2)
                                                   Segment part 45 (sm_mgr)
                                                   Segment part 47 (sm_mgr)
                                                   Segment part 55 (gattservapp)
                                                   Segment part 56 (gattservapp)
                                                   Segment part 61 (gatt_server)
                                                   Segment part 75 (hci)
                                                   Segment part 78 (sm_mgr)
                                                   Segment part 82 (hci)
                                                   Segment part 90 (gattservapp)
                                                   Segment part 94 (gattservapp)
                                                   Segment part 95 (hci)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llDivide31By16To16 (ll_math)
                                                   llEventInRange (ll_common)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPostRfOps (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memset (?memset)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   writeItem (osal_snv)
                                                   xferItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000012F - 0000014C (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               0000012F        ?call_main (?cmain)
           ?BRET_FF                00000135        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   GAPRole_TerminateConnection (peripheral)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcSetReference (hal_adc)
                                                   HalAesInit (hal_aes)
                                                   HalDmaInit (hal_dma)
                                                   HalDriverInit (hal_drivers)
                                                   HalFlashErase (hal_flash)
                                                   HalKeyEnterSleep (hal_key)
                                                   HalKeyExitSleep (hal_key)
                                                   HalKeyInit (hal_key)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedExitSleep (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalUARTInit (hal_uart)
                                                   HalUARTInitISR (hal_uart)
                                                   HalUARTIsrDMA (hal_uart)
                                                   HalUARTPoll (hal_uart)
                                                   HalUART_DMAIsrDMA (hal_uart)
                                                   Hal_Init (hal_drivers)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   L2CAP_RegisterApp (l2cap_if)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   PHY_CommitRxFifo (phy)
                                                   PHY_DeallocateRxFifo (phy)
                                                   PHY_RetryRxFifo (phy)
                                                   PHY_RetryTxFifo (phy)
                                                   SM_ResponderInit (sm_rsppairing)
                                                   Segment part 10 (gap_devmgr)
                                                   Segment part 10 (hci_event)
                                                   Segment part 11 (gatt_task)
                                                   Segment part 128 (hci)
                                                   Segment part 15 (gap_task)
                                                   Segment part 150 (ll)
                                                   Segment part 154 (phy)
                                                   Segment part 18 (ll_advEndCauses)
                                                   Segment part 23 (att_util)
                                                   Segment part 23 (gatt_server)
                                                   Segment part 23 (hci_tl)
                                                   Segment part 23 (linkdb)
                                                   Segment part 29 (ll_enc)
                                                   Segment part 31 (gap_peridevmgr)
                                                   Segment part 33 (smp)
                                                   Segment part 37 (ll_timer2)
                                                   Segment part 37 (sm_mgr)
                                                   Segment part 42 (gap_configmgr)
                                                   Segment part 42 (gapgattserver)
                                                   Segment part 42 (ll_scheduler)
                                                   Segment part 46 (sm_pairing)
                                                   Segment part 51 (gattservapp)
                                                   Segment part 52 (l2cap_util)
                                                   Segment part 54 (gatt_server)
                                                   Segment part 61 (ll_common)
                                                   Segment part 70 (ll_timer2)
                                                   Segment part 78 (gap_linkmgr)
                                                   SimpleProfile_RegisterAppCBs (simpleGATTprofile)
                                                   aesDmaInit (hal_aes)
                                                   bm_desc_from_payload (osal_bufmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapRole_HandleParamUpdateNoSuccess (peripheral)
                                                   gapValidADType (gap_devmgr)
                                                   halRestoreSleepLevel (hal_sleep)
                                                   halSetSleepMode (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   l2capHandleRxError (l2cap_util)
                                                   llInitTimer2 (ll_timer2)
                                                   llSlaveEvt_TaskAbort (ll_slaveEndCauses)
                                                   llUnexpectedEndCauseHandler (ll_errorEndCauses)
                                                   main (SimpleBLEPeripheral_Main)
                                                   memset (?memset)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osal_init_system (OSAL)
                                                   osal_int_disable (OSAL)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_pwrmgr_device (OSAL_PwrMgr)
                                                   osal_pwrmgr_init (OSAL_PwrMgr)
                                                   osal_rand (OSAL)
                                                   osal_snv_init (osal_snv)
                                                   simpleBLEPeripheral_ProcessOSALMsg (simpleBLEPeripheral)
                                                   strlen (?strlen)
           ?BDISPATCH_FF           00000138        ATT_BuildErrorRsp::?relay (att_util)
                                                   ATT_BuildExchangeMTURsp::?relay (att_util)
                                                   ATT_BuildFindByTypeValueRsp::?relay (att_util)
                                                   ATT_BuildFindInfoRsp::?relay (att_util)
                                                   ATT_BuildHandleValueInd::?relay (att_util)
                                                   ATT_BuildPrepareWriteRsp::?relay (att_util)
                                                   ATT_BuildReadBlobRsp::?relay (att_util)
                                                   ATT_BuildReadByGrpTypeRsp::?relay (att_util)
                                                   ATT_BuildReadByTypeRsp::?relay (att_util)
                                                   ATT_BuildReadMultiRsp::?relay (att_util)
                                                   ATT_BuildReadRsp::?relay (att_util)
                                                   ATT_CompareUUID::?relay (att_util)
                                                   ATT_ConvertUUIDto128::?relay (att_util)
                                                   ATT_ErrorRsp::?relay (att_server)
                                                   ATT_ExchangeMTURsp::?relay (att_server)
                                                   ATT_ExecuteWriteRsp::?relay (att_server)
                                                   ATT_FindByTypeValueRsp::?relay (att_server)
                                                   ATT_FindInfoRsp::?relay (att_server)
                                                   ATT_HandleValueInd::?relay (att_server)
                                                   ATT_HandleValueNoti::?relay (att_server)
                                                   ATT_ParseExchangeMTUReq::?relay (att_util)
                                                   ATT_ParseExecuteWriteReq::?relay (att_util)
                                                   ATT_ParseFindByTypeValueReq::?relay (att_util)
                                                   ATT_ParseFindInfoReq::?relay (att_util)
                                                   ATT_ParsePacket::?relay (att_util)
                                                   ATT_ParsePrepareWriteReq::?relay (att_util)
                                                   ATT_ParseReadBlobReq::?relay (att_util)
                                                   ATT_ParseReadByTypeReq::?relay (att_util)
                                                   ATT_ParseReadMultiReq::?relay (att_util)
                                                   ATT_ParseReadReq::?relay (att_util)
                                                   ATT_ParseWriteReq::?relay (att_util)
                                                   ATT_PrepareWriteRsp::?relay (att_server)
                                                   ATT_ReadBlobRsp::?relay (att_server)
                                                   ATT_ReadByGrpTypeRsp::?relay (att_server)
                                                   ATT_ReadByTypeRsp::?relay (att_server)
                                                   ATT_ReadMultiRsp::?relay (att_server)
                                                   ATT_ReadRsp::?relay (att_server)
                                                   ATT_WriteRsp::?relay (att_server)
                                                   Batt_GetParameter::?relay (battservice)
                                                   Batt_MeasLevel::?relay (battservice)
                                                   DevInfo_SetParameter::?relay (devinfoservice)
                                                   GAPBondMgr_Init::?relay (gapbondmgr)
                                                   GAPBondMgr_LinkEst::?relay (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent::?relay (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg::?relay (gapbondmgr)
                                                   GAPBondMgr_Register::?relay (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr::?relay (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd::?relay (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg::?relay (gapbondmgr)
                                                   GAPRole_GetParameter::?relay (peripheral)
                                                   GAPRole_Init::?relay (peripheral)
                                                   GAPRole_ProcessEvent::?relay (peripheral)
                                                   GAPRole_SendUpdateParam::?relay (peripheral)
                                                   GAPRole_SetParameter::?relay (peripheral)
                                                   GAPRole_StartDevice::?relay (peripheral)
                                                   GAPRole_TerminateConnection::?relay (peripheral)
                                                   GAP_Authenticate::?relay (gap_linkmgr)
                                                   GAP_Bond::?relay (gap_linkmgr)
                                                   GAP_DeviceInit::?relay (gap)
                                                   GAP_EndDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_GetParamValue::?relay (gap_configmgr)
                                                   GAP_Init::?relay (gap_task)
                                                   GAP_MakeDiscoverable::?relay (gap_peridevmgr)
                                                   GAP_NumActiveConnections::?relay (gap_task)
                                                   GAP_ParamsInit::?relay (gap_configmgr)
                                                   GAP_PasscodeUpdate::?relay (gap_linkmgr)
                                                   GAP_PeriDevMgrInit::?relay (gap_peridevmgr)
                                                   GAP_ProcessEvent::?relay (gap_task)
                                                   GAP_RegisterForHCIMsgs::?relay (gap_task)
                                                   GAP_ResolvePrivateAddr::?relay (gap_devmgr)
                                                   GAP_SecParamsInit::?relay (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest::?relay (gap_perilinkmgr)
                                                   GAP_SetParamValue::?relay (gap_configmgr)
                                                   GAP_Signable::?relay (gap_linkmgr)
                                                   GAP_TerminateAuth::?relay (gap_linkmgr)
                                                   GAP_TerminateLinkReq::?relay (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData::?relay (gap_peridevmgr)
                                                   GATTServApp_Init::?relay (gattservapp)
                                                   GATTServApp_InitCharCfg::?relay (gattservapp)
                                                   GATTServApp_ProcessEvent::?relay (gattservapp)
                                                   GATTServApp_ReadAttr::?relay (gattservapp)
                                                   GATTServApp_ReadCharCfg::?relay (gattservapp)
                                                   GATTServApp_RegisterForMsg::?relay (gattservapp)
                                                   GATTServApp_SendServiceChangedInd::?relay (gattservapp)
                                                   GATTServApp_UpdateCharCfg::?relay (gattservapp)
                                                   GATTServApp_WriteAttr::?relay (gattservapp)
                                                   GATT_FindHandle::?relay (gatt_server)
                                                   GATT_FindHandleUUID::?relay (gatt_server)
                                                   GATT_FindNextAttr::?relay (gatt_server)
                                                   GATT_Indication::?relay (gatt_server)
                                                   GATT_Init::?relay (gatt_task)
                                                   GATT_InitServer::?relay (gatt_server)
                                                   GATT_Notification::?relay (gatt_server)
                                                   GATT_ProcessEvent::?relay (gatt_task)
                                                   GATT_RegisterForReq::?relay (gatt_server)
                                                   GATT_ServiceChangedInd::?relay (gatt_server)
                                                   GATT_ServiceNumAttrs::?relay (gatt_server)
                                                   GATT_VerifyReadPermissions::?relay (gatt_server)
                                                   GATT_VerifyWritePermissions::?relay (gatt_server)
                                                   GGS_SetParameter::?relay (gapgattserver)
                                                   HCI_CommandCompleteEvent::?relay (hci_event)
                                                   HCI_CommandStatusEvent::?relay (hci_event)
                                                   HCI_DataBufferOverflowEvent::?relay (hci_event)
                                                   HCI_DisconnectCmd::?relay (hci)
                                                   HCI_GAPTaskRegister::?relay (hci_tl)
                                                   HCI_Init::?relay (hci_tl)
                                                   HCI_L2CAPTaskRegister::?relay (hci_tl)
                                                   HCI_LE_AddWhiteListCmd::?relay (hci)
                                                   HCI_LE_ClearWhiteListCmd::?relay (hci)
                                                   HCI_LE_LtkReqNegReplyCmd::?relay (hci)
                                                   HCI_LE_LtkReqReplyCmd::?relay (hci)
                                                   HCI_LE_RandCmd::?relay (hci)
                                                   HCI_LE_ReadBufSizeCmd::?relay (hci)
                                                   HCI_LE_SetAdvDataCmd::?relay (hci)
                                                   HCI_LE_SetAdvEnableCmd::?relay (hci)
                                                   HCI_LE_SetAdvParamCmd::?relay (hci)
                                                   HCI_LE_SetRandomAddressCmd::?relay (hci)
                                                   HCI_LE_SetScanRspDataCmd::?relay (hci)
                                                   HCI_NumOfCompletedPacketsEvent::?relay (hci_event)
                                                   HCI_ProcessEvent::?relay (hci_tl)
                                                   HCI_ReadBDADDRCmd::?relay (hci)
                                                   HCI_ReadRssiCmd::?relay (hci)
                                                   HCI_SMPTaskRegister::?relay (hci_tl)
                                                   HCI_SendCommandCompleteEvent::?relay (hci_event)
                                                   HCI_SendCommandStatusEvent::?relay (hci_event)
                                                   HCI_SendControllerToHostEvent::?relay (hci_event)
                                                   HCI_SendDataPkt::?relay (hci)
                                                   HCI_TxDataBufferInsert::?relay (hci_data)
                                                   HCI_TxDataSend::?relay (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent::?relay (hci_event)
                                                   HCI_bm_alloc::?relay (hci)
                                                   HalAdcInit::?relay (hal_adc)
                                                   HalAdcRead::?relay (hal_adc)
                                                   HalAdcSetReference::?relay (hal_adc)
                                                   HalAesInit::?relay (hal_aes)
                                                   HalDmaInit::?relay (hal_dma)
                                                   HalDriverInit::?relay (hal_drivers)
                                                   HalFlashErase::?relay (hal_flash)
                                                   HalFlashRead::?relay (hal_flash)
                                                   HalFlashWrite::?relay (hal_flash)
                                                   HalKeyConfig::?relay (hal_key)
                                                   HalKeyEnterSleep::?relay (hal_key)
                                                   HalKeyExitSleep::?relay (hal_key)
                                                   HalKeyInit::?relay (hal_key)
                                                   HalKeyPoll::?relay (hal_key)
                                                   HalKeyRead::?relay (hal_key)
                                                   HalLcdWriteString::?relay (hal_lcd)
                                                   HalLcdWriteStringValue::?relay (hal_lcd)
                                                   HalLedExitSleep::?relay (hal_led)
                                                   HalLedSet::?relay (hal_led)
                                                   HalUARTBusyDMA::?relay (hal_uart)
                                                   HalUARTInit::?relay (hal_uart)
                                                   HalUARTInitDMA::?relay (hal_uart)
                                                   HalUARTInitISR::?relay (hal_uart)
                                                   HalUARTIsrDMA::?relay (hal_uart)
                                                   HalUARTPoll::?relay (hal_uart)
                                                   HalUARTPollDMA::?relay (hal_uart)
                                                   HalUARTPollISR::?relay (hal_uart)
                                                   HalUARTRxAvailDMA::?relay (hal_uart)
                                                   HalUART_DMAIsrDMA::?relay (hal_uart)
                                                   Hal_Init::?relay (hal_drivers)
                                                   Hal_ProcessEvent::?relay (hal_drivers)
                                                   Hal_ProcessPoll::?relay (hal_drivers)
                                                   InitBoard::?relay (OnBoard)
                                                   L2CAP_BuildCmdReject::?relay (l2cap_util)
                                                   L2CAP_CmdReject::?relay (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq::?relay (l2cap_if)
                                                   L2CAP_Init::?relay (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq::?relay (l2cap_util)
                                                   L2CAP_ProcessEvent::?relay (l2cap_task)
                                                   L2CAP_RegisterApp::?relay (l2cap_if)
                                                   L2CAP_SendData::?relay (l2cap_if)
                                                   L2CAP_bm_alloc::?relay (l2cap_util)
                                                   LL_AddWhiteListDevice::?relay (ll)
                                                   LL_ClearWhiteList::?relay (ll)
                                                   LL_ConnActive::?relay (ll)
                                                   LL_ConnParamUpdateCback::?relay (hci_event)
                                                   LL_ConnectionCompleteCback::?relay (hci_event)
                                                   LL_CtrlToHostFlowControl::?relay (ll)
                                                   LL_Disconnect::?relay (ll)
                                                   LL_DisconnectCback::?relay (hci_event)
                                                   LL_ENC_AES128_Encrypt::?relay (ll_enc)
                                                   LL_ENC_Decrypt::?relay (ll_enc)
                                                   LL_ENC_DecryptMsg::?relay (ll_enc)
                                                   LL_ENC_Encrypt::?relay (ll_enc)
                                                   LL_ENC_EncryptMsg::?relay (ll_enc)
                                                   LL_ENC_GenDeviceIV::?relay (ll_enc)
                                                   LL_ENC_GenDeviceSKD::?relay (ll_enc)
                                                   LL_ENC_GenerateMIC::?relay (ll_enc)
                                                   LL_ENC_GeneratePseudoRandNum::?relay (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum::?relay (ll_enc)
                                                   LL_ENC_InitAesDMA::?relay (ll_enc)
                                                   LL_ENC_LoadEmptyIV::?relay (ll_enc)
                                                   LL_ENC_MoveData::?relay (ll_enc)
                                                   LL_ENC_ReverseBytes::?relay (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback::?relay (hci)
                                                   LL_EXT_SetRxGainCback::?relay (hci)
                                                   LL_EXT_SetTxPowerCback::?relay (hci)
                                                   LL_EncChangeCback::?relay (hci_event)
                                                   LL_EncKeyRefreshCback::?relay (hci_event)
                                                   LL_EncLtkNegReply::?relay (ll)
                                                   LL_EncLtkReply::?relay (ll)
                                                   LL_EncLtkReqCback::?relay (hci_event)
                                                   LL_Encrypt::?relay (ll)
                                                   LL_Init::?relay (ll)
                                                   LL_ProcessEvent::?relay (ll)
                                                   LL_PseudoRand::?relay (ll)
                                                   LL_Rand::?relay (ll)
                                                   LL_RandCback::?relay (hci)
                                                   LL_ReadBDADDR::?relay (ll)
                                                   LL_ReadRemoteVersionInfoCback::?relay (hci_event)
                                                   LL_ReadRssi::?relay (ll)
                                                   LL_Reset::?relay (ll)
                                                   LL_RxDataCompleteCback::?relay (hci_data)
                                                   LL_RxReqDataBufCback::?relay (hci_data)
                                                   LL_SetAdvControl::?relay (ll)
                                                   LL_SetAdvData::?relay (ll)
                                                   LL_SetAdvParam::?relay (ll)
                                                   LL_SetRandomAddress::?relay (ll)
                                                   LL_SetScanRspData::?relay (ll)
                                                   LL_TxData::?relay (ll)
                                                   LL_TxDataCompleteCback::?relay (hci_data)
                                                   OnBoard_KeyCallback::?relay (OnBoard)
                                                   OnBoard_SendKeys::?relay (OnBoard)
                                                   Onboard_rand::?relay (OnBoard)
                                                   PHY_AddWlEntry::?relay (phy)
                                                   PHY_ClearAllRegsAndFifos::?relay (phy)
                                                   PHY_ClearBlacklist::?relay (phy)
                                                   PHY_ClearBlacklistIndex::?relay (phy)
                                                   PHY_ClearSavedWhiteList::?relay (phy)
                                                   PHY_ClearWhitelist::?relay (phy)
                                                   PHY_CommitRxFifo::?relay (phy)
                                                   PHY_ConfigWhitener::?relay (phy)
                                                   PHY_ConfigureAppendRfStatus::?relay (phy)
                                                   PHY_ConfigureFifoDataProcessing::?relay (phy)
                                                   PHY_ConfigureMD::?relay (phy)
                                                   PHY_DeallocateRxFifo::?relay (phy)
                                                   PHY_GetAdvChans::?relay (phy)
                                                   PHY_GetEndCause::?relay (phy)
                                                   PHY_Init::?relay (phy)
                                                   PHY_InitSeqStat::?relay (phy)
                                                   PHY_Reset::?relay (phy)
                                                   PHY_RetryRxFifo::?relay (phy)
                                                   PHY_RetryTxFifo::?relay (phy)
                                                   PHY_SetAdvChans::?relay (phy)
                                                   PHY_SetAdvWlPolicy::?relay (phy)
                                                   PHY_SetBlacklistIndex::?relay (phy)
                                                   PHY_SetCRCInit::?relay (phy)
                                                   PHY_SetEndConnection::?relay (phy)
                                                   PHY_SetFifoConfig::?relay (phy)
                                                   PHY_SetMaxNack::?relay (phy)
                                                   PHY_SetOwnAddr::?relay (phy)
                                                   PHY_SetPeerAddr::?relay (phy)
                                                   PHY_SetRfFreq::?relay (phy)
                                                   PHY_SetSyncWord::?relay (phy)
                                                   ProcessPairStateCB::?relay (simpleBLEPeripheral)
                                                   ProcessPasscodeCB::?relay (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr::?relay (sm_mgr)
                                                   SM_GenerateAuthenSig::?relay (sm_mgr)
                                                   SM_Init::?relay (sm_task)
                                                   SM_PasskeyUpdate::?relay (sm_pairing)
                                                   SM_ProcessEvent::?relay (sm_task)
                                                   SM_ResolveRandomAddrs::?relay (sm_mgr)
                                                   SM_ResponderInit::?relay (sm_rsppairing)
                                                   SM_StartPairing::?relay (sm_pairing)
                                                   SM_VerifyAuthenSig::?relay (sm_mgr)
                                                   SimpleBLEPeripheral_Init::?relay (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent::?relay (simpleBLEPeripheral)
                                                   SimpleProfile_GetParameter::?relay (simpleGATTprofile)
                                                   SimpleProfile_RegisterAppCBs::?relay (simpleGATTprofile)
                                                   SimpleProfile_SetParameter::?relay (simpleGATTprofile)
                                                   _itoa::?relay (OnBoard)
                                                   _ltoa::?relay (OSAL)
                                                   aesDmaInit::?relay (hal_aes)
                                                   attSendMsg::?relay (att_util)
                                                   battMeasure::?relay (battservice)
                                                   bm_desc_from_payload::?relay (osal_bufmgr)
                                                   bubble::?relay (simpleBLEPeripheral)
                                                   cleanErasedPage::?relay (osal_snv)
                                                   compactPage::?relay (osal_snv)
                                                   disconnectNext::?relay (gap_linkmgr)
                                                   erasePage::?relay (osal_snv)
                                                   findItem::?relay (osal_snv)
                                                   findOffset::?relay (osal_snv)
                                                   gapAddAddrAdj::?relay (gap_configmgr)
                                                   gapBondMgrAddBond::?relay (gapbondmgr)
                                                   gapBondMgrAuthenticate::?relay (gapbondmgr)
                                                   gapBondMgrBondReq::?relay (gapbondmgr)
                                                   gapBondMgrBondTotal::?relay (gapbondmgr)
                                                   gapBondMgrChangeState::?relay (gapbondmgr)
                                                   gapBondMgrEraseAllBondings::?relay (gapbondmgr)
                                                   gapBondMgrEraseBonding::?relay (gapbondmgr)
                                                   gapBondMgrFindAddr::?relay (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrFindEmpty::?relay (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr::?relay (gapbondmgr)
                                                   gapBondMgrGetPublicAddr::?relay (gapbondmgr)
                                                   gapBondMgrGetStateFlags::?relay (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem::?relay (gapbondmgr)
                                                   gapBondMgrReadBonds::?relay (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr::?relay (gapbondmgr)
                                                   gapBondMgrSendServiceChange::?relay (gapbondmgr)
                                                   gapBondMgrSlaveSecurityReq::?relay (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_ProcessGATTMsg::?relay (gapbondmgr)
                                                   gapBondMgr_ProcessGATTServMsg::?relay (gapbondmgr)
                                                   gapBondMgr_ProcessOSALMsg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg::?relay (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList::?relay (gapbondmgr)
                                                   gapBondSetupPrivFlag::?relay (gapbondmgr)
                                                   gapDetermineAddrType::?relay (gap_configmgr)
                                                   gapFindADType::?relay (gap_devmgr)
                                                   gapFreeAdvertState::?relay (gap_peridevmgr)
                                                   gapFreeAuthLink::?relay (gap_linkmgr)
                                                   gapFreeEstLink::?relay (gap_linkmgr)
                                                   gapGetDevAddress::?relay (gap_configmgr)
                                                   gapGetDevAddressMode::?relay (gap_configmgr)
                                                   gapGetIRK::?relay (gap_configmgr)
                                                   gapGetSRK::?relay (gap_configmgr)
                                                   gapGetSignCounter::?relay (gap_configmgr)
                                                   gapIncSignCounter::?relay (gap_configmgr)
                                                   gapIsAdvertising::?relay (gap_devmgr)
                                                   gapPairingCompleteCB::?relay (gap_linkmgr)
                                                   gapPasskeyNeededCB::?relay (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt::?relay (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt::?relay (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt::?relay (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt::?relay (gap_task)
                                                   gapProcessNewAddr::?relay (gap_configmgr)
                                                   gapProcessOSALMsg::?relay (gap_task)
                                                   gapProcessRandomAddrComplete::?relay (gap_configmgr)
                                                   gapReadBD_ADDRStatus::?relay (gap_configmgr)
                                                   gapReadBufSizeCmdStatus::?relay (gap_configmgr)
                                                   gapRegisterPeripheral::?relay (gap_task)
                                                   gapRole_HandleParamUpdateNoSuccess::?relay (peripheral)
                                                   gapRole_ProcessGAPMsg::?relay (peripheral)
                                                   gapRole_ProcessOSALMsg::?relay (peripheral)
                                                   gapRole_SetupGAP::?relay (peripheral)
                                                   gapRole_startConnUpdate::?relay (peripheral)
                                                   gapSendBondCompleteEvent::?relay (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent::?relay (gap_configmgr)
                                                   gapSendLinkUpdateEvent::?relay (gap_linkmgr)
                                                   gapSendMakeDiscEvent::?relay (gap_peridevmgr)
                                                   gapSendPairingReqEvent::?relay (gap_linkmgr)
                                                   gapSetAdvParams::?relay (gap_peridevmgr)
                                                   gapSetAdvParamsStatus::?relay (gap_peridevmgr)
                                                   gapUpdateConnSignCounter::?relay (gap_configmgr)
                                                   gapValidADType::?relay (gap_devmgr)
                                                   gapWriteAdvDataStatus::?relay (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus::?relay (gap_peridevmgr)
                                                   gattFindServerInfo::?relay (gatt_server)
                                                   gattGetServerStatus::?relay (gatt_server)
                                                   gattNotifyEvent::?relay (gatt_task)
                                                   gattProcessExchangeMTUReq::?relay (gatt_server)
                                                   gattProcessExecuteWriteReq::?relay (gatt_server)
                                                   gattProcessFindByTypeValueReq::?relay (gatt_server)
                                                   gattProcessFindInfoReq::?relay (gatt_server)
                                                   gattProcessReadByGrpTypeReq::?relay (gatt_server)
                                                   gattProcessReadByTypeReq::?relay (gatt_server)
                                                   gattProcessReadMultiReq::?relay (gatt_server)
                                                   gattProcessReadReq::?relay (gatt_server)
                                                   gattProcessRxData::?relay (gatt_task)
                                                   gattProcessWriteReq::?relay (gatt_server)
                                                   gattRegisterServer::?relay (gatt_task)
                                                   gattServApp_FindAuthorizeAttrCB::?relay (gattservapp)
                                                   gattServApp_FindCharCfgItem::?relay (gattservapp)
                                                   gattServApp_FindPrepareWriteQ::?relay (gattservapp)
                                                   gattServApp_FindServiceCBs::?relay (gattservapp)
                                                   gattServApp_HandleConnStatusCB::?relay (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq::?relay (gattservapp)
                                                   gattServApp_ProcessMsg::?relay (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq::?relay (gattservapp)
                                                   gattServApp_ProcessReadMultiReq::?relay (gattservapp)
                                                   gattServApp_ProcessWriteReq::?relay (gattservapp)
                                                   gattServApp_SetNumPrepareWrites::?relay (gattservapp)
                                                   gattServerHandleConnStatusCB::?relay (gatt_server)
                                                   gattServerHandleTimerCB::?relay (gatt_server)
                                                   gattServerProcessMsgCB::?relay (gatt_server)
                                                   gattServiceLastHandle::?relay (gatt_server)
                                                   gattStartTimer::?relay (gatt_task)
                                                   gattStopTimer::?relay (gatt_task)
                                                   generate_subkey::?relay (sm_mgr)
                                                   ggs_SetAttrWPermit::?relay (gapgattserver)
                                                   halGetJoyKeyInput::?relay (hal_key)
                                                   halProcessKeyInterrupt::?relay (hal_key)
                                                   halRestoreSleepLevel::?relay (hal_sleep)
                                                   halSetSleepMode::?relay (hal_sleep)
                                                   halSleep::?relay (hal_sleep)
                                                   halSleepReadTimer::?relay (hal_sleep)
                                                   halSleepSetTimer::?relay (hal_sleep)
                                                   hciInitEventMasks::?relay (hci_event)
                                                   hciTxDataBufferReset::?relay (hci_data)
                                                   initNV::?relay (osal_snv)
                                                   isLimitedDiscoverableMode::?relay (gap_peridevmgr)
                                                   l2capAllocChannel::?relay (l2cap_util)
                                                   l2capBuildParamUpdateReq::?relay (l2cap_util)
                                                   l2capEncapSendData::?relay (l2cap_util)
                                                   l2capFindLocalId::?relay (l2cap_util)
                                                   l2capFreeChannel::?relay (l2cap_util)
                                                   l2capHandleRxError::?relay (l2cap_util)
                                                   l2capHandleTimerCB::?relay (l2cap_util)
                                                   l2capNotifyData::?relay (l2cap_util)
                                                   l2capNotifySignal::?relay (l2cap_util)
                                                   l2capParseCmdReject::?relay (l2cap_util)
                                                   l2capParsePacket::?relay (l2cap_util)
                                                   l2capParseParamUpdateRsp::?relay (l2cap_util)
                                                   l2capParseSignalHdr::?relay (l2cap_util)
                                                   l2capProcessReq::?relay (l2cap_task)
                                                   l2capProcessRsp::?relay (l2cap_task)
                                                   l2capProcessRxData::?relay (l2cap_task)
                                                   l2capProcessSignal::?relay (l2cap_task)
                                                   l2capSendCmd::?relay (l2cap_util)
                                                   l2capSendReq::?relay (l2cap_util)
                                                   l2capStopTimer::?relay (l2cap_util)
                                                   leftshift_onebit::?relay (sm_mgr)
                                                   linkDB_Add::?relay (linkdb)
                                                   linkDB_Authen::?relay (linkdb)
                                                   linkDB_Find::?relay (linkdb)
                                                   linkDB_FindFirst::?relay (linkdb)
                                                   linkDB_Init::?relay (linkdb)
                                                   linkDB_NumActive::?relay (linkdb)
                                                   linkDB_PerformFunc::?relay (linkdb)
                                                   linkDB_Register::?relay (linkdb)
                                                   linkDB_Remove::?relay (linkdb)
                                                   linkDB_State::?relay (linkdb)
                                                   llAdjustForMissedEvent::?relay (ll_common)
                                                   llAdvEvt_TaskAbort::?relay (ll_advEndCauses)
                                                   llAdvEvt_TaskConnect::?relay (ll_advEndCauses)
                                                   llAllocConnId::?relay (ll_common)
                                                   llAllocTask::?relay (ll_scheduler)
                                                   llCheckWhiteListUsage::?relay (ll_common)
                                                   llClearSetInts::?relay (ll_common)
                                                   llConnCleanup::?relay (ll_common)
                                                   llConnTerminate::?relay (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent::?relay (ll_common)
                                                   llConvertLstoToEvent::?relay (ll_common)
                                                   llDequeueCtrlPkt::?relay (ll_common)
                                                   llDirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llDisableT2E1::?relay (ll_timer2)
                                                   llDisableT2Ints::?relay (ll_timer2)
                                                   llDisableT2IntsEvts::?relay (ll_timer2)
                                                   llDiscoverableAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llEnqueueCtrlPkt::?relay (ll_common)
                                                   llExtendRfRange::?relay (ll_common)
                                                   llFindNextSecTask::?relay (ll_scheduler)
                                                   llFindTxPowerSettings::?relay (ll_common)
                                                   llFreeTask::?relay (ll_scheduler)
                                                   llGetActiveTasks::?relay (ll_scheduler)
                                                   llGetCurrentTask::?relay (ll_scheduler)
                                                   llGetCurrentTime::?relay (ll_timer2)
                                                   llGetFullCTandST::?relay (ll_timer2)
                                                   llGetNextConn::?relay (ll_common)
                                                   llGetNumTasks::?relay (ll_scheduler)
                                                   llGetTaskState::?relay (ll_scheduler)
                                                   llGetTimer2Capture::?relay (ll_timer2)
                                                   llInitFeatureSet::?relay (ll_common)
                                                   llInitTimer2::?relay (ll_timer2)
                                                   llMemCopySrc::?relay (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llProcessChanMap::?relay (ll_common)
                                                   llProcessPendingTxData::?relay (ll_common)
                                                   llProcessPostRfOps::?relay (ll_common)
                                                   llProcessSlaveControlProcedures::?relay (ll_slaveEndCauses)
                                                   llReleaseAllConnId::?relay (ll_common)
                                                   llReplaceCtrlPkt::?relay (ll_common)
                                                   llRestoreConnState::?relay (ll_scheduler)
                                                   llRfInit::?relay (ll_common)
                                                   llSave_rxFIFO::?relay (ll_scheduler)
                                                   llSave_txFIFO::?relay (ll_scheduler)
                                                   llScheduleTask::?relay (ll_scheduler)
                                                   llScheduler::?relay (ll_scheduler)
                                                   llSchedulerInit::?relay (ll_scheduler)
                                                   llSetFreqTune::?relay (ll_common)
                                                   llSetT2C1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Event1::?relay (ll_timer2)
                                                   llSetT2LongC1Timeout::?relay (ll_timer2)
                                                   llSetT2OVFC2Event2::?relay (ll_timer2)
                                                   llSetupAdv::?relay (ll_common)
                                                   llSetupDirectedAdvEvt::?relay (ll_common)
                                                   llSetupEncRsp::?relay (ll_common)
                                                   llSetupFeatureSetRsp::?relay (ll_common)
                                                   llSetupNextSlaveEvent::?relay (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt::?relay (ll_common)
                                                   llSetupPauseEncRsp::?relay (ll_common)
                                                   llSetupRejectInd::?relay (ll_common)
                                                   llSetupScannableAdvEvt::?relay (ll_common)
                                                   llSetupStartEncReq::?relay (ll_common)
                                                   llSetupStartEncRsp::?relay (ll_common)
                                                   llSetupTermInd::?relay (ll_common)
                                                   llSetupUndirectedAdvEvt::?relay (ll_common)
                                                   llSetupUnknownRsp::?relay (ll_common)
                                                   llSetupVersionIndReq::?relay (ll_common)
                                                   llSlaveEvt_TaskAbort::?relay (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk::?relay (ll_slaveEndCauses)
                                                   llStartAdvSetup::?relay (ll_common)
                                                   llStartSlaveSetup::?relay (ll_common)
                                                   llStartTimer2::?relay (ll_timer2)
                                                   llStopTimer2::?relay (ll_timer2)
                                                   llUndirectedAdvEvt_TaskEndOk::?relay (ll_advEndCauses)
                                                   llUnexpectedEndCauseHandler::?relay (ll_errorEndCauses)
                                                   llWriteTxData::?relay (ll_common)
                                                   ll_McuPrecisionCount::?relay (ll_timer2)
                                                   memcpy::?relay (?memcpy)
                                                   memset::?relay (?memset)
                                                   osalAddTimer::?relay (OSAL_Timers)
                                                   osalClockUpdate::?relay (OSAL_ClockBLE)
                                                   osalDeleteTimer::?relay (OSAL_Timers)
                                                   osalFindTimer::?relay (OSAL_Timers)
                                                   osalInitTasks::?relay (OSAL_SimpleBLEPeripheral)
                                                   osalTimeUpdate::?relay (OSAL_ClockBLE)
                                                   osalTimerInit::?relay (OSAL_Timers)
                                                   osalTimerUpdate::?relay (OSAL_Timers)
                                                   osal_CbTimerInit::?relay (osal_cbtimer)
                                                   osal_CbTimerProcessEvent::?relay (osal_cbtimer)
                                                   osal_CbTimerStart::?relay (osal_cbtimer)
                                                   osal_CbTimerStop::?relay (osal_cbtimer)
                                                   osal_bm_adjust_header::?relay (osal_bufmgr)
                                                   osal_bm_alloc::?relay (osal_bufmgr)
                                                   osal_bm_free::?relay (osal_bufmgr)
                                                   osal_clear_event::?relay (OSAL)
                                                   osal_get_timeoutEx::?relay (OSAL_Timers)
                                                   osal_init_system::?relay (OSAL)
                                                   osal_int_disable::?relay (OSAL)
                                                   osal_isbufset::?relay (OSAL)
                                                   osal_mem_alloc::?relay (OSAL_Memory)
                                                   osal_mem_free::?relay (OSAL_Memory)
                                                   osal_mem_init::?relay (OSAL_Memory)
                                                   osal_mem_kick::?relay (OSAL_Memory)
                                                   osal_memcmp::?relay (OSAL)
                                                   osal_memcpy::?relay (OSAL)
                                                   osal_memdup::?relay (OSAL)
                                                   osal_memset::?relay (OSAL)
                                                   osal_msg_allocate::?relay (OSAL)
                                                   osal_msg_deallocate::?relay (OSAL)
                                                   osal_msg_enqueue::?relay (OSAL)
                                                   osal_msg_enqueue_push::?relay (OSAL)
                                                   osal_msg_extract::?relay (OSAL)
                                                   osal_msg_push::?relay (OSAL)
                                                   osal_msg_receive::?relay (OSAL)
                                                   osal_msg_send::?relay (OSAL)
                                                   osal_next_timeout::?relay (OSAL_Timers)
                                                   osal_pwrmgr_device::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_init::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_powerconserve::?relay (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state::?relay (OSAL_PwrMgr)
                                                   osal_rand::?relay (OSAL)
                                                   osal_revmemcpy::?relay (OSAL)
                                                   osal_run_system::?relay (OSAL)
                                                   osal_set_event::?relay (OSAL)
                                                   osal_snv_compact::?relay (osal_snv)
                                                   osal_snv_init::?relay (osal_snv)
                                                   osal_snv_read::?relay (osal_snv)
                                                   osal_snv_write::?relay (osal_snv)
                                                   osal_start_reload_timer::?relay (OSAL_Timers)
                                                   osal_start_system::?relay (OSAL)
                                                   osal_start_timerEx::?relay (OSAL_Timers)
                                                   osal_stop_timerEx::?relay (OSAL_Timers)
                                                   osal_strlen::?relay (OSAL)
                                                   performPeriodicTask::?relay (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB::?relay (simpleBLEPeripheral)
                                                   phyFindWlEntry::?relay (phy)
                                                   read_batt_level::?relay (simpleBLEPeripheral)
                                                   read_temperature::?relay (simpleBLEPeripheral)
                                                   reportStatusChange::?relay (linkdb)
                                                   sendAuthEvent::?relay (gap_linkmgr)
                                                   sendEstLinkEvent::?relay (gap_linkmgr)
                                                   sendTerminateEvent::?relay (gap_linkmgr)
                                                   setActivePage::?relay (osal_snv)
                                                   setXferPage::?relay (osal_snv)
                                                   simpleBLEPeripheral_ProcessOSALMsg::?relay (simpleBLEPeripheral)
                                                   simpleProfileChangeCB::?relay (simpleBLEPeripheral)
                                                   smAuthReqToUint8::?relay (sm_mgr)
                                                   smDetermineKeySize::?relay (sm_pairing)
                                                   smEncrypt::?relay (sm_mgr)
                                                   smEndPairing::?relay (sm_pairing)
                                                   smFreePairingParams::?relay (sm_pairing)
                                                   smGenerateConfirm::?relay (sm_pairing)
                                                   smGeneratePairingReqRsp::?relay (sm_pairing)
                                                   smGenerateRandBuf::?relay (sm_mgr)
                                                   smGenerateRandMsg::?relay (sm_pairing)
                                                   smLinkCheck::?relay (sm_pairing)
                                                   smNextPairingState::?relay (sm_pairing)
                                                   smPairingSendEncInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityAddrInfo::?relay (sm_pairing)
                                                   smPairingSendIdentityInfo::?relay (sm_pairing)
                                                   smPairingSendMasterID::?relay (sm_pairing)
                                                   smPairingSendSingingInfo::?relay (sm_pairing)
                                                   smProcessDataMsg::?relay (sm_pairing)
                                                   smProcessEncryptChange::?relay (sm_pairing)
                                                   smProcessOSALMsg::?relay (sm_task)
                                                   smProcessPairingReq::?relay (sm_pairing)
                                                   smProcessRandComplete::?relay (sm_mgr)
                                                   smRegisterResponder::?relay (sm_pairing)
                                                   smResponderProcessLTKReq::?relay (sm_rsppairing)
                                                   smResponderSendNextKeyInfo::?relay (sm_rsppairing)
                                                   smSavePairInfo::?relay (sm_pairing)
                                                   smSendFailAndEnd::?relay (sm_pairing)
                                                   smSendSMMsg::?relay (smp)
                                                   smSetPairingReqRsp::?relay (sm_pairing)
                                                   smStartEncryption::?relay (sm_pairing)
                                                   smStartRspTimer::?relay (sm_mgr)
                                                   smStopRspTimer::?relay (sm_mgr)
                                                   smTimedOut::?relay (sm_pairing)
                                                   smUint8ToAuthReq::?relay (sm_mgr)
                                                   sm_CMAC::?relay (sm_mgr)
                                                   sm_ah::?relay (sm_mgr)
                                                   sm_c1::?relay (sm_pairing)
                                                   sm_c1new::?relay (sm_mgr)
                                                   sm_s1::?relay (sm_mgr)
                                                   sm_xor::?relay (sm_mgr)
                                                   smpBuildEncInfo::?relay (smp)
                                                   smpBuildIdentityAddrInfo::?relay (smp)
                                                   smpBuildIdentityInfo::?relay (smp)
                                                   smpBuildMasterID::?relay (smp)
                                                   smpBuildPairingConfirm::?relay (smp)
                                                   smpBuildPairingFailed::?relay (smp)
                                                   smpBuildPairingRandom::?relay (smp)
                                                   smpBuildPairingReq::?relay (smp)
                                                   smpBuildPairingReqRsp::?relay (smp)
                                                   smpBuildPairingRsp::?relay (smp)
                                                   smpBuildSecurityReq::?relay (smp)
                                                   smpBuildSigningInfo::?relay (smp)
                                                   smpParseEncInfo::?relay (smp)
                                                   smpParseIdentityAddrInfo::?relay (smp)
                                                   smpParseIdentityInfo::?relay (smp)
                                                   smpParseMasterID::?relay (smp)
                                                   smpParsePairingConfirm::?relay (smp)
                                                   smpParsePairingFailed::?relay (smp)
                                                   smpParsePairingRandom::?relay (smp)
                                                   smpParsePairingReq::?relay (smp)
                                                   smpParseSecurityReq::?relay (smp)
                                                   smpParseSigningInfo::?relay (smp)
                                                   smpResponderProcessIncoming::?relay (sm_rsppairing)
                                                   smpResponderProcessMasterID::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingRandom::?relay (sm_rsppairing)
                                                   smpResponderProcessPairingReq::?relay (sm_rsppairing)
                                                   strcat::?relay (?strcat)
                                                   strcpy::?relay (?strcpy)
                                                   strlen::?relay (?strlen)
                                                   verifyWordM::?relay (osal_snv)
                                                   writeItem::?relay (osal_snv)
                                                   writeWord::?relay (osal_snv)
                                                   writeWordM::?relay (osal_snv)
                                                   xferItem::?relay (osal_snv)
                                                   xor_128::?relay (sm_mgr)
    -------------------------------------------------------------------------
CSTART
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_30               
           ?BRET_30                
           ?BDISPATCH_30           
    -------------------------------------------------------------------------
CSTART
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_03               
           ?BRET_03                
           ?BDISPATCH_03           
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_07               
           ?BRET_07                
           ?BDISPATCH_07           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012DA - 000012EE (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 000012DA        SM_VerifyAuthenSig (sm_mgr)
                                                   findOffset (osal_snv)
                                                   initNV (osal_snv)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_C_REW             
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_C                 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012EF - 000012FE (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  000012EF        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_snv_compact (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000012FF - 0000130E (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                000012FF        halSleep (hal_sleep)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_next_timeout (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000130F - 0000132D (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                0000130F        GAP_PasscodeUpdate (gap_linkmgr)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   halSleep (hal_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000132E - 00001330 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  0000132E        LL_TxData (ll)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_snv_compact (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001331 - 000013AD (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              00001331 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000013AE - 0000141D (0x70 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             000013AE        GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   _ltoa (OSAL)
                                                   halSleep (hal_sleep)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000141E - 00001422 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 0000141E        GAP_PasscodeUpdate (gap_linkmgr)
                                                   LL_TxData (ll)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   _ltoa (OSAL)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001423 - 00001436 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001437 - 0000143C (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  00001437        LL_TimeToNextRfEvent (ll_sleep)
                                                   SM_VerifyAuthenSig (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000143D - 00001441 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              0000143D 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001442 - 00001455 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001456 - 00001468 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD                  00001456        LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001469 - 0000147B (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                00001469        LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000147C - 0000148E (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             0000147C        LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   gapIncSignCounter (gap_configmgr)
                                                   halSleepSetTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalClockUpdate (OSAL_ClockBLE)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_REW              
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000148F - 000014A2 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB                  0000148F        LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X_REW       
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014A3 - 000014B6 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           000014A3        llAdjustTimeBackward (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X_REW            
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014B7 - 000014C9 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                000014B7        LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014CA - 000014DC (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             000014CA        Segment part 94 (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_X_REW            
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_X                

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014DD - 000014EB (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                000014DD        GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_Init (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   RF_NormalIsr (ll_isr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 94 (ll_timer2)
                                                   _ltoa (OSAL)
                                                   findOffset (osal_snv)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_snv_compact (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REWX        
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X_REW         
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014EC - 000014FA (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             000014EC        LL_SetAdvControl (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_start_reload_timer (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014FB - 00001506 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            000014FB        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_Reset (ll)
                                                   LL_TxData (ll)
                                                   Segment part 34 (ll_timer2)
                                                   gapGetSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupAdv (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001507 - 00001512 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           00001507        GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Signable (gap_linkmgr)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   halSleep (hal_sleep)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupNonConnectableAdvEvt (ll_common)
                                                   llSetupScannableAdvEvt (ll_common)
                                                   llSetupUndirectedAdvEvt (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001513 - 0000151F (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00001513        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001520 - 00001540 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00001520        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GGS_SetParameter (gapgattserver)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   _ltoa (OSAL)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSetPairingReqRsp (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001541 - 00001581 (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              0000157A        HCI_TxDataBufferInsert (hci_data)
                                                   hciTxDataBufferReset (hci_data)
                                                   osal_snv_write (osal_snv)
                                                   sm_CMAC (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001582 - 000015DA (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00001582        LL_TimeToNextRfEvent (ll_sleep)
                                                   _itoa (OnBoard)
                                                   battMeasure (battservice)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osalClockUpdate (OSAL_ClockBLE)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   read_temperature (simpleBLEPeripheral)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015DB - 000015DD (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 000015DB        HalAdcRead (hal_adc)
                                                   llProcessChanMap (ll_common)
                                                   phyFindWlEntry (phy)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015DE - 000015EA (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_REW             
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015EB - 000015ED (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 000015EB        LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   RF_NormalIsr (ll_isr)
                                                   battMeasure (battservice)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   read_temperature (simpleBLEPeripheral)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015EE - 000015F9 (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000015FA - 000015FC (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  000015FA        ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_InitServer (gatt_server)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   hciTxDataBufferReset (hci_data)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   phyFindWlEntry (phy)
                                                   smSavePairInfo (sm_pairing)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   smpParsePairingReq (smp)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015FD - 000015FF (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              000015FD 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001600 - 0000160C (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000160D - 00001622 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          0000160D        ATT_CompareUUID (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_ClearWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetRandomAddressCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HalUARTInitDMA (hal_uart)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_RandCback (hci)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   llFindTxPowerSettings (ll_common)
                                                   llGetCurrentTime (ll_timer2)
                                                   llProcessPostRfOps (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_snv_write (osal_snv)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   xferItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001623 - 0000163C (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00001623        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   Onboard_rand (OnBoard)
                                                   ProcessPairStateCB (simpleBLEPeripheral)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 104 (gattservapp)
                                                   Segment part 127 (hci)
                                                   Segment part 134 (hci)
                                                   Segment part 177 (gattservapp)
                                                   Segment part 19 (sm_mgr)
                                                   Segment part 20 (l2cap_if)
                                                   Segment part 35 (att_server)
                                                   Segment part 35 (sm_pairing)
                                                   Segment part 36 (ll_timer2)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 50 (sm_mgr)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (ll_common)
                                                   Segment part 56 (sm_mgr)
                                                   Segment part 58 (att_util)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 67 (att_util)
                                                   Segment part 79 (gatt_server)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 89 (sm_pairing)
                                                   Segment part 98 (att_util)
                                                   Segment part 98 (hci)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTServMsg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondSetupPrivFlag (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_HandleParamUpdateNoSuccess (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_SetupGAP (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000163D - 00001657 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     0000163D        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001658 - 00001661 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00001658        ATT_CompareUUID (att_util)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseExecuteWriteReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_RandCmd (hci)
                                                   HCI_LE_ReadBufSizeCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ReadBDADDRCmd (hci)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_EXT_ExtendRfRangeCback (hci)
                                                   LL_EXT_SetRxGainCback (hci)
                                                   LL_EXT_SetTxPowerCback (hci)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   LL_TxData (ll)
                                                   LL_TxDataCompleteCback (hci_data)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 34 (ll_timer2)
                                                   Segment part 49 (sm_mgr)
                                                   Segment part 88 (sm_pairing)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halSleep (hal_sleep)
                                                   halSleepReadTimer (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llSetT2C1Event1 (ll_timer2)
                                                   llSetT2LongC1Event1 (ll_timer2)
                                                   llSetT2LongC1Timeout (ll_timer2)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llWriteTxData (ll_common)
                                                   ll_McuPrecisionCount (ll_timer2)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_revmemcpy (OSAL)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessPairingReq (sm_pairing)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001662 - 00001663 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00001662        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   HalKeyPoll (hal_key)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTPollISR (hal_uart)
                                                   LL_ProcessEvent (ll)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gattProcessRxData (gatt_task)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capSendCmd (l2cap_util)
                                                   linkDB_PerformFunc (linkdb)
                                                   llScheduleTask (ll_scheduler)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_run_system (OSAL)
                                                   reportStatusChange (linkdb)
                                                   smNextPairingState (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001664 - 000016CF (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00001664        ATT_BuildErrorRsp (att_util)
                                                   ATT_BuildFindByTypeValueRsp (att_util)
                                                   ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseExchangeMTUReq (att_util)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParseFindInfoReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadBlobReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseReadMultiReq (att_util)
                                                   ATT_ParseReadReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   Batt_GetParameter (battservice)
                                                   Batt_MeasLevel (battservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_Init (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_EndDiscoverable (gap_peridevmgr)
                                                   GAP_Init (gap_task)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_ParamsInit (gap_configmgr)
                                                   GAP_PasscodeUpdate (gap_linkmgr)
                                                   GAP_PeriDevMgrInit (gap_peridevmgr)
                                                   GAP_ProcessEvent (gap_task)
                                                   GAP_SecParamsInit (gap_configmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_TerminateAuth (gap_linkmgr)
                                                   GAP_TerminateLinkReq (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_Init (gattservapp)
                                                   GATTServApp_InitCharCfg (gattservapp)
                                                   GATTServApp_ProcessEvent (gattservapp)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_ReadCharCfg (gattservapp)
                                                   GATTServApp_SendServiceChangedInd (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Init (gatt_task)
                                                   GATT_InitServer (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GATT_ProcessEvent (gatt_task)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GATT_VerifyReadPermissions (gatt_server)
                                                   GATT_VerifyWritePermissions (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_DataBufferOverflowEvent (hci_event)
                                                   HCI_DisconnectCmd (hci)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_AddWhiteListCmd (hci)
                                                   HCI_LE_LtkReqNegReplyCmd (hci)
                                                   HCI_LE_LtkReqReplyCmd (hci)
                                                   HCI_LE_SetAdvDataCmd (hci)
                                                   HCI_LE_SetAdvEnableCmd (hci)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_LE_SetScanRspDataCmd (hci)
                                                   HCI_NumOfCompletedPacketsEvent (hci_event)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_ReadRssiCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HCI_TxDataSend (hci_data)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTPollISR (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   L2CAP_Init (l2cap_task)
                                                   L2CAP_ParseParamUpdateReq (l2cap_util)
                                                   L2CAP_ProcessEvent (l2cap_task)
                                                   L2CAP_SendData (l2cap_if)
                                                   L2CAP_bm_alloc (l2cap_util)
                                                   LL_AddWhiteListDevice (ll)
                                                   LL_ConnParamUpdateCback (hci_event)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_Disconnect (ll)
                                                   LL_DisconnectCback (hci_event)
                                                   LL_ENC_AES128_Encrypt (ll_enc)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_DecryptMsg (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_ENC_EncryptMsg (ll_enc)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_GenerateTrueRandNum (ll_enc)
                                                   LL_ENC_MoveData (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncChangeCback (hci_event)
                                                   LL_EncKeyRefreshCback (hci_event)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_PseudoRand (ll)
                                                   LL_Rand (ll)
                                                   LL_RandCback (hci)
                                                   LL_ReadRemoteVersionInfoCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_RxReqDataBufCback (hci_data)
                                                   LL_SetAdvControl (ll)
                                                   LL_SetAdvData (ll)
                                                   LL_SetAdvParam (ll)
                                                   LL_SetScanRspData (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   PHY_ClearBlacklistIndex (phy)
                                                   PHY_SetBlacklistIndex (phy)
                                                   PHY_SetCRCInit (phy)
                                                   PHY_SetSyncWord (phy)
                                                   ProcessPairStateCB (simpleBLEPeripheral)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_Init (sm_task)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_StartPairing (sm_pairing)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 67 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 84 (att_util)
                                                   Segment part 98 (att_util)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   attSendMsg (att_util)
                                                   battMeasure (battservice)
                                                   bubble (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   disconnectNext (gap_linkmgr)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseAllBondings (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem (gapbondmgr)
                                                   gapBondMgrFindEmpty (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
                                                   gapBondMgrSlaveSecurityReq (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTMsg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTServMsg (gapbondmgr)
                                                   gapBondMgr_ProcessOSALMsg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapIncSignCounter (gap_configmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessDisconnectCompleteEvt (gap_linkmgr)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapReadBufSizeCmdStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_SetupGAP (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSendBondCompleteEvent (gap_linkmgr)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSendLinkUpdateEvent (gap_linkmgr)
                                                   gapSendMakeDiscEvent (gap_peridevmgr)
                                                   gapSendPairingReqEvent (gap_linkmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapSetAdvParamsStatus (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvDataStatus (gap_peridevmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattFindServerInfo (gatt_server)
                                                   gattGetServerStatus (gatt_server)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattProcessReadMultiReq (gatt_server)
                                                   gattProcessReadReq (gatt_server)
                                                   gattProcessRxData (gatt_task)
                                                   gattProcessWriteReq (gatt_server)
                                                   gattServApp_FindAuthorizeAttrCB (gattservapp)
                                                   gattServApp_FindCharCfgItem (gattservapp)
                                                   gattServApp_HandleConnStatusCB (gattservapp)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServApp_SetNumPrepareWrites (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattServiceLastHandle (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   gattStopTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halGetJoyKeyInput (hal_key)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hciTxDataBufferReset (hci_data)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capAllocChannel (l2cap_util)
                                                   l2capBuildParamUpdateReq (l2cap_util)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capFindLocalId (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capNotifySignal (l2cap_util)
                                                   l2capParseCmdReject (l2cap_util)
                                                   l2capParsePacket (l2cap_util)
                                                   l2capParseParamUpdateRsp (l2cap_util)
                                                   l2capParseSignalHdr (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendCmd (l2cap_util)
                                                   l2capSendReq (l2cap_util)
                                                   l2capStopTimer (l2cap_util)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   linkDB_Remove (linkdb)
                                                   linkDB_State (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llAllocConnId (ll_common)
                                                   llAllocTask (ll_scheduler)
                                                   llConnCleanup (ll_common)
                                                   llConnTerminate (ll_common)
                                                   llConvertCtrlProcTimeoutToEvent (ll_common)
                                                   llConvertLstoToEvent (ll_common)
                                                   llDequeueCtrlPkt (ll_common)
                                                   llDiscoverableAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llFindTxPowerSettings (ll_common)
                                                   llNonConnAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llProcessChanMap (ll_common)
                                                   llProcessPendingTxData (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llSave_rxFIFO (ll_scheduler)
                                                   llSave_txFIFO (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupDirectedAdvEvt (ll_common)
                                                   llSetupEncRsp (ll_common)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupRejectInd (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llStartSlaveSetup (ll_common)
                                                   llUndirectedAdvEvt_TaskEndOk (ll_advEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalClockUpdate (OSAL_ClockBLE)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_strlen (OSAL)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   phyFindWlEntry (phy)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   read_temperature (simpleBLEPeripheral)
                                                   reportStatusChange (linkdb)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   sendTerminateEvent (gap_linkmgr)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smEncrypt (sm_mgr)
                                                   smEndPairing (sm_pairing)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandBuf (sm_mgr)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smLinkCheck (sm_pairing)
                                                   smPairingSendEncInfo (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendIdentityInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smPairingSendSingingInfo (sm_pairing)
                                                   smProcessDataMsg (sm_pairing)
                                                   smProcessEncryptChange (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
                                                   smProcessPairingReq (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smSetPairingReqRsp (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   smStartRspTimer (sm_mgr)
                                                   smUint8ToAuthReq (sm_mgr)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   sm_xor (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParsePairingReq (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)
                                                   xor_128 (sm_mgr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000016D0 - 00001735 (0x66 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       000016D0        LL_PowerOffReq (ll_sleep)
                                                   LL_PowerOnReq (ll_sleep)
                                                   LL_TimeToNextRfEvent (ll_sleep)
                                                   ll24BitTimeCompare (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llAdjustTimeBackward (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llGetNextDataChan (ll_common)
                                                   llSetNextDataChan (ll_common)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001736 - 0000177B (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     00001736        Batt_GetParameter (battservice)
                                                   Batt_MeasLevel (battservice)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_Init (gapbondmgr)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessEvent (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_Register (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPBondMgr_ServiceChangeInd (gapbondmgr)
                                                   GAPBondMgr_UpdateCharCfg (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_Init (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SendUpdateParam (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAPRole_StartDevice (peripheral)
                                                   GAP_DeviceInit (gap)
                                                   GAP_Init (gap_task)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATT_FindHandle (gatt_server)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_Notification (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandStatusEvent (hci_event)
                                                   HCI_Init (hci_tl)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_ProcessEvent (hci_tl)
                                                   HCI_SendCommandStatusEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_TxDataBufferInsert (hci_data)
                                                   HalAdcRead (hal_adc)
                                                   HalFlashRead (hal_flash)
                                                   HalFlashWrite (hal_flash)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalUARTBusyDMA (hal_uart)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTPollDMA (hal_uart)
                                                   HalUARTPollISR (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   L2CAP_BuildCmdReject (l2cap_util)
                                                   L2CAP_Init (l2cap_task)
                                                   LL_ENC_GenerateMIC (ll_enc)
                                                   LL_ENC_ReverseBytes (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_RxDataCompleteCback (hci_data)
                                                   LL_SetAdvParam (ll)
                                                   LL_TxData (ll)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   PHY_AddWlEntry (phy)
                                                   ProcessPairStateCB (simpleBLEPeripheral)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_Init (sm_task)
                                                   SM_ProcessEvent (sm_task)
                                                   SM_StartPairing (sm_pairing)
                                                   Segment part 105 (gattservapp)
                                                   Segment part 11 (sm_mgr)
                                                   Segment part 114 (ll)
                                                   Segment part 116 (ll_common)
                                                   Segment part 120 (gattservapp)
                                                   Segment part 121 (ll_common)
                                                   Segment part 127 (ll)
                                                   Segment part 13 (hci_event)
                                                   Segment part 13 (l2cap_task)
                                                   Segment part 130 (ll)
                                                   Segment part 135 (hci)
                                                   Segment part 14 (sm_rsppairing)
                                                   Segment part 16 (gap_linkmgr)
                                                   Segment part 16 (gatt_task)
                                                   Segment part 16 (hci_event)
                                                   Segment part 16 (l2cap_util)
                                                   Segment part 162 (gattservapp)
                                                   Segment part 168 (gattservapp)
                                                   Segment part 175 (att_util)
                                                   Segment part 177 (gattservapp)
                                                   Segment part 19 (gatt_task)
                                                   Segment part 20 (gap_task)
                                                   Segment part 20 (sm_mgr)
                                                   Segment part 21 (l2cap_if)
                                                   Segment part 22 (l2cap_util)
                                                   Segment part 220 (phy)
                                                   Segment part 23 (ll_advEndCauses)
                                                   Segment part 25 (gap_configmgr)
                                                   Segment part 26 (att_util)
                                                   Segment part 26 (gatt_server)
                                                   Segment part 26 (linkdb)
                                                   Segment part 28 (hci_data)
                                                   Segment part 28 (ll_scheduler)
                                                   Segment part 30 (sm_pairing)
                                                   Segment part 31 (gatt_server)
                                                   Segment part 31 (sm_rsppairing)
                                                   Segment part 34 (gap_configmgr)
                                                   Segment part 34 (gap_peridevmgr)
                                                   Segment part 35 (gap_linkmgr)
                                                   Segment part 36 (att_server)
                                                   Segment part 36 (ll_enc)
                                                   Segment part 36 (ll_scheduler)
                                                   Segment part 36 (sm_pairing)
                                                   Segment part 38 (hci_event)
                                                   Segment part 43 (phy)
                                                   Segment part 46 (gattservapp)
                                                   Segment part 46 (smp)
                                                   Segment part 47 (gap_configmgr)
                                                   Segment part 47 (gap_linkmgr)
                                                   Segment part 51 (sm_mgr)
                                                   Segment part 53 (att_util)
                                                   Segment part 53 (gap_linkmgr)
                                                   Segment part 53 (gap_peridevmgr)
                                                   Segment part 55 (ll_enc)
                                                   Segment part 56 (sm_mgr)
                                                   Segment part 59 (att_util)
                                                   Segment part 61 (gap_peridevmgr)
                                                   Segment part 62 (gattservapp)
                                                   Segment part 62 (hci_event)
                                                   Segment part 62 (l2cap_util)
                                                   Segment part 62 (ll_enc)
                                                   Segment part 65 (l2cap_util)
                                                   Segment part 66 (gap_linkmgr)
                                                   Segment part 68 (gatt_server)
                                                   Segment part 68 (ll_common)
                                                   Segment part 71 (sm_mgr)
                                                   Segment part 73 (ll_common)
                                                   Segment part 79 (phy)
                                                   Segment part 80 (gatt_server)
                                                   Segment part 81 (l2cap_util)
                                                   Segment part 86 (att_util)
                                                   Segment part 9 (att_util)
                                                   Segment part 90 (sm_pairing)
                                                   Segment part 93 (gattservapp)
                                                   Segment part 98 (hci)
                                                   Segment part 98 (hci_event)
                                                   SimpleBLEPeripheral_Init (simpleBLEPeripheral)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   battMeasure (battservice)
                                                   bubble (simpleBLEPeripheral)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   disconnectNext (gap_linkmgr)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapBondMgrBondTotal (gapbondmgr)
                                                   gapBondMgrChangeState (gapbondmgr)
                                                   gapBondMgrEraseAllBondings (gapbondmgr)
                                                   gapBondMgrEraseBonding (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindCharCfgItem (gapbondmgr)
                                                   gapBondMgrFindEmpty (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgrGetStateFlags (gapbondmgr)
                                                   gapBondMgrInvertCharCfgItem (gapbondmgr)
                                                   gapBondMgrReadBonds (gapbondmgr)
                                                   gapBondMgrResolvePrivateAddr (gapbondmgr)
                                                   gapBondMgrSendServiceChange (gapbondmgr)
                                                   gapBondMgrSlaveSecurityReq (gapbondmgr)
                                                   gapBondMgrUpdateCharCfg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTMsg (gapbondmgr)
                                                   gapBondMgr_ProcessGATTServMsg (gapbondmgr)
                                                   gapBondMgr_ProcessOSALMsg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapBondMgr_SyncWhiteList (gapbondmgr)
                                                   gapFindADType (gap_devmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessOSALMsg (gap_task)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_SetupGAP (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessRxData (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   halGetJoyKeyInput (hal_key)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
                                                   halSleepSetTimer (hal_sleep)
                                                   hciTxDataBufferReset (hci_data)
                                                   initNV (osal_snv)
                                                   l2capNotifyData (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessRxData (l2cap_task)
                                                   leftshift_onebit (sm_mgr)
                                                   linkDB_Add (linkdb)
                                                   linkDB_Authen (linkdb)
                                                   linkDB_Register (linkdb)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llEnqueueCtrlPkt (ll_common)
                                                   llProcessChanMap (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetT2OVFC2Event2 (ll_timer2)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   memcpy (?memcpy)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalClockUpdate (OSAL_ClockBLE)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_SimpleBLEPeripheral)
                                                   osalTimeUpdate (OSAL_ClockBLE)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_CbTimerInit (osal_cbtimer)
                                                   osal_CbTimerProcessEvent (osal_cbtimer)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_CbTimerStop (osal_cbtimer)
                                                   osal_bm_adjust_header (osal_bufmgr)
                                                   osal_bm_alloc (osal_bufmgr)
                                                   osal_bm_free (osal_bufmgr)
                                                   osal_clear_event (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_isbufset (OSAL)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_memcmp (OSAL)
                                                   osal_memcpy (OSAL)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_push (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_push (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_next_timeout (OSAL_Timers)
                                                   osal_pwrmgr_powerconserve (OSAL_PwrMgr)
                                                   osal_pwrmgr_task_state (OSAL_PwrMgr)
                                                   osal_revmemcpy (OSAL)
                                                   osal_run_system (OSAL)
                                                   osal_set_event (OSAL)
                                                   osal_snv_compact (osal_snv)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_strlen (OSAL)
                                                   performPeriodicTask (simpleBLEPeripheral)
                                                   peripheralStateNotificationCB (simpleBLEPeripheral)
                                                   read_batt_level (simpleBLEPeripheral)
                                                   read_temperature (simpleBLEPeripheral)
                                                   setActivePage (osal_snv)
                                                   setXferPage (osal_snv)
                                                   simpleProfileChangeCB (simpleBLEPeripheral)
                                                   smProcessOSALMsg (sm_task)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendSMMsg (smp)
                                                   smStartEncryption (sm_pairing)
                                                   sm_c1 (sm_pairing)
                                                   smpBuildPairingReqRsp (smp)
                                                   smpBuildSecurityReq (smp)
                                                   smpParsePairingReq (smp)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   verifyWordM (osal_snv)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000177C - 000017BB (0x40 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       0000177C        LL_TimeToNextRfEvent (ll_sleep)
                                                   Segment part 171 (ll_common)
                                                   Segment part 23 (ll_sleep)
                                                   Segment part 90 (ll_timer2)
                                                   Segment part 94 (ll_timer2)
                                                   ll24BitTimeDelta (ll_timer2)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llT2OVFC1_ISR (ll_isr)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000017BC - 0000181A (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    000017BC        halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000181B - 00001872 (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    0000181B        halDmaIsr (hal_dma)
                                                   halKeyPort0Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001873 - 00001876 (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     00001873        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   LL_TxData (ll)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   gapProcessAdvertisingEvt (gap_peridevmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_ProcessOSALMsg (peripheral)
                                                   gapRole_startConnUpdate (peripheral)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halSleep (hal_sleep)
                                                   llAdjustForMissedEvent (ll_common)
                                                   llFindNextSecTask (ll_scheduler)
                                                   llScheduleTask (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   osal_CbTimerStart (osal_cbtimer)
                                                   osal_start_reload_timer (OSAL_Timers)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smStartRspTimer (sm_mgr)
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001877 - 0000187A (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00001877        ATT_BuildFindInfoRsp (att_util)
                                                   ATT_CompareUUID (att_util)
                                                   ATT_ConvertUUIDto128 (att_util)
                                                   ATT_ErrorRsp (att_server)
                                                   ATT_ExchangeMTURsp (att_server)
                                                   ATT_ExecuteWriteRsp (att_server)
                                                   ATT_FindByTypeValueRsp (att_server)
                                                   ATT_FindInfoRsp (att_server)
                                                   ATT_HandleValueInd (att_server)
                                                   ATT_HandleValueNoti (att_server)
                                                   ATT_ParseFindByTypeValueReq (att_util)
                                                   ATT_ParsePacket (att_util)
                                                   ATT_ParsePrepareWriteReq (att_util)
                                                   ATT_ParseReadByTypeReq (att_util)
                                                   ATT_ParseWriteReq (att_util)
                                                   ATT_PrepareWriteRsp (att_server)
                                                   ATT_ReadBlobRsp (att_server)
                                                   ATT_ReadByGrpTypeRsp (att_server)
                                                   ATT_ReadByTypeRsp (att_server)
                                                   ATT_ReadMultiRsp (att_server)
                                                   ATT_ReadRsp (att_server)
                                                   ATT_WriteRsp (att_server)
                                                   DevInfo_SetParameter (devinfoservice)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_PasscodeRsp (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAPBondMgr_ResolveAddr (gapbondmgr)
                                                   GAPRole_GetParameter (peripheral)
                                                   GAPRole_ProcessEvent (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   GAP_Authenticate (gap_linkmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GAP_DeviceInit (gap)
                                                   GAP_MakeDiscoverable (gap_peridevmgr)
                                                   GAP_SendSlaveSecurityRequest (gap_perilinkmgr)
                                                   GAP_Signable (gap_linkmgr)
                                                   GAP_UpdateAdvertisingData (gap_peridevmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATTServApp_UpdateCharCfg (gattservapp)
                                                   GATTServApp_WriteAttr (gattservapp)
                                                   GATT_FindHandleUUID (gatt_server)
                                                   GATT_FindNextAttr (gatt_server)
                                                   GATT_Indication (gatt_server)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   GGS_SetParameter (gapgattserver)
                                                   HCI_CommandCompleteEvent (hci_event)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_SendCommandCompleteEvent (hci_event)
                                                   HCI_SendControllerToHostEvent (hci_event)
                                                   HCI_SendDataPkt (hci)
                                                   HCI_VendorSpecifcCommandCompleteEvent (hci_event)
                                                   HalUARTInitDMA (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   L2CAP_CmdReject (l2cap_if)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ConnectionCompleteCback (hci_event)
                                                   LL_ENC_Decrypt (ll_enc)
                                                   LL_ENC_Encrypt (ll_enc)
                                                   LL_EncLtkReqCback (hci_event)
                                                   LL_Encrypt (ll)
                                                   LL_Init (ll)
                                                   LL_ProcessEvent (ll)
                                                   LL_RandCback (hci)
                                                   LL_SetAdvData (ll)
                                                   LL_SetScanRspData (ll)
                                                   ProcessPasscodeCB (simpleBLEPeripheral)
                                                   SM_CalcRandomAddr (sm_mgr)
                                                   SM_GenerateAuthenSig (sm_mgr)
                                                   SM_PasskeyUpdate (sm_pairing)
                                                   SM_ResolveRandomAddrs (sm_mgr)
                                                   SM_VerifyAuthenSig (sm_mgr)
                                                   Segment part 48 (sm_mgr)
                                                   Segment part 67 (att_util)
                                                   Segment part 81 (att_util)
                                                   Segment part 83 (sm_pairing)
                                                   Segment part 84 (att_util)
                                                   Segment part 88 (sm_pairing)
                                                   Segment part 98 (att_util)
                                                   SimpleProfile_GetParameter (simpleGATTprofile)
                                                   SimpleProfile_SetParameter (simpleGATTprofile)
                                                   cleanErasedPage (osal_snv)
                                                   compactPage (osal_snv)
                                                   erasePage (osal_snv)
                                                   findItem (osal_snv)
                                                   findOffset (osal_snv)
                                                   gapBondMgrAddBond (gapbondmgr)
                                                   gapBondMgrAuthenticate (gapbondmgr)
                                                   gapBondMgrFindAddr (gapbondmgr)
                                                   gapBondMgrFindReconnectAddr (gapbondmgr)
                                                   gapBondMgrGetPublicAddr (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapPairingCompleteCB (gap_linkmgr)
                                                   gapPasskeyNeededCB (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapProcessNewAddr (gap_configmgr)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapReadBD_ADDRStatus (gap_configmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapRole_SetupGAP (peripheral)
                                                   gapSendDeviceInitDoneEvent (gap_configmgr)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   gapUpdateConnSignCounter (gap_configmgr)
                                                   gattNotifyEvent (gatt_task)
                                                   gattProcessFindByTypeValueReq (gatt_server)
                                                   gattProcessFindInfoReq (gatt_server)
                                                   gattProcessReadByGrpTypeReq (gatt_server)
                                                   gattProcessReadByTypeReq (gatt_server)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessPrepareWriteReq (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServApp_ProcessWriteReq (gattservapp)
                                                   gattServerHandleConnStatusCB (gatt_server)
                                                   gattServerHandleTimerCB (gatt_server)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   gattStartTimer (gatt_task)
                                                   generate_subkey (sm_mgr)
                                                   initNV (osal_snv)
                                                   isLimitedDiscoverableMode (gap_peridevmgr)
                                                   l2capEncapSendData (l2cap_util)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   l2capProcessSignal (l2cap_task)
                                                   l2capSendReq (l2cap_util)
                                                   linkDB_Add (linkdb)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llCalcScaFactor (ll_timerDrift)
                                                   llCalcTimerDrift (ll_timerDrift)
                                                   llFindTxPowerSettings (ll_common)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llRestoreConnState (ll_scheduler)
                                                   llScheduler (ll_scheduler)
                                                   llSetupFeatureSetRsp (ll_common)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   llSetupPauseEncRsp (ll_common)
                                                   llSetupStartEncRsp (ll_common)
                                                   llSetupTermInd (ll_common)
                                                   llSetupUnknownRsp (ll_common)
                                                   llSetupVersionIndReq (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   llWriteTxData (ll_common)
                                                   osal_memdup (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_snv_read (osal_snv)
                                                   osal_snv_write (osal_snv)
                                                   sendAuthEvent (gap_linkmgr)
                                                   sendEstLinkEvent (gap_linkmgr)
                                                   smEncrypt (sm_mgr)
                                                   smGenerateConfirm (sm_pairing)
                                                   smGeneratePairingReqRsp (sm_pairing)
                                                   smGenerateRandMsg (sm_pairing)
                                                   smPairingSendIdentityAddrInfo (sm_pairing)
                                                   smPairingSendMasterID (sm_pairing)
                                                   smProcessRandComplete (sm_mgr)
                                                   smResponderProcessLTKReq (sm_rsppairing)
                                                   smResponderSendNextKeyInfo (sm_rsppairing)
                                                   smSavePairInfo (sm_pairing)
                                                   smSendFailAndEnd (sm_pairing)
                                                   smStartEncryption (sm_pairing)
                                                   sm_CMAC (sm_mgr)
                                                   sm_ah (sm_mgr)
                                                   sm_c1 (sm_pairing)
                                                   sm_c1new (sm_mgr)
                                                   sm_s1 (sm_mgr)
                                                   smpBuildEncInfo (smp)
                                                   smpBuildIdentityAddrInfo (smp)
                                                   smpBuildIdentityInfo (smp)
                                                   smpBuildMasterID (smp)
                                                   smpBuildPairingConfirm (smp)
                                                   smpBuildPairingRandom (smp)
                                                   smpBuildSigningInfo (smp)
                                                   smpParseEncInfo (smp)
                                                   smpParseIdentityAddrInfo (smp)
                                                   smpParseIdentityInfo (smp)
                                                   smpParseMasterID (smp)
                                                   smpParsePairingConfirm (smp)
                                                   smpParsePairingRandom (smp)
                                                   smpParseSigningInfo (smp)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   smpResponderProcessMasterID (sm_rsppairing)
                                                   smpResponderProcessPairingRandom (sm_rsppairing)
                                                   smpResponderProcessPairingReq (sm_rsppairing)
                                                   verifyWordM (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
                                                   xferItem (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000187B - 0000187C (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      0000187B        ATT_ParsePacket (att_util)
                                                   GAPBondMgr_LinkEst (gapbondmgr)
                                                   GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GATT_ServiceChangedInd (gatt_server)
                                                   HCI_LE_SetAdvParamCmd (hci)
                                                   HCI_TxDataSend (hci_data)
                                                   L2CAP_ConnParamUpdateReq (l2cap_if)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   ProcessPairStateCB (simpleBLEPeripheral)
                                                   gapBondMgrBondReq (gapbondmgr)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gapSetAdvParams (gap_peridevmgr)
                                                   l2capHandleTimerCB (l2cap_util)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llProcessPendingTxData (ll_common)
                                                   llSlaveEvt_TaskEndOk (ll_slaveEndCauses)
                                                   sm_c1 (sm_pairing)
                                                   smpResponderProcessIncoming (sm_rsppairing)
                                                   writeItem (osal_snv)
                                                   writeWord (osal_snv)
                                                   writeWordM (osal_snv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000187D - 00001889 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          0000187D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
XSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000188A - 0000188D (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    0000188A        GAP_MakeDiscoverable (gap_peridevmgr)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   SimpleBLEPeripheral_ProcessEvent (simpleBLEPeripheral)
                                                   gapProcessRandomAddrComplete (gap_configmgr)
                                                   gapWriteAdvEnableStatus (gap_peridevmgr)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halSleep (hal_sleep)
    -------------------------------------------------------------------------
RCODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_THREE   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000188E - 00001891 (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     0000188E        GAPBondMgr_ProcessGAPMsg (gapbondmgr)
                                                   GAP_Bond (gap_linkmgr)
                                                   GATTServApp_ReadAttr (gattservapp)
                                                   GATT_FindNextAttr (gatt_server)
                                                   LL_ProcessEvent (ll)
                                                   LL_TxData (ll)
                                                   gapBondMgr_ProcessGATTServMsg (gapbondmgr)
                                                   gapBondMgr_SyncCharCfg (gapbondmgr)
                                                   gapProcessConnUpdateCompleteEvt (gap_linkmgr)
                                                   gapProcessConnectionCompleteEvt (gap_linkmgr)
                                                   gapRole_HandleParamUpdateNoSuccess (peripheral)
                                                   gapRole_ProcessGAPMsg (peripheral)
                                                   gattServApp_ProcessExecuteWriteReq (gattservapp)
                                                   gattServApp_ProcessFindByTypeValueReq (gattservapp)
                                                   gattServApp_ProcessMsg (gattservapp)
                                                   gattServApp_ProcessReadByGrpTypeReq (gattservapp)
                                                   gattServApp_ProcessReadByTypeReq (gattservapp)
                                                   gattServApp_ProcessReadMultiReq (gattservapp)
                                                   gattServerProcessMsgCB (gatt_server)
                                                   l2capProcessReq (l2cap_task)
                                                   l2capProcessRsp (l2cap_task)
                                                   llAdvEvt_TaskConnect (ll_advEndCauses)
                                                   llProcessSlaveControlProcedures (ll_slaveEndCauses)
                                                   llScheduleTask (ll_scheduler)
                                                   llSetupNextSlaveEvent (ll_slaveEndCauses)
                                                   smEndPairing (sm_pairing)
                                                   smProcessOSALMsg (sm_task)
    -------------------------------------------------------------------------
RCODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_ONE     
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001892 - 000018BA (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         00001892        smpResponderProcessIncoming (sm_rsppairing)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000018BB - 000018C1 (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        000018BB        GAPRole_GetParameter (peripheral)
                                                   GAPRole_SetParameter (peripheral)
                                                   gapPeriProcessHCICmdCompleteEvt (gap_peridevmgr)
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF    
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000018C2 - 000018FF (0x3e bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_DENSE
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001900 - 00001900 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_DENSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001901 - 0000190A (0xa bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00001901        GATTServApp_ReadAttr (gattservapp)
                                                   gapProcessHCICmdCompleteEvt (gap_task)
                                                   gapProcessOSALMsg (gap_task)
    -------------------------------------------------------------------------
RCODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000190B - 0000194B (0x41 bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SWITCH_SPARSE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_LEAVE
                                   0000193D        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE_CBF_RESTORE
                                   
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000194C - 0000194C (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?US_SWITCH_SPARSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000194D - 0000198B (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     0000194D        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000198C - 000019B6 (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        0000198C        ?US_SWITCH_SPARSE_LEAVE (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C332 - 0001C377 (0x46 bytes), align: 0
  Segment part 6.             Intra module refs:   memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  0001C332 
               XSTACK = 00000002 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012BC - 000012C1 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy::?relay          000012BC        SimpleProfile_SetParameter (simpleGATTprofile)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE,CODE_C> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00007FC5 - 00007FF0 (0x2c bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  00007FC5 
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C2 - 000012C7 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          000012C2        HalUARTInitDMA (hal_uart)
                                                   HalUARTRxAvailDMA (hal_uart)
                                                   osal_memset (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcat

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B3 - 0001C3E8 (0x36 bytes), align: 0
  Segment part 6.             Intra module refs:   strcat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  0001C3B3 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012C8 - 000012CD (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          000012C8        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3E9 - 0001C410 (0x28 bytes), align: 0
  Segment part 6.             Intra module refs:   strcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  0001C3E9 
               XSTACK = 00000000 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012CE - 000012D3 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          000012CE        _ltoa (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0001C411 - 0001C42E (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  0001C411 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ISTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
PSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
XSTACK
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
IOVERLAY
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DOVERLAY
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000012D4 - 000012D9 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          000012D4        _ltoa (OSAL)
                                                   osal_strlen (OSAL)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                       CODE      DATA      XDATA  IDATA    BIT  CONST
------                       ----      ----      -----  -----    ---  -----
                            (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8              27
?ALLOC_XSTACK8                 22
?BANKED_CODE_SUPPORT           30
?BANKED_ENTER_XDATA           108
?BANKED_LEAVE_XDATA            70
?CALL_IND                       2
?DEALLOC_XSTACK8               26
?FUNC_ENTER_XDATA             102
?FUNC_LEAVE_XDATA              64
?INTERRUPT_ENTER_XSP           95
?INTERRUPT_LEAVE_XSP           88
?L_ADD                         19
?L_ADD_TO_X                    19
?L_ADD_X                       19
?L_AND_TO_X                    19
?L_AND_X                       19
?L_EQ_X                        21
?L_MOV_TO_X                    15
?L_MOV_X                       15
?L_MUL                        128
?L_SHL                         31
?L_SUB                         20
?L_SUB_FROM_X                  20
?MOVE_LONG8_XDATA_IDATA        13
?MOVE_LONG8_XDATA_XDATA        33
?PUSH_XSTACK8_X                49
?PUSH_XSTACK_I                 23
?SS_SHR                        16
?S_DIV_MOD                    154
?S_SHL                         19
?UL_DIV_MOD                   112
?UL_GE_X                       31
?UL_GT                         16
?UL_GT_X                       16
?UL_SHR                        25
?US_JMP_IF_IN_RANGE            63
?US_JMP_IF_VALUE               43
?US_SHR                        15
?US_SWITCH_DENSE               70
?US_SWITCH_SPARSE              76
?XLOAD_R2345                   12
?XSTACK_DISP8                  10
?XSTORE_R2345                  12
?cexit                          5
?cmain                        135
?memcpy                        76
?memset                        50
?strcat                        60
?strcpy                        46
?strlen                        36
CSTARTUP                       18
  + common                      3
OSAL                        2 975                    3                   13
  + shared                                    1
OSAL_ClockBLE                 327                   10
OSAL_Memory                   634                3 075
OSAL_PwrMgr                   230                    7
OSAL_SimpleBLEPeripheral      194                    2                   25
OSAL_Timers                 1 645                    6
  + shared                                                                4
OnBoard                       516                    2
SimpleBLEPeripheral_Main       90             1
  + shared                                    3
VIRTUAL_REGISTERS                      2                           8
att_server                    519
att_util                    2 788                                        16
battservice                   513                   62                    7
devinfoservice                 65                    8
gap                           144
gap_configmgr               1 381                  104
  + shared                                                                4
gap_devmgr                    239                    2
gap_linkmgr                 3 877                    7
  + shared                                                                4
gap_peridevmgr              1 889                   13
gap_perilinkmgr               143
gap_task                    1 020                    6
gapbondmgr                  6 760                  176                    6
  + shared                                                                4
gapgattserver                 524                  132                    3
gatt_server                 3 813                   11                   48
gatt_task                     640                    5
gatt_uuid                      26                                        26
gattservapp                 5 617                   63
hal_adc                       267             3      1
  + shared                                    2
hal_aes                       693
  + shared                                    3
hal_crc
  + shared                                    2
hal_dma                        78             4     40
  + shared                     70             2
  + common
hal_drivers                   348                    1
  + shared                                                                4
hal_flash                     751
  + shared                                    1
hal_key                       627             2      5
  + shared                    110            12                           4
  + common
hal_lcd                        33
hal_led                        33                    1
hal_sleep                     782      1      2      2                   24
  + shared                     46             3                           4
  + common
hal_startup                    11
hal_uart                    2 109            12    659
  + shared                    126             4
  + common
hci                         1 263                    5
hci_data                    1 040                   34
hci_event                   3 298                    9
hci_tl                        155                    6
l2cap_if                      301
l2cap_task                  1 145                   37
l2cap_util                  2 272                    1
linkdb                        828                   59
ll                          3 763             2    459      2             8
  + shared                                    2                          12
ll_advEndCauses             3 221
ll_common                   7 040            10                          16
  + shared                                                                4
ll_constData                    8
ll_enc                      3 651             1     44                   32
ll_errorEndCauses               9
ll_halt                         7      2
ll_isr                        688
  + shared                    134             7                           8
  + common
ll_math                        81      6
ll_scheduler                5 139                  447                   20
ll_slaveEndCauses           5 729                                         4
ll_sleep                      753                                         8
  + shared                                                                4
ll_timer2                   1 334             8
ll_timerDrift                 304                                        26
osal_bufmgr                   509                    2
osal_cbtimer                  832                   62
osal_snv                    6 875                    4                    4
  + shared                                                                8
peripheral                  4 794                  152
phy                         1 300                    1
simpleBLEPeripheral         5 250                   96                1 498
  + shared                                                                8
simpleGATTprofile             862                  274                   15
sm_mgr                      3 601                    2                   16
sm_pairing                  3 885                    6                   25
sm_rsppairing               2 898                    6                    4
sm_task                       459                    1
smp                         1 959
N/A (command line)                    24           640    192
N/A (alignment)                 1
----------                -------     --     --  -----    ---      -  -----
Total:                    119 768     35     87  6 750    194      8  1 916
  + common                    134


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  00000000 00000000
  03      HalUART_DMAIsrDMA
          | Stack used (prev) :  00000000 00000000
          | + function block  :  00000000 00000000
  02    HalUARTIsrDMA
        | Stack used (prev) :  00000000 00000000
        | + function block  :  00000000 00000004
  01  halDmaIsr
      | Stack used (prev) :  00000000 00000004
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000001C 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  0000001C 00000004
  05          osalFindTimer
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001D 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001B 00000000
  04        osalAddTimer
            | Stack used (prev) :  00000039 00000004
            | + function block  :  0000003E 00000001
  03      osal_start_timerEx
          | Stack used (prev) :  00000077 00000005
          | + function block  :  00000030 00000000
  02    halProcessKeyInterrupt
        | Stack used (prev) :  000000A7 00000005
        | + function block  :  00000028 00000000
  01  halKeyPort0Isr
      | Stack used (prev) :  000000CF 00000005
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000EB 00000005


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000EB 00000005
  02    halProcessKeyInterrupt
        | Stack used (prev) :  000000A7 00000005
        | + function block  :  00000028 00000000
        |  Already listed
  01  halKeyPort2Isr
      | Stack used (prev) :  000000EB 00000005
      | + function block  :  0000000E 00000000
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 00000005


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 00000005
  01  halSleepTimerIsr
      | Stack used (prev) :  000000F9 00000005
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 00000009


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 00000009
  01  port1Isr
      | Stack used (prev) :  000000F9 00000009
      | + function block  :  00000000 00000006
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 0000000F


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 0000000F
  01  halUart1TxIsr
      | Stack used (prev) :  000000F9 0000000F
      | + function block  :  00000000 00000008
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 00000017


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 00000017
  01  halUart0RxIsr
      | Stack used (prev) :  000000F9 00000017
      | + function block  :  00000000 00000009
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 00000020


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 00000020
  01  halUart0TxIsr
      | Stack used (prev) :  000000F9 00000020
      | + function block  :  00000000 00000008
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000000F9 00000028


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000000F9 00000028
  02    PHY_SetRfFreq
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000002
  02    PHY_GetEndCause
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000002
  02    PHY_SetEndConnection
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000002
  02    llDisableT2E1
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000000
  02    llDisableT2IntsEvts
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000000
  02    llDisableT2Ints
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000000
  05          PHY_ConfigWhitener
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000000 00000002
  04        llRfInit
            | Stack used (prev) :  000000F9 0000002A
            | + function block  :  00000000 00000004
  03      LL_ENC_GenerateTrueRandNum
          | Stack used (prev) :  000000F9 0000002E
          | + function block  :  00000016 00000000
  03      llExtendRfRange
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  00000008 00000002
  08                osal_set_event
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000017 00000000
  08                osal_msg_push
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000013 00000000
  08                osal_msg_enqueue
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000013 00000000
  09                  osal_mem_free
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  00000015 00000000
  08                osal_msg_deallocate
                    | Stack used (prev) :  0000010E 00000028
                    | + function block  :  0000001E 00000000
  08                osal_msg_deallocate
                    | Stack used (prev) :  0000010E 00000028
                    | + function block  :  0000001E 00000000
                    |  Already listed
  07              osal_msg_enqueue_push
                  | Stack used (prev) :  0000012C 00000028
                  | + function block  :  0000001D 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000149 00000029
                | + function block  :  00000012 00000000
  07              osal_mem_alloc
                  | Stack used (prev) :  0000001C 00000004
                  | + function block  :  0000001B 00000000
                  |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000000C 00000000
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
  05          HCI_SendCommandCompleteEvent
              | Stack used (prev) :  0000015B 00000028
              | + function block  :  00000034 00000001
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  0000018F 00000029
            | + function block  :  00000018 00000000
  03      LL_EXT_ExtendRfRangeCback
          | Stack used (prev) :  000001A7 00000029
          | + function block  :  00000006 00000004
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  0000018F 00000029
            | + function block  :  00000018 00000000
            |  Already listed
  03      LL_EXT_SetTxPowerCback
          | Stack used (prev) :  000001A7 00000029
          | + function block  :  00000006 00000004
  04        HCI_VendorSpecifcCommandCompleteEvent
            | Stack used (prev) :  0000018F 00000029
            | + function block  :  00000018 00000000
            |  Already listed
  03      LL_EXT_SetRxGainCback
          | Stack used (prev) :  000001A7 00000029
          | + function block  :  00000006 00000004
  05          HCI_SendCommandCompleteEvent
              | Stack used (prev) :  0000015B 00000028
              | + function block  :  00000034 00000001
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  0000018F 00000028
            | + function block  :  0000002B 00000001
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      LL_RandCback
          | Stack used (prev) :  000001BA 00000029
          | + function block  :  00000026 00000000
  02    llProcessPostRfOps
        | Stack used (prev) :  000001E0 0000002E
        | + function block  :  00000010 00000004
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  RF_NormalIsr
      | Stack used (prev) :  000001F0 00000032
      | + function block  :  00000000 0000001E
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001F0 00000050


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001F0 00000050
  01  RF_ErrorIsr
      | Stack used (prev) :  000001F0 00000050
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  000001F0 00000054


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             XSTACK   ISTACK
    | Stack used (prev) :  000001F0 00000054
  03      llSetT2C1Event1
          | Stack used (prev) :  000001F0 00000054
          | + function block  :  00000002 00000002
  03      llGetCurrentTask
          | Stack used (prev) :  000001F0 00000054
          | + function block  :  00000000 00000002
  03      HaltMcuUsingPhyFlag
          | Stack used (prev) :  000001F0 00000054
          | + function block  :  00000000 00000000
  04        osalDeleteTimer
            | Stack used (prev) :  000001F0 00000054
            | + function block  :  0000000E 00000002
  04        osalFindTimer
            | Stack used (prev) :  0000001C 00000004
            | + function block  :  0000001D 00000000
            |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001FE 00000056
          | + function block  :  0000001C 00000000
  03      osal_clear_event
          | Stack used (prev) :  000001F0 00000054
          | + function block  :  00000017 00000000
  02    llT2OVFC1_ISR
        | Stack used (prev) :  0000021A 00000056
        | + function block  :  00000010 00000000
  01  T2_Isr
      | Stack used (prev) :  0000022A 00000056
      | + function block  :  00000000 00000012
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000022A 00000068


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  03      osal_stop_timerEx
          | Stack used (prev) :  000001FE 00000056
          | + function block  :  0000001C 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  00000017 00000000
          |  Already listed
  02    HalKeyConfig
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000009 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  02    OnBoard_SendKeys
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000015 00000001
  01  OnBoard_KeyCallback
      | Stack used (prev) :  0000023F 00000069
      | + function block  :  00000012 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000251 00000069


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  04        gattServApp_FindCharCfgItem
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000017 00000000
  03      GATTServApp_ReadCharCfg
          | Stack used (prev) :  00000241 00000068
          | + function block  :  00000031 00000000
  06            linkDB_Find
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
  05          linkDB_Authen
              | Stack used (prev) :  0000023E 0000006A
              | + function block  :  00000018 00000000
  07              osal_start_timerEx
                  | Stack used (prev) :  00000077 00000005
                  | + function block  :  00000030 00000000
                  |  Already listed
  06            osal_CbTimerStart
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000001B 00000001
  05          gattStartTimer
              | Stack used (prev) :  00000245 00000069
              | + function block  :  00000024 00000000
  06            gattFindServerInfo
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000037 00000000
  05          gattGetServerStatus
              | Stack used (prev) :  00000261 00000068
              | + function block  :  00000023 00000000
  09                  xor_128
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000037 00000002
  09                  xor_128
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000037 00000002
                      |  Already listed
  09                  xor_128
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000037 00000002
                      |  Already listed
  09                  xor_128
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000037 00000002
                      |  Already listed
  10                    leftshift_onebit
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  0000001D 00000001
  10                    leftshift_onebit
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  0000001D 00000001
                        |  Already listed
  10                    leftshift_onebit
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  0000001D 00000001
                        |  Already listed
  10                    leftshift_onebit
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  0000001D 00000001
                        |  Already listed
  10                    xor_128
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000037 00000002
                        |  Already listed
  10                    xor_128
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000037 00000002
                        |  Already listed
  11                      LL_ENC_AES128_Encrypt
                          | Stack used (prev) :  0000022A 00000068
                          | + function block  :  0000000B 00000000
  10                    LL_Encrypt
                        | Stack used (prev) :  00000235 00000068
                        | + function block  :  0000001A 00000000
  10                    osal_mem_free
                        | Stack used (prev) :  000000F9 00000028
                        | + function block  :  00000015 00000000
                        |  Already listed
  10                    osal_mem_alloc
                        | Stack used (prev) :  0000001C 00000004
                        | + function block  :  0000001B 00000000
                        |  Already listed
  11                      memset
                          | Stack used (prev) :  0000022A 00000068
                          | + function block  :  00000002 00000002
  10                    osal_memset
                        | Stack used (prev) :  0000022C 0000006A
                        | + function block  :  0000001E 00000000
  09                  generate_subkey
                      | Stack used (prev) :  00000261 0000006A
                      | + function block  :  00000055 00000000
  09                  LL_Encrypt
                      | Stack used (prev) :  00000235 00000068
                      | + function block  :  0000001A 00000000
                      |  Already listed
  09                  osal_mem_free
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  00000015 00000000
                      |  Already listed
  09                  osal_mem_alloc
                      | Stack used (prev) :  0000001C 00000004
                      | + function block  :  0000001B 00000000
                      |  Already listed
  09                  osal_memset
                      | Stack used (prev) :  0000022C 0000006A
                      | + function block  :  0000001E 00000000
                      |  Already listed
  09                  osal_memcpy
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  0000001C 00000001
                      |  Already listed
  08                sm_CMAC
                    | Stack used (prev) :  000002B6 0000006A
                    | + function block  :  00000097 00000000
  09                  osal_set_event
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  00000017 00000000
                      |  Already listed
  08                gapIncSignCounter
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  0000000C 00000000
  08                gapGetSignCounter
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
  08                gapGetSRK
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
  08                osal_mem_free
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000015 00000000
                    |  Already listed
  08                osal_mem_alloc
                    | Stack used (prev) :  0000001C 00000004
                    | + function block  :  0000001B 00000000
                    |  Already listed
  08                osal_revmemcpy
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  0000000E 00000001
  07              SM_GenerateAuthenSig
                  | Stack used (prev) :  0000034D 0000006A
                  | + function block  :  00000064 00000000
  08                linkDB_Find
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000014 00000002
                    |  Already listed
  07              linkDB_State
                  | Stack used (prev) :  0000023E 0000006A
                  | + function block  :  00000014 00000000
  10                    osal_mem_alloc
                        | Stack used (prev) :  0000001C 00000004
                        | + function block  :  0000001B 00000000
                        |  Already listed
  09                  osal_bm_alloc
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  0000000C 00000000
  08                HCI_bm_alloc
                    | Stack used (prev) :  00000236 00000068
                    | + function block  :  00000000 00000004
  09                  bm_desc_from_payload
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000010 00000002
  08                osal_bm_adjust_header
                    | Stack used (prev) :  0000023A 0000006A
                    | + function block  :  00000020 00000000
  07              L2CAP_bm_alloc
                  | Stack used (prev) :  0000025A 0000006C
                  | + function block  :  0000002C 00000000
  08                linkDB_State
                    | Stack used (prev) :  0000023E 0000006A
                    | + function block  :  00000014 00000000
                    |  Already listed
  10                    LL_ConnActive
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000000 00000002
  11                      osal_msg_send
                          | Stack used (prev) :  00000149 00000029
                          | + function block  :  00000012 00000000
                          |  Already listed
  11                      osal_msg_allocate
                          | Stack used (prev) :  000000F9 00000028
                          | + function block  :  0000000C 00000000
                          |  Already listed
  10                    HCI_NumOfCompletedPacketsEvent
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000012 00000001
  12                        osal_msg_send
                            | Stack used (prev) :  00000149 00000029
                            | + function block  :  00000012 00000000
                            |  Already listed
  12                        osal_msg_allocate
                            | Stack used (prev) :  000000F9 00000028
                            | + function block  :  0000000C 00000000
                            |  Already listed
  11                      HCI_DataBufferOverflowEvent
                          | Stack used (prev) :  0000022A 00000068
                          | + function block  :  0000000A 00000001
  13                          ll24BitTimeDelta
                              | Stack used (prev) :  0000022A 00000068
                              | + function block  :  00000017 00000000
  13                          ll24BitTimeCompare
                              | Stack used (prev) :  0000022A 00000068
                              | + function block  :  00000013 00000000
  13                          llGetCurrentTime
                              | Stack used (prev) :  0000022A 00000068
                              | + function block  :  00000004 00000003
  13                          llGetCurrentTask
                              | Stack used (prev) :  000001F0 00000054
                              | + function block  :  00000000 00000002
                              |  Already listed
  14                            PHY_Reset
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000000 00000002
  14                            ll24BitTimeDelta
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000017 00000000
                                |  Already listed
  14                            llGetCurrentTime
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000004 00000003
                                |  Already listed
  14                            llSetT2OVFC2Event2
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000010 00000002
  14                            llSetT2LongC1Event1
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000006 00000002
  14                            llSetT2LongC1Timeout
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000006 00000002
  14                            osal_start_timerEx
                                | Stack used (prev) :  00000077 00000005
                                | + function block  :  00000030 00000000
                                |  Already listed
  15                              ll_McuPrecisionCount
                                  | Stack used (prev) :  0000022A 00000068
                                  | + function block  :  00000002 00000003
  16                                osal_mem_free
                                    | Stack used (prev) :  000000F9 00000028
                                    | + function block  :  00000015 00000000
                                    |  Already listed
  16                                osal_set_event
                                    | Stack used (prev) :  000000F9 00000028
                                    | + function block  :  00000017 00000000
                                    |  Already listed
  15                              osalTimerUpdate
                                  | Stack used (prev) :  0000022A 00000068
                                  | + function block  :  0000002E 00000000
  15                              osalClockUpdate
                                  | Stack used (prev) :  0000022A 00000068
                                  | + function block  :  0000001A 00000000
  14                            osalTimeUpdate
                                | Stack used (prev) :  00000258 0000006B
                                | + function block  :  0000001C 00000000
  13                          llScheduleTask
                              | Stack used (prev) :  00000274 0000006B
                              | + function block  :  00000038 00000000
  13                          llDivide31By16To16
                              | Stack used (prev) :  0000022A 00000068
                              | + function block  :  00000000 00000000
  16                                LL_ENC_LoadEmptyIV
                                    | Stack used (prev) :  0000022A 00000068
                                    | + function block  :  0000002F 00000002
  15                              LL_ENC_GenerateMIC
                                  | Stack used (prev) :  00000259 0000006A
                                  | + function block  :  0000007E 00000000
  15                              LL_ENC_EncryptMsg
                                  | Stack used (prev) :  0000022A 00000068
                                  | + function block  :  00000046 00000001
  14                            LL_ENC_Encrypt
                                | Stack used (prev) :  000002D7 0000006A
                                | + function block  :  0000003A 00000000
  14                            LL_ENC_MoveData
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  0000000B 00000000
  13                          llWriteTxData
                              | Stack used (prev) :  00000311 0000006A
                              | + function block  :  0000002A 00000000
  14                            PHY_SetDataChan
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000000 00000002
  14                            llProcessChanMap
                                | Stack used (prev) :  0000022A 00000068
                                | + function block  :  00000018 00000001
  13                          llSetNextDataChan
                              | Stack used (prev) :  00000242 00000068
                              | + function block  :  00000016 00000002
  12                        LL_TxData
                            | Stack used (prev) :  0000033B 0000006B
                            | + function block  :  00000027 00000000
  12                        HCI_NumOfCompletedPacketsEvent
                            | Stack used (prev) :  0000022A 00000068
                            | + function block  :  00000012 00000001
                            |  Already listed
  14                            osal_mem_free
                                | Stack used (prev) :  000000F9 00000028
                                | + function block  :  00000015 00000000
                                |  Already listed
  13                          osal_bm_free
                              | Stack used (prev) :  0000022A 00000068
                              | + function block  :  0000000C 00000000
  12                        hciTxDataBufferReset
                            | Stack used (prev) :  00000236 00000068
                            | + function block  :  00000022 00000000
  12                        hciTxDataBufferReset
                            | Stack used (prev) :  00000236 00000068
                            | + function block  :  00000022 00000000
                            |  Already listed
  11                      HCI_TxDataSend
                          | Stack used (prev) :  00000362 0000006B
                          | + function block  :  00000029 00000000
  10                    HCI_TxDataBufferInsert
                        | Stack used (prev) :  0000038B 0000006B
                        | + function block  :  00000020 00000000
  09                  HCI_SendDataPkt
                      | Stack used (prev) :  000003AB 0000006B
                      | + function block  :  00000024 00000000
  09                  osal_bm_adjust_header
                      | Stack used (prev) :  0000023A 0000006A
                      | + function block  :  00000020 00000000
                      |  Already listed
  09                  osal_msg_send
                      | Stack used (prev) :  00000149 00000029
                      | + function block  :  00000012 00000000
                      |  Already listed
  09                  osal_msg_allocate
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  0000000C 00000000
                      |  Already listed
  08                l2capEncapSendData
                    | Stack used (prev) :  000003CF 0000006B
                    | + function block  :  00000038 00000000
  07              L2CAP_SendData
                  | Stack used (prev) :  00000407 0000006B
                  | + function block  :  00000014 00000000
  07              osal_bm_free
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000C 00000000
                  |  Already listed
  06            attSendMsg
                | Stack used (prev) :  0000041B 0000006C
                | + function block  :  00000032 00000000
  05          ATT_HandleValueInd
              | Stack used (prev) :  0000044D 0000006C
              | + function block  :  00000018 00000000
  04        GATT_Indication
            | Stack used (prev) :  00000465 0000006C
            | + function block  :  00000042 00000000
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            ATT_ConvertUUIDto128
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002A 00000001
  06            ATT_ConvertUUIDto128
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002A 00000001
                |  Already listed
  06            osal_memcmp
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000011 00000000
  05          ATT_CompareUUID
              | Stack used (prev) :  00000254 00000069
              | + function block  :  0000003C 00000000
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000290 00000069
            | + function block  :  00000064 00000000
  03      GATT_ServiceChangedInd
          | Stack used (prev) :  000004A7 0000006C
          | + function block  :  00000048 00000000
  02    GATTServApp_SendServiceChangedInd
        | Stack used (prev) :  000004EF 0000006C
        | + function block  :  00000012 00000000
  01  gapBondMgrSendServiceChange
      | Stack used (prev) :  00000501 0000006C
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000521 0000006C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    GAPRole_GetParameter
        | Stack used (prev) :  0000023E 0000006A
        | + function block  :  0000001C 00000000
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    DevInfo_SetParameter
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  0000000F 00000000
  01  peripheralStateNotificationCB
      | Stack used (prev) :  0000025A 0000006A
      | + function block  :  0000002E 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000288 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    SimpleProfile_GetParameter
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  0000000E 00000001
  01  simpleProfileChangeCB
      | Stack used (prev) :  00000238 00000068
      | + function block  :  0000003C 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000274 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    HalLcdWriteString
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000000
  08                GAP_GetParamValue
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000014 00000002
                    |  Already listed
  08                osal_start_timerEx
                    | Stack used (prev) :  00000077 00000005
                    | + function block  :  00000030 00000000
                    |  Already listed
  07              smStartRspTimer
                  | Stack used (prev) :  0000023E 0000006A
                  | + function block  :  0000001C 00000000
  07              L2CAP_bm_alloc
                  | Stack used (prev) :  0000025A 0000006C
                  | + function block  :  0000002C 00000000
                  |  Already listed
  07              L2CAP_SendData
                  | Stack used (prev) :  00000407 0000006B
                  | + function block  :  00000014 00000000
                  |  Already listed
  07              osal_bm_free
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000C 00000000
                  |  Already listed
  06            smSendSMMsg
                | Stack used (prev) :  0000041B 0000006C
                | + function block  :  00000028 00000000
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          smGenerateConfirm
              | Stack used (prev) :  00000443 0000006C
              | + function block  :  00000042 00000000
  08                smAuthReqToUint8
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
  07              smpBuildPairingReqRsp
                  | Stack used (prev) :  0000022A 0000006A
                  | + function block  :  00000016 00000000
  06            smpBuildPairingRsp
                | Stack used (prev) :  00000240 0000006A
                | + function block  :  00000000 00000004
  07              smpBuildPairingReqRsp
                  | Stack used (prev) :  0000022A 0000006A
                  | + function block  :  00000016 00000000
                  |  Already listed
  06            smpBuildPairingReq
                | Stack used (prev) :  00000240 0000006A
                | + function block  :  00000000 00000004
  07              smUint8ToAuthReq
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000A 00000000
  07              osal_memset
                  | Stack used (prev) :  0000022C 0000006A
                  | + function block  :  0000001E 00000000
                  |  Already listed
  06            smSetPairingReqRsp
                | Stack used (prev) :  0000024A 0000006A
                | + function block  :  00000043 00000000
  08                LL_Encrypt
                    | Stack used (prev) :  00000235 00000068
                    | + function block  :  0000001A 00000000
                    |  Already listed
  07              smEncrypt
                  | Stack used (prev) :  0000024F 00000068
                  | + function block  :  00000080 00000000
  07              smEncrypt
                  | Stack used (prev) :  0000024F 00000068
                  | + function block  :  00000080 00000000
                  |  Already listed
  07              sm_xor
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000071 00000000
  07              sm_xor
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000071 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  0000022C 0000006A
                  | + function block  :  0000001E 00000000
                  |  Already listed
  07              osal_revmemcpy
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000E 00000001
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            sm_c1new
                | Stack used (prev) :  000002CF 0000006A
                | + function block  :  000000DB 00000000
  06            linkDB_Find
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            gapGetDevAddress
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000000 00000002
  06            gapGetDevAddressMode
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000000 00000002
  05          sm_c1
              | Stack used (prev) :  000003AA 0000006E
              | + function block  :  00000080 00000000
  09                  LL_ENC_GeneratePseudoRandNum
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  00000000 00000002
  08                LL_PseudoRand
                    | Stack used (prev) :  0000022A 0000006A
                    | + function block  :  00000014 00000000
  07              Onboard_rand
                  | Stack used (prev) :  0000023E 0000006A
                  | + function block  :  00000004 00000004
  06            osal_rand
                | Stack used (prev) :  00000242 0000006E
                | + function block  :  00000000 00000004
  05          smGenerateRandBuf
              | Stack used (prev) :  00000242 00000072
              | + function block  :  00000027 00000000
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        SM_PasskeyUpdate
            | Stack used (prev) :  00000485 00000072
            | + function block  :  00000014 00000000
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  03      GAP_PasscodeUpdate
          | Stack used (prev) :  00000499 00000072
          | + function block  :  00000056 00000000
  05          smSendSMMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000028 00000000
              |  Already listed
  08                osal_stop_timerEx
                    | Stack used (prev) :  000001FE 00000056
                    | + function block  :  0000001C 00000000
                    |  Already listed
  07              smStopRspTimer
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              osal_mem_free
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  00000015 00000000
                  |  Already listed
  06            smFreePairingParams
                | Stack used (prev) :  0000022A 0000006A
                | + function block  :  00000012 00000004
  07              linkDB_Find
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000014 00000002
                  |  Already listed
  08                linkDB_Find
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000014 00000002
                    |  Already listed
  09                  osal_mem_free
                      | Stack used (prev) :  000000F9 00000028
                      | + function block  :  00000015 00000000
                      |  Already listed
  08                gapFreeAuthLink
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000014 00000002
  08                GAP_GetParamValue
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000014 00000002
                    |  Already listed
  08                osal_msg_send
                    | Stack used (prev) :  00000149 00000029
                    | + function block  :  00000012 00000000
                    |  Already listed
  08                osal_msg_allocate
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000000C 00000000
                    |  Already listed
  08                osal_memset
                    | Stack used (prev) :  0000022C 0000006A
                    | + function block  :  0000001E 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000001C 00000001
                    |  Already listed
  07              sendAuthEvent
                  | Stack used (prev) :  0000024A 0000006A
                  | + function block  :  00000042 00000000
  07              osal_mem_free
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  00000015 00000000
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  0000001C 00000004
                  | + function block  :  0000001B 00000000
                  |  Already listed
  08                osal_mem_alloc
                    | Stack used (prev) :  0000001C 00000004
                    | + function block  :  0000001B 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000001C 00000001
                    |  Already listed
  07              osal_memdup
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000010 00000000
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            gapPairingCompleteCB
                | Stack used (prev) :  0000028C 0000006A
                | + function block  :  0000003C 00000000
  05          smEndPairing
              | Stack used (prev) :  000002C8 0000006E
              | + function block  :  0000002E 00000000
  04        smSendFailAndEnd
            | Stack used (prev) :  00000443 0000006E
            | + function block  :  00000037 00000000
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  03      GAP_TerminateAuth
          | Stack used (prev) :  0000047A 0000006E
          | + function block  :  0000001A 00000000
  02    GAPBondMgr_PasscodeRsp
        | Stack used (prev) :  000004EF 00000072
        | + function block  :  0000002C 00000000
  03      strlen
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000000 00000002
  03      strcpy
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000009 00000001
  03      strcat
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000009 00000001
  03      _itoa
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000001
  02    _ltoa
        | Stack used (prev) :  0000023E 00000068
        | + function block  :  00000072 00000002
  01  ProcessPasscodeCB
      | Stack used (prev) :  0000051B 00000072
      | + function block  :  0000003F 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  06            llReplaceCtrlPkt
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000000 00000003
  06            llEnqueueCtrlPkt
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000000B 00000001
  05          LL_Disconnect
              | Stack used (prev) :  00000235 0000006B
              | + function block  :  00000012 00000000
  08                osal_msg_send
                    | Stack used (prev) :  00000149 00000029
                    | + function block  :  00000012 00000000
                    |  Already listed
  08                osal_msg_allocate
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000000C 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000001C 00000001
                    |  Already listed
  07              HCI_SendControllerToHostEvent
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000001D 00000001
  06            HCI_SendCommandStatusEvent
                | Stack used (prev) :  00000247 00000068
                | + function block  :  00000025 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000149 00000029
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000000C 00000000
                |  Already listed
  05          HCI_CommandStatusEvent
              | Stack used (prev) :  0000026C 00000068
              | + function block  :  00000016 00000001
  04        HCI_DisconnectCmd
            | Stack used (prev) :  00000282 0000006B
            | + function block  :  00000012 00000000
  05          linkDB_FindFirst
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000000 00000002
  05          HCI_DisconnectCmd
              | Stack used (prev) :  00000282 0000006B
              | + function block  :  00000012 00000000
              |  Already listed
  04        disconnectNext
            | Stack used (prev) :  00000294 0000006B
            | + function block  :  0000002A 00000000
  03      GAP_TerminateLinkReq
          | Stack used (prev) :  000002BE 0000006B
          | + function block  :  00000018 00000000
  02    GAPRole_TerminateConnection
        | Stack used (prev) :  000002D6 0000006B
        | + function block  :  00000012 00000004
  02    HalLcdWriteStringValue
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000001 00000002
  02    HalLcdWriteString
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000000
        |  Already listed
  01  ProcessPairStateCB
      | Stack used (prev) :  000002E8 0000006F
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000300 0000006F


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  02    gapWriteAdvDataStatus
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000001
  05          gapValidADType
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000012 00000000
  04        gapFindADType
            | Stack used (prev) :  0000023C 00000068
            | + function block  :  00000026 00000001
  03      isLimitedDiscoverableMode
          | Stack used (prev) :  00000262 00000069
          | + function block  :  0000002E 00000000
  04        osal_mem_free
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000015 00000000
            |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
  04        gapFreeAdvertState
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  0000002C 00000000
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  04        osalAddTimer
            | Stack used (prev) :  00000039 00000004
            | + function block  :  0000003E 00000001
            |  Already listed
  03      osal_start_reload_timer
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000001A 00000000
  03      osal_start_timerEx
          | Stack used (prev) :  00000077 00000005
          | + function block  :  00000030 00000000
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  02    gapWriteAdvEnableStatus
        | Stack used (prev) :  00000290 0000006A
        | + function block  :  00000032 00000000
  05          llGetCurrentTime
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000004 00000003
              |  Already listed
  05          llDisableT2IntsEvts
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000000 00000000
              |  Already listed
  05          llGetNumTasks
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000000 00000002
  05          llGetActiveTasks
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000000 00000002
  05          llFreeTask
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000000 00000002
  06            llGetCurrentTime
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000004 00000003
                |  Already listed
  05          llAllocTask
              | Stack used (prev) :  0000022E 0000006B
              | + function block  :  00000014 00000000
  06            ll24BitTimeDelta
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000017 00000000
                |  Already listed
  06            ll24BitTimeCompare
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000013 00000000
                |  Already listed
  06            llGetCurrentTime
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000004 00000003
                |  Already listed
  07              LL_ENC_MoveData
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000B 00000000
                  |  Already listed
  06            llRestoreConnState
                | Stack used (prev) :  00000235 00000068
                | + function block  :  00000038 00000000
  06            llRestoreConnState
                | Stack used (prev) :  00000235 00000068
                | + function block  :  00000038 00000000
                |  Already listed
  07              PHY_CommitRxFifo
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000000
  07              PHY_RetryRxFifo
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000000
  06            llSave_rxFIFO
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002C 00000001
  06            llSave_rxFIFO
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002C 00000001
                |  Already listed
  07              PHY_RetryTxFifo
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000000
  06            llSave_txFIFO
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002C 00000001
  06            llSave_txFIFO
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000002C 00000001
                |  Already listed
  07              ll24BitTimeCompare
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000013 00000000
                  |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  0000023D 00000068
                | + function block  :  00000040 00000000
  06            llFindNextSecTask
                | Stack used (prev) :  0000023D 00000068
                | + function block  :  00000040 00000000
                |  Already listed
  06            llFindNextSecTask
                | Stack used (prev) :  0000023D 00000068
                | + function block  :  00000040 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            llScheduleTask
                | Stack used (prev) :  00000274 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            LL_ENC_MoveData
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000000B 00000000
                |  Already listed
  06            llGetNextConn
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              PHY_SetSyncWord
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000010 00000000
  07              PHY_SetAdvChans
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000010 00000000
  07              PHY_SetOwnAddr
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              llSetupScannableAdvEvt
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              llSetupNonConnectableAdvEvt
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  07              llSetupUndirectedAdvEvt
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
  08                PHY_SetPeerAddr
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
  07              llSetupDirectedAdvEvt
                  | Stack used (prev) :  0000022A 0000006A
                  | + function block  :  00000018 00000000
  06            llSetupAdv
                | Stack used (prev) :  00000242 0000006A
                | + function block  :  00000000 00000004
  06            llProcessPostRfOps
                | Stack used (prev) :  000001E0 0000002E
                | + function block  :  00000010 00000004
                |  Already listed
  05          llScheduler
              | Stack used (prev) :  000002AC 0000006E
              | + function block  :  00000030 00000000
  05          llSetupAdv
              | Stack used (prev) :  00000242 0000006A
              | + function block  :  00000000 00000004
              |  Already listed
  05          osal_stop_timerEx
              | Stack used (prev) :  000001FE 00000056
              | + function block  :  0000001C 00000000
              |  Already listed
  05          osal_clear_event
              | Stack used (prev) :  000001F0 00000054
              | + function block  :  00000017 00000000
              |  Already listed
  04        LL_SetAdvControl
            | Stack used (prev) :  000002DC 0000006E
            | + function block  :  00000018 00000000
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  0000018F 00000028
            | + function block  :  0000002B 00000001
            |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  000002F4 0000006E
          | + function block  :  00000014 00000000
  03      gapSendMakeDiscEvent
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  0000002C 00000000
          |  Already listed
  02    gapSetAdvParamsStatus
        | Stack used (prev) :  00000308 0000006E
        | + function block  :  0000001C 00000000
  01  gapPeriProcessHCICmdCompleteEvt
      | Stack used (prev) :  00000324 0000006E
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000338 0000006E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  04        PHY_SetAdvWlPolicy
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000000 00000002
  03      LL_SetAdvParam
          | Stack used (prev) :  0000022A 0000006A
          | + function block  :  00000020 00000000
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  0000018F 00000028
          | + function block  :  0000002B 00000001
          |  Already listed
  02    HCI_LE_SetAdvParamCmd
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  0000002C 00000000
  03      linkDB_NumActive
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000000 00000002
  02    GAP_NumActiveConnections
        | Stack used (prev) :  0000022A 0000006A
        | + function block  :  00000000 00000004
  02    isLimitedDiscoverableMode
        | Stack used (prev) :  00000262 00000069
        | + function block  :  0000002E 00000000
        |  Already listed
  02    gapAddAddrAdj
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  0000000A 00000002
  02    GAP_GetParamValue
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
        |  Already listed
  01  gapSetAdvParams
      | Stack used (prev) :  00000290 0000006E
      | + function block  :  00000028 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000002B8 0000006E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    gapFreeAdvertState
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
        |  Already listed
  03      HCI_LE_SetAdvEnableCmd
          | Stack used (prev) :  000002F4 0000006E
          | + function block  :  00000014 00000000
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001FE 00000056
          | + function block  :  0000001C 00000000
          |  Already listed
  02    GAP_EndDiscoverable
        | Stack used (prev) :  00000308 0000006E
        | + function block  :  0000001E 00000000
  02    osal_stop_timerEx
        | Stack used (prev) :  000001FE 00000056
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  01  gapProcessAdvertisingEvt
      | Stack used (prev) :  00000326 0000006E
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000033E 0000006E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  04        osal_stop_timerEx
            | Stack used (prev) :  000001FE 00000056
            | + function block  :  0000001C 00000000
            |  Already listed
  03      osal_CbTimerStop
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000A 00000000
  02    gattStopTimer
        | Stack used (prev) :  00000234 00000068
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  0000022C 0000006A
          | + function block  :  0000001E 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  00000026 00000000
  02    gattFindServerInfo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000037 00000000
        |  Already listed
  03      attSendMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000032 00000000
          |  Already listed
  02    ATT_ErrorRsp
        | Stack used (prev) :  0000044D 0000006C
        | + function block  :  00000018 00000000
  01  gattServerProcessMsgCB
      | Stack used (prev) :  00000465 0000006C
      | + function block  :  0000005A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004BF 0000006C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  01  gattProcessExchangeMTUReq
      | Stack used (prev) :  0000022A 00000068
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000022A 00000068


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000290 00000069
        | + function block  :  00000064 00000000
        |  Already listed
  03      attSendMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000032 00000000
          |  Already listed
  02    ATT_FindInfoRsp
        | Stack used (prev) :  0000044D 0000006C
        | + function block  :  00000018 00000000
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  gattProcessFindInfoReq
      | Stack used (prev) :  00000465 0000006C
      | + function block  :  0000004C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004B1 0000006C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000290 00000069
        | + function block  :  00000064 00000000
        |  Already listed
  01  gattProcessFindByTypeValueReq
      | Stack used (prev) :  000002F4 00000069
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000314 00000069


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000290 00000069
        | + function block  :  00000064 00000000
        |  Already listed
  01  gattProcessReadByTypeReq
      | Stack used (prev) :  000002F4 00000069
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000314 00000069


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandle
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000022 00000000
  03      linkDB_Authen
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  00000018 00000000
          |  Already listed
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  00000256 0000006A
        | + function block  :  00000022 00000000
  01  gattProcessReadReq
      | Stack used (prev) :  00000278 0000006A
      | + function block  :  00000014 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000028C 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandle
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000022 00000000
        |  Already listed
  02    GATT_VerifyReadPermissions
        | Stack used (prev) :  00000256 0000006A
        | + function block  :  00000022 00000000
        |  Already listed
  01  gattProcessReadMultiReq
      | Stack used (prev) :  00000278 0000006A
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000298 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandleUUID
        | Stack used (prev) :  00000290 00000069
        | + function block  :  00000064 00000000
        |  Already listed
  02    ATT_CompareUUID
        | Stack used (prev) :  00000254 00000069
        | + function block  :  0000003C 00000000
        |  Already listed
  01  gattProcessReadByGrpTypeReq
      | Stack used (prev) :  000002F4 00000069
      | + function block  :  0000002C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000320 00000069


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    GATT_FindHandle
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000022 00000000
        |  Already listed
  03      linkDB_Authen
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  00000018 00000000
          |  Already listed
  02    GATT_VerifyWritePermissions
        | Stack used (prev) :  00000256 0000006A
        | + function block  :  0000001E 00000000
  01  gattProcessWriteReq
      | Stack used (prev) :  00000274 0000006A
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000028C 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  01  gattProcessExecuteWriteReq
      | Stack used (prev) :  0000022A 00000068
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000022A 00000068


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    gattNotifyEvent
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  00000026 00000000
        |  Already listed
  01  gattServerHandleTimerCB
      | Stack used (prev) :  00000270 0000006A
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000028C 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    linkDB_State
        | Stack used (prev) :  0000023E 0000006A
        | + function block  :  00000014 00000000
        |  Already listed
  02    gattStopTimer
        | Stack used (prev) :  00000234 00000068
        | + function block  :  00000012 00000000
        |  Already listed
  02    gattNotifyEvent
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  00000026 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000037 00000000
        |  Already listed
  02    gattFindServerInfo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000037 00000000
        |  Already listed
  01  gattServerHandleConnStatusCB
      | Stack used (prev) :  00000270 0000006A
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000294 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    linkDB_State
        | Stack used (prev) :  0000023E 0000006A
        | + function block  :  00000014 00000000
        |  Already listed
  03      gattServApp_FindCharCfgItem
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000017 00000000
          |  Already listed
  02    GATTServApp_InitCharCfg
        | Stack used (prev) :  00000241 00000068
        | + function block  :  00000022 00000000
  02    gattServApp_FindPrepareWriteQ
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
  02    osal_memset
        | Stack used (prev) :  0000022C 0000006A
        | + function block  :  0000001E 00000000
        |  Already listed
  01  gattServApp_HandleConnStatusCB
      | Stack used (prev) :  00000263 0000006A
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000027F 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    l2capFreeChannel
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000012 00000002
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  0000022C 0000006A
          | + function block  :  0000001E 00000000
          |  Already listed
  02    l2capNotifySignal
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  00000031 00000000
  01  l2capHandleTimerCB
      | Stack used (prev) :  0000027B 0000006A
      | + function block  :  0000001A 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000295 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  01  llStartAdvSetup
      | Stack used (prev) :  0000022A 00000068
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000022A 0000006A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    smDetermineKeySize
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
  02    smEndPairing
        | Stack used (prev) :  000002C8 0000006E
        | + function block  :  0000002E 00000000
        |  Already listed
  03      smEncrypt
          | Stack used (prev) :  0000024F 00000068
          | + function block  :  00000080 00000000
          |  Already listed
  03      osal_revmemcpy
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000E 00000001
          |  Already listed
  02    sm_s1
        | Stack used (prev) :  000002CF 00000069
        | + function block  :  00000080 00000000
  02    linkDB_Find
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
        |  Already listed
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkNegReply
          | Stack used (prev) :  00000235 00000069
          | + function block  :  00000000 00000004
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  0000018F 00000028
          | + function block  :  0000002B 00000001
          |  Already listed
  02    HCI_LE_LtkReqNegReplyCmd
        | Stack used (prev) :  00000235 0000006D
        | + function block  :  00000018 00000000
  04        llEnqueueCtrlPkt
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  0000000B 00000001
            |  Already listed
  03      LL_EncLtkReply
          | Stack used (prev) :  00000235 00000069
          | + function block  :  00000000 00000004
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  0000018F 00000028
          | + function block  :  0000002B 00000001
          |  Already listed
  02    HCI_LE_LtkReqReplyCmd
        | Stack used (prev) :  00000235 0000006D
        | + function block  :  00000018 00000000
  02    osal_memset
        | Stack used (prev) :  0000022C 0000006A
        | + function block  :  0000001E 00000000
        |  Already listed
  02    osal_memcmp
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000011 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smResponderProcessLTKReq
      | Stack used (prev) :  0000034F 0000006E
      | + function block  :  00000066 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000003B5 0000006E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  03      smEndPairing
          | Stack used (prev) :  000002C8 0000006E
          | + function block  :  0000002E 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    smpResponderProcessMasterID
        | Stack used (prev) :  000002F6 0000006E
        | + function block  :  00000022 00000000
  04        smSendSMMsg
            | Stack used (prev) :  0000041B 0000006C
            | + function block  :  00000028 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      smGenerateRandMsg
          | Stack used (prev) :  00000443 0000006C
          | + function block  :  00000038 00000000
  03      sm_c1
          | Stack used (prev) :  000003AA 0000006E
          | + function block  :  00000080 00000000
          |  Already listed
  03      osal_memcmp
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000011 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    smpResponderProcessPairingRandom
        | Stack used (prev) :  0000047B 0000006E
        | + function block  :  00000042 00000000
  04        osal_mem_alloc
            | Stack used (prev) :  0000001C 00000004
            | + function block  :  0000001B 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      smSavePairInfo
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000012 00000001
  04        smSendSMMsg
            | Stack used (prev) :  0000041B 0000006C
            | + function block  :  00000028 00000000
            |  Already listed
  04        smSetPairingReqRsp
            | Stack used (prev) :  0000024A 0000006A
            | + function block  :  00000043 00000000
            |  Already listed
  03      smGeneratePairingReqRsp
          | Stack used (prev) :  00000443 0000006C
          | + function block  :  00000038 00000000
  03      smGenerateRandBuf
          | Stack used (prev) :  00000242 00000072
          | + function block  :  00000027 00000000
          |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        GAP_GetParamValue
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gapPasskeyNeededCB
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  00000024 00000000
  03      osal_memset
          | Stack used (prev) :  0000022C 0000006A
          | + function block  :  0000001E 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    smpResponderProcessPairingReq
        | Stack used (prev) :  0000047B 00000072
        | + function block  :  00000022 00000000
  02    smDetermineKeySize
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    smEndPairing
        | Stack used (prev) :  000002C8 0000006E
        | + function block  :  0000002E 00000000
        |  Already listed
  02    smGenerateConfirm
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  00000042 00000000
        |  Already listed
  02    sm_c1
        | Stack used (prev) :  000003AA 0000006E
        | + function block  :  00000080 00000000
        |  Already listed
  02    smAuthReqToUint8
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  03      linkDB_Find
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  0000022C 0000006A
          | + function block  :  0000001E 00000000
          |  Already listed
  02    gapSendPairingReqEvent
        | Stack used (prev) :  0000024A 0000006A
        | + function block  :  0000002C 00000000
  02    osal_mem_alloc
        | Stack used (prev) :  0000001C 00000004
        | + function block  :  0000001B 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpResponderProcessIncoming
      | Stack used (prev) :  000004BD 00000072
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004D9 00000072


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             XSTACK   ISTACK
    | Stack used (prev) :  0000022A 00000068
  02    smDetermineKeySize
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  03      smSendSMMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendSingingInfo
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  00000018 00000000
  03      smSendSMMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000028 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    smPairingSendIdentityAddrInfo
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  0000002A 00000000
  03      smSendSMMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendIdentityInfo
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  00000018 00000000
  03      smSendSMMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000028 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    smPairingSendMasterID
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  0000003E 00000000
  03      smSendSMMsg
          | Stack used (prev) :  0000041B 0000006C
          | + function block  :  00000028 00000000
          |  Already listed
  02    smPairingSendEncInfo
        | Stack used (prev) :  00000443 0000006C
        | + function block  :  00000018 00000000
  02    smGenerateRandBuf
        | Stack used (prev) :  00000242 00000072
        | + function block  :  00000027 00000000
        |  Already listed
  02    linkDB_Find
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
        |  Already listed
  02    gapGetIRK
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
  02    gapGetDevAddress
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetDevAddressMode
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    gapGetSRK
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_mem_alloc
        | Stack used (prev) :  0000001C 00000004
        | + function block  :  0000001B 00000000
        |  Already listed
  02    osal_rand
        | Stack used (prev) :  00000242 0000006E
        | + function block  :  00000000 00000004
        |  Already listed
  02    osal_memset
        | Stack used (prev) :  0000022C 0000006A
        | + function block  :  0000001E 00000000
        |  Already listed
  01  smResponderSendNextKeyInfo
      | Stack used (prev) :  00000481 00000072
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000004A5 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_strlen::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_memcpy::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_revmemcpy::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_memdup::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_memcmp::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_memset::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  _ltoa::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_rand::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_allocate::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_deallocate::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_send::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_enqueue_push::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_receive::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_enqueue::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_push::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_msg_extract::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_set_event::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_clear_event::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_int_disable::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_init_system::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_start_system::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_run_system::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_isbufset::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalTimeUpdate::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalClockUpdate::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_mem_init::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_mem_kick::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_mem_alloc::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_mem_free::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_pwrmgr_init::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_pwrmgr_device::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_pwrmgr_task_state::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_pwrmgr_powerconserve::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalInitTasks::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalTimerInit::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalAddTimer::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalFindTimer::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalDeleteTimer::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_start_timerEx::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_start_reload_timer::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_stop_timerEx::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_get_timeoutEx::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osalTimerUpdate::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  osal_next_timeout::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  InitBoard::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  Onboard_rand::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  _itoa::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  OnBoard_SendKeys::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  OnBoard_KeyCallback::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  Batt_GetParameter::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  Batt_MeasLevel::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  battMeasure::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  DevInfo_SetParameter::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  01  GAP_DeviceInit::?relay
      | Stack used (prev) :  0000055A 00000072
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000055A 00000072


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000055A 00000072
  04        GATTServApp_ReadCharCfg
            | Stack used (prev) :  00000241 00000068
            | + function block  :  00000031 00000000
            |  Already listed
  05          gattServApp_FindServiceCBs
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  0000001D 00000002
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000577 00000074
            | + function block  :  00000031 00000000
  04        gattServApp_FindServiceCBs
            | Stack used (prev) :  0000055A 00000072
            | + function block  :  0000001D 00000002
            |  Already listed
  06            GATT_ServiceNumAttrs
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000002
  05          gattServiceLastHandle
              | Stack used (prev) :  00000564 00000074
              | + function block  :  0000002A 00000000
  05          gattServiceLastHandle
              | Stack used (prev) :  00000564 00000074
              | + function block  :  0000002A 00000000
              |  Already listed
  05          GATT_FindHandleUUID
              | Stack used (prev) :  00000290 00000069
              | + function block  :  00000064 00000000
              |  Already listed
  05          ATT_CompareUUID
              | Stack used (prev) :  00000254 00000069
              | + function block  :  0000003C 00000000
              |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  0000058E 00000074
            | + function block  :  00000030 00000000
  04        GATT_FindHandle
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000022 00000000
            |  Already listed
  04        ATT_CompareUUID
            | Stack used (prev) :  00000254 00000069
            | + function block  :  0000003C 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  05          strlen
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000000 00000002
              |  Already listed
  04        osal_strlen
            | Stack used (prev) :  0000055A 00000072
            | + function block  :  00000009 00000000
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000005BE 00000074
          | + function block  :  0000007B 00000000
  03      GATT_FindNextAttr
          | Stack used (prev) :  0000058E 00000074
          | + function block  :  00000030 00000000
          |  Already listed
  03      GATT_FindHandleUUID
          | Stack used (prev) :  00000290 00000069
          | + function block  :  00000064 00000000
          |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  07              HalFlashRead
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000F 00000001
  06            findItem
                | Stack used (prev) :  00000569 00000073
                | + function block  :  00000038 00000000
  06            HalFlashRead
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000F 00000001
                |  Already listed
  05          osal_snv_read
              | Stack used (prev) :  000005A1 00000073
              | + function block  :  0000001C 00000000
  10                    HalFlashRead
                        | Stack used (prev) :  0000055A 00000072
                        | + function block  :  0000000F 00000001
                        |  Already listed
  10                    osal_memcmp
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000011 00000000
                        |  Already listed
  09                  verifyWordM
                      | Stack used (prev) :  00000569 00000073
                      | + function block  :  0000003F 00000000
  09                  HalFlashWrite
                      | Stack used (prev) :  0000055A 00000072
                      | + function block  :  0000000E 00000001
  08                writeWord
                    | Stack used (prev) :  000005A8 00000073
                    | + function block  :  0000003C 00000000
  08                HalFlashRead
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  0000000F 00000001
                    |  Already listed
  07              xferItem
                  | Stack used (prev) :  000005E4 00000073
                  | + function block  :  00000042 00000000
  07              findItem
                  | Stack used (prev) :  00000569 00000073
                  | + function block  :  00000038 00000000
                  |  Already listed
  08                HalFlashErase
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  00000000 00000002
  08                HalFlashRead
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  0000000F 00000001
                    |  Already listed
  07              erasePage
                  | Stack used (prev) :  00000569 00000074
                  | + function block  :  00000032 00000000
  08                writeWord
                    | Stack used (prev) :  000005A8 00000073
                    | + function block  :  0000003C 00000000
                    |  Already listed
  07              setActivePage
                  | Stack used (prev) :  000005E4 00000073
                  | + function block  :  0000002E 00000000
  07              HalFlashRead
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000F 00000001
                  |  Already listed
  06            compactPage
                | Stack used (prev) :  00000626 00000074
                | + function block  :  00000040 00000000
  08                verifyWordM
                    | Stack used (prev) :  00000569 00000073
                    | + function block  :  0000003F 00000000
                    |  Already listed
  08                HalFlashWrite
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  0000000E 00000001
                    |  Already listed
  07              writeWordM
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003B 00000000
  07              writeWord
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003C 00000000
                  |  Already listed
  07              writeWord
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003C 00000000
                  |  Already listed
  07              writeWord
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003C 00000000
                  |  Already listed
  07              writeWord
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003C 00000000
                  |  Already listed
  06            writeItem
                | Stack used (prev) :  000005E3 00000073
                | + function block  :  00000040 00000000
  06            findItem
                | Stack used (prev) :  00000569 00000073
                | + function block  :  00000038 00000000
                |  Already listed
  07              writeWord
                  | Stack used (prev) :  000005A8 00000073
                  | + function block  :  0000003C 00000000
                  |  Already listed
  06            setXferPage
                | Stack used (prev) :  000005E4 00000073
                | + function block  :  0000002E 00000000
  06            HalFlashRead
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000F 00000001
                |  Already listed
  05          osal_snv_write
              | Stack used (prev) :  00000666 00000074
              | + function block  :  00000024 00000000
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000043 00000001
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000043 00000001
              |  Already listed
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000033 00000000
  05          gapBondMgrFindCharCfgItem
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000033 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  0000000A 00000000
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  0000068A 00000074
            | + function block  :  00000066 00000000
  04        gapBondMgrUpdateCharCfg
            | Stack used (prev) :  0000068A 00000074
            | + function block  :  00000066 00000000
            |  Already listed
  09                  smEncrypt
                      | Stack used (prev) :  0000024F 00000068
                      | + function block  :  00000080 00000000
                      |  Already listed
  09                  osal_memset
                      | Stack used (prev) :  0000022C 0000006A
                      | + function block  :  0000001E 00000000
                      |  Already listed
  09                  osal_revmemcpy
                      | Stack used (prev) :  0000022A 00000068
                      | + function block  :  0000000E 00000001
                      |  Already listed
  08                sm_ah
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  00000054 00000000
  08                osal_memcmp
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000011 00000000
                    |  Already listed
  08                osal_memcpy
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  0000001C 00000001
                    |  Already listed
  07              SM_ResolveRandomAddrs
                  | Stack used (prev) :  000005AE 00000072
                  | + function block  :  00000028 00000001
  06            GAP_ResolvePrivateAddr
                | Stack used (prev) :  000005D6 00000073
                | + function block  :  00000000 00000004
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  05          gapBondMgrResolvePrivateAddr
              | Stack used (prev) :  000005D6 00000077
              | + function block  :  00000040 00000000
  06            osal_memcmp
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000011 00000000
                |  Already listed
  05          gapBondMgrFindAddr
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000030 00000000
  06            osal_memcmp
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000011 00000000
                |  Already listed
  05          gapBondMgrFindReconnectAddr
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  0000001C 00000000
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          gapBondMgrGetPublicAddr
              | Stack used (prev) :  000005BD 00000073
              | + function block  :  00000042 00000000
  05          gapBondMgrGetPublicAddr
              | Stack used (prev) :  000005BD 00000073
              | + function block  :  00000042 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        GAPBondMgr_ResolveAddr
            | Stack used (prev) :  00000616 00000077
            | + function block  :  00000056 00000000
  03      GAPBondMgr_UpdateCharCfg
          | Stack used (prev) :  000006F0 00000077
          | + function block  :  00000037 00000000
  02    gapBondMgr_SyncCharCfg
        | Stack used (prev) :  00000727 00000077
        | + function block  :  00000034 00000000
  04        GAPBondMgr_UpdateCharCfg
            | Stack used (prev) :  000006F0 00000077
            | + function block  :  00000037 00000000
            |  Already listed
  03      gapBondMgr_ProcessGATTServMsg
          | Stack used (prev) :  00000727 00000077
          | + function block  :  00000021 00000000
  05          linkDB_PerformFunc
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000000 00000002
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          gapBondMgrSendServiceChange
              | Stack used (prev) :  00000501 0000006C
              | + function block  :  00000020 00000000
              |  Already listed
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_snv_write
                | Stack used (prev) :  00000666 00000074
                | + function block  :  00000024 00000000
                |  Already listed
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  05          gapBondMgrChangeState
              | Stack used (prev) :  0000068A 00000074
              | + function block  :  00000044 00000000
  05          gapBondMgrChangeState
              | Stack used (prev) :  0000068A 00000074
              | + function block  :  00000044 00000000
              |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000616 00000077
              | + function block  :  00000056 00000000
              |  Already listed
  04        GAPBondMgr_ServiceChangeInd
            | Stack used (prev) :  000006CE 00000077
            | + function block  :  00000025 00000000
  03      gapBondMgr_ProcessGATTMsg
          | Stack used (prev) :  000006F3 00000077
          | + function block  :  0000001B 00000000
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        GAP_NumActiveConnections
            | Stack used (prev) :  0000022A 0000006A
            | + function block  :  00000000 00000004
            |  Already listed
  04        GAP_PasscodeUpdate
            | Stack used (prev) :  00000499 00000072
            | + function block  :  00000056 00000000
            |  Already listed
  04        GAP_TerminateAuth
            | Stack used (prev) :  0000047A 0000006E
            | + function block  :  0000001A 00000000
            |  Already listed
  05          compactPage
              | Stack used (prev) :  00000626 00000074
              | + function block  :  00000040 00000000
              |  Already listed
  05          setXferPage
              | Stack used (prev) :  000005E4 00000073
              | + function block  :  0000002E 00000000
              |  Already listed
  04        osal_snv_compact
            | Stack used (prev) :  00000666 00000074
            | + function block  :  00000028 00000000
  04        osal_snv_write
            | Stack used (prev) :  00000666 00000074
            | + function block  :  00000024 00000000
            |  Already listed
  07              smSendFailAndEnd
                  | Stack used (prev) :  00000443 0000006E
                  | + function block  :  00000037 00000000
                  |  Already listed
  07              smUint8ToAuthReq
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000A 00000000
                  |  Already listed
  06            smProcessPairingReq
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  00000013 00000002
  07              smFreePairingParams
                  | Stack used (prev) :  0000022A 0000006A
                  | + function block  :  00000012 00000004
                  |  Already listed
  07              smGeneratePairingReqRsp
                  | Stack used (prev) :  00000443 0000006C
                  | + function block  :  00000038 00000000
                  |  Already listed
  07              GAP_GetParamValue
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000014 00000002
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  0000001C 00000004
                  | + function block  :  0000001B 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  0000022C 0000006A
                  | + function block  :  0000001E 00000000
                  |  Already listed
  06            SM_StartPairing
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  00000014 00000001
  06            linkDB_Find
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            gapFreeAuthLink
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            osal_mem_alloc
                | Stack used (prev) :  0000001C 00000004
                | + function block  :  0000001B 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          GAP_Authenticate
              | Stack used (prev) :  0000056E 00000074
              | + function block  :  00000020 00000000
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        gapBondMgrAuthenticate
            | Stack used (prev) :  0000058E 00000074
            | + function block  :  00000072 00000000
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_snv_write
                | Stack used (prev) :  00000666 00000074
                | + function block  :  00000024 00000000
                |  Already listed
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          gapBondMgrEraseBonding
              | Stack used (prev) :  0000068A 00000074
              | + function block  :  00000097 00000000
  04        gapBondMgrEraseAllBondings
            | Stack used (prev) :  00000721 00000074
            | + function block  :  00000038 00000000
  05          osal_snv_read
              | Stack used (prev) :  000005A1 00000073
              | + function block  :  0000001C 00000000
              |  Already listed
  09                  phyFindWlEntry
                      | Stack used (prev) :  0000055A 00000072
                      | + function block  :  00000017 00000000
  09                  PHY_ClearBlacklistIndex
                      | Stack used (prev) :  0000055A 00000072
                      | + function block  :  00000016 00000000
  09                  PHY_SetBlacklistIndex
                      | Stack used (prev) :  0000055A 00000072
                      | + function block  :  00000016 00000000
  08                PHY_AddWlEntry
                    | Stack used (prev) :  00000571 00000072
                    | + function block  :  00000018 00000001
  08                llCheckWhiteListUsage
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  00000000 00000002
  07              LL_AddWhiteListDevice
                  | Stack used (prev) :  00000589 00000074
                  | + function block  :  00000012 00000000
  07              HCI_CommandCompleteEvent
                  | Stack used (prev) :  0000018F 00000028
                  | + function block  :  0000002B 00000001
                  |  Already listed
  06            HCI_LE_AddWhiteListCmd
                | Stack used (prev) :  0000059B 00000074
                | + function block  :  00000014 00000000
  08                PHY_ClearWhitelist
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  00000000 00000002
  08                llCheckWhiteListUsage
                    | Stack used (prev) :  0000055A 00000072
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              LL_ClearWhiteList
                  | Stack used (prev) :  0000055A 00000074
                  | + function block  :  00000000 00000004
  07              HCI_CommandCompleteEvent
                  | Stack used (prev) :  0000018F 00000028
                  | + function block  :  0000002B 00000001
                  |  Already listed
  06            HCI_LE_ClearWhiteListCmd
                | Stack used (prev) :  0000055A 00000078
                | + function block  :  00000002 00000004
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  05          gapBondMgr_SyncWhiteList
              | Stack used (prev) :  000005AF 0000007C
              | + function block  :  00000034 00000000
  07              ggs_SetAttrWPermit
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000E 00000002
  07              ggs_SetAttrWPermit
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000E 00000002
                  |  Already listed
  07              ggs_SetAttrWPermit
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000E 00000002
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  0000022C 0000006A
                  | + function block  :  0000001E 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            GGS_SetParameter
                | Stack used (prev) :  00000568 00000074
                | + function block  :  0000001C 00000000
  07              osal_isbufset
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000A 00000000
                  |  Already listed
  06            gapBondMgrBondTotal
                | Stack used (prev) :  00000564 00000072
                | + function block  :  00000020 00000000
  05          gapBondSetupPrivFlag
              | Stack used (prev) :  00000584 00000074
              | + function block  :  00000024 00000004
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        gapBondMgrReadBonds
            | Stack used (prev) :  000005E3 0000007C
            | + function block  :  0000003E 00000000
  05          osal_snv_write
              | Stack used (prev) :  00000666 00000074
              | + function block  :  00000024 00000000
              |  Already listed
  05          gapBondMgr_SyncWhiteList
              | Stack used (prev) :  000005AF 0000007C
              | + function block  :  00000034 00000000
              |  Already listed
  05          gapBondSetupPrivFlag
              | Stack used (prev) :  00000584 00000074
              | + function block  :  00000024 00000004
              |  Already listed
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  05          gapBondMgrFindEmpty
              | Stack used (prev) :  00000564 00000072
              | + function block  :  00000034 00000000
  05          gapBondMgrFindAddr
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000030 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        gapBondMgrAddBond
            | Stack used (prev) :  0000068A 0000007C
            | + function block  :  00000074 00000000
  04        GAPBondMgr_ResolveAddr
            | Stack used (prev) :  00000616 00000077
            | + function block  :  00000056 00000000
            |  Already listed
  04        GAPBondMgr_ResolveAddr
            | Stack used (prev) :  00000616 00000077
            | + function block  :  00000056 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000017 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      GAPBondMgr_ProcessGAPMsg
          | Stack used (prev) :  00000759 0000007C
          | + function block  :  00000055 00000000
  02    gapBondMgr_ProcessOSALMsg
        | Stack used (prev) :  000007AE 0000007C
        | + function block  :  00000020 00000000
  03      osal_clear_event
          | Stack used (prev) :  000001F0 00000054
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_set_event
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  00000017 00000000
          |  Already listed
  03      osal_msg_extract
          | Stack used (prev) :  0000055A 00000072
          | + function block  :  0000001A 00000000
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  GAPBondMgr_ProcessEvent
      | Stack used (prev) :  000007CE 0000007C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_LinkEst::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_ResolveAddr::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_ServiceChangeInd::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_UpdateCharCfg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_Register::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_PasscodeRsp::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_ProcessGAPMsg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrChangeState::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrUpdateCharCfg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrFindCharCfgItem::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrInvertCharCfgItem::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrAddBond::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrGetStateFlags::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrGetPublicAddr::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrFindReconnectAddr::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrFindAddr::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrResolvePrivateAddr::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrReadBonds::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrFindEmpty::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrBondTotal::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrEraseAllBondings::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrEraseBonding::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_Init::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  GAPBondMgr_ProcessEvent::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgr_ProcessOSALMsg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgr_ProcessGATTMsg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgr_ProcessGATTServMsg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrSendServiceChange::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondSetupPrivFlag::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrAuthenticate::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrSlaveSecurityReq::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgrBondReq::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgr_SyncWhiteList::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  gapBondMgr_SyncCharCfg::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  HalAdcInit::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  HalAdcRead::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  HalAdcSetReference::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  aesDmaInit::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  HalAesInit::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  01  HalDmaInit::?relay
      | Stack used (prev) :  000007EA 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000007EA 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000007EA 0000007C
  02    halRestoreSleepLevel
        | Stack used (prev) :  000007EA 0000007C
        | + function block  :  00000000 00000000
  04        HalAdcRead
            | Stack used (prev) :  000007EA 0000007C
            | + function block  :  0000000C 00000000
  03      halGetJoyKeyInput
          | Stack used (prev) :  000007F6 0000007C
          | + function block  :  0000001B 00000000
  02    HalKeyPoll
        | Stack used (prev) :  00000811 0000007C
        | + function block  :  00000012 00000000
  02    osal_stop_timerEx
        | Stack used (prev) :  000001FE 00000056
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000007EA 0000007C
        | + function block  :  0000000A 00000000
  02    osal_clear_event
        | Stack used (prev) :  000001F0 00000054
        | + function block  :  00000017 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  Hal_ProcessEvent
      | Stack used (prev) :  00000823 0000007C
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  Hal_Init::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalDriverInit::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  Hal_ProcessEvent::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  Hal_ProcessPoll::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalFlashRead::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalFlashWrite::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalFlashErase::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyInit::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyConfig::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyRead::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyPoll::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halGetJoyKeyInput::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halProcessKeyInterrupt::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyEnterSleep::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalKeyExitSleep::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalLcdWriteString::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalLcdWriteStringValue::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalLedSet::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalLedExitSleep::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halSetSleepMode::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halSleep::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halSleepSetTimer::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halSleepReadTimer::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  halRestoreSleepLevel::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTInitDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTPollDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTRxAvailDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTBusyDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUART_DMAIsrDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTInitISR::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTPollISR::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTInit::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTPoll::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  HalUARTIsrDMA::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  osal_bm_alloc::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  osal_bm_free::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  osal_bm_adjust_header::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  bm_desc_from_payload::?relay
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000083F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000083F 0000007C
  01  osal_CbTimerProcessEvent
      | Stack used (prev) :  0000083F 0000007C
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_CbTimerInit::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_CbTimerProcessEvent::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_CbTimerStart::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_CbTimerStop::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  initNV::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  setActivePage::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  setXferPage::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  erasePage::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  cleanErasedPage::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  findOffset::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  findItem::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  writeItem::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  xferItem::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  compactPage::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  verifyWordM::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  writeWord::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  writeWordM::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_snv_init::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_snv_write::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_snv_read::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  01  osal_snv_compact::?relay
      | Stack used (prev) :  0000084F 0000007C
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000084F 0000007C


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000084F 0000007C
  03      LL_ReadRssi
          | Stack used (prev) :  0000084F 0000007C
          | + function block  :  00000000 00000003
  03      HCI_CommandCompleteEvent
          | Stack used (prev) :  0000018F 00000028
          | + function block  :  0000002B 00000001
          |  Already listed
  02    HCI_ReadRssiCmd
        | Stack used (prev) :  0000084F 0000007F
        | + function block  :  0000001A 00000000
  03      GAP_NumActiveConnections
          | Stack used (prev) :  0000022A 0000006A
          | + function block  :  00000000 00000004
          |  Already listed
  03      gapFreeAdvertState
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  03      gapSetAdvParams
          | Stack used (prev) :  00000290 0000006E
          | + function block  :  00000028 00000000
          |  Already listed
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  03      osal_start_reload_timer
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000001A 00000000
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  0000001C 00000004
          | + function block  :  0000001B 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    GAP_MakeDiscoverable
        | Stack used (prev) :  0000084F 0000007C
        | + function block  :  00000010 00000001
  05          linkDB_State
              | Stack used (prev) :  0000023E 0000006A
              | + function block  :  00000014 00000000
              |  Already listed
  05          l2capFreeChannel
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000012 00000002
              |  Already listed
  05          l2capAllocChannel
              | Stack used (prev) :  0000084F 0000007C
              | + function block  :  0000001E 00000001
  06            L2CAP_bm_alloc
                | Stack used (prev) :  0000025A 0000006C
                | + function block  :  0000002C 00000000
                |  Already listed
  06            l2capEncapSendData
                | Stack used (prev) :  000003CF 0000006B
                | + function block  :  00000038 00000000
                |  Already listed
  06            osal_bm_free
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000000C 00000000
                |  Already listed
  05          l2capSendCmd
              | Stack used (prev) :  0000084F 0000007C
              | + function block  :  0000002E 00000001
  05          osal_CbTimerStart
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  0000001B 00000001
              |  Already listed
  04        l2capSendReq
            | Stack used (prev) :  0000087D 0000007C
            | + function block  :  00000030 00000001
  03      L2CAP_ConnParamUpdateReq
          | Stack used (prev) :  000008AD 0000007D
          | + function block  :  0000001C 00000000
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000077 00000005
          | + function block  :  00000030 00000000
          |  Already listed
  02    gapRole_startConnUpdate
        | Stack used (prev) :  000008C9 0000007C
        | + function block  :  00000046 00000002
  04        gapRole_startConnUpdate
            | Stack used (prev) :  000008C9 0000007C
            | + function block  :  00000046 00000002
            |  Already listed
  04        osal_stop_timerEx
            | Stack used (prev) :  000001FE 00000056
            | + function block  :  0000001C 00000000
            |  Already listed
  03      GAPRole_SendUpdateParam
          | Stack used (prev) :  0000090F 0000007E
          | + function block  :  00000022 00000000
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  000002D6 0000006B
          | + function block  :  00000012 00000004
          |  Already listed
  02    gapRole_HandleParamUpdateNoSuccess
        | Stack used (prev) :  00000931 0000007E
        | + function block  :  00000022 00000004
  03      GAP_GetParamValue
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000014 00000002
          |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            LL_SetScanRspData
                | Stack used (prev) :  0000084F 0000007C
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  0000018F 00000028
                | + function block  :  0000002B 00000001
                |  Already listed
  05          HCI_LE_SetScanRspDataCmd
              | Stack used (prev) :  0000085B 0000007C
              | + function block  :  00000014 00000001
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            LL_SetAdvData
                | Stack used (prev) :  0000084F 0000007C
                | + function block  :  0000000C 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  0000018F 00000028
                | + function block  :  0000002B 00000001
                |  Already listed
  05          HCI_LE_SetAdvDataCmd
              | Stack used (prev) :  0000085B 0000007C
              | + function block  :  00000014 00000001
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        GAP_UpdateAdvertisingData
            | Stack used (prev) :  0000086F 0000007C
            | + function block  :  00000024 00000001
  04        GAP_GetParamValue
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        osal_snv_write
            | Stack used (prev) :  00000666 00000074
            | + function block  :  00000024 00000000
            |  Already listed
  04        GAPBondMgr_ProcessGAPMsg
            | Stack used (prev) :  00000759 0000007C
            | + function block  :  00000055 00000000
            |  Already listed
  05          GATTServApp_SendServiceChangedInd
              | Stack used (prev) :  000004EF 0000006C
              | + function block  :  00000012 00000000
              |  Already listed
  07              gattServApp_FindServiceCBs
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000001D 00000002
                  |  Already listed
  07              GATT_FindHandle
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000022 00000000
                  |  Already listed
  06            GATTServApp_WriteAttr
                | Stack used (prev) :  0000084F 0000007C
                | + function block  :  00000034 00000000
  05          GATTServApp_UpdateCharCfg
              | Stack used (prev) :  00000883 0000007C
              | + function block  :  00000026 00000001
  06            linkDB_Find
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          GAP_Signable
              | Stack used (prev) :  0000084F 0000007C
              | + function block  :  00000010 00000000
  05          osal_snv_read
              | Stack used (prev) :  000005A1 00000073
              | + function block  :  0000001C 00000000
              |  Already listed
  07              smStartEncryption
                  | Stack used (prev) :  0000084F 0000007C
                  | + function block  :  00000016 00000000
  07              linkDB_Find
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000014 00000002
                  |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  00000015 00000000
                  |  Already listed
  07              osal_memdup
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000010 00000000
                  |  Already listed
  06            GAP_Bond
                | Stack used (prev) :  00000865 0000007C
                | + function block  :  00000029 00000000
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          gapBondMgrBondReq
              | Stack used (prev) :  0000088E 0000007C
              | + function block  :  00000097 00000000
  07              smSendSMMsg
                  | Stack used (prev) :  0000041B 0000006C
                  | + function block  :  00000028 00000000
                  |  Already listed
  07              smUint8ToAuthReq
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  0000000A 00000000
                  |  Already listed
  07              linkDB_Find
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000014 00000002
                  |  Already listed
  06            GAP_SendSlaveSecurityRequest
                | Stack used (prev) :  0000084F 0000007C
                | + function block  :  00000010 00000000
  05          gapBondMgrSlaveSecurityReq
              | Stack used (prev) :  0000085F 0000007C
              | + function block  :  0000004C 00000000
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  05          gapBondMgrGetStateFlags
              | Stack used (prev) :  0000084F 0000007C
              | + function block  :  00000051 00000000
  05          gapBondMgrInvertCharCfgItem
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  00000043 00000001
              |  Already listed
  05          GAPBondMgr_ResolveAddr
              | Stack used (prev) :  00000616 00000077
              | + function block  :  00000056 00000000
              |  Already listed
  05          osal_isbufset
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  0000000A 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        GAPBondMgr_LinkEst
            | Stack used (prev) :  00000925 0000007C
            | + function block  :  00000077 00000002
  05          osalFindTimer
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001D 00000000
              |  Already listed
  04        osal_get_timeoutEx
            | Stack used (prev) :  0000084F 0000007C
            | + function block  :  00000014 00000000
  04        osal_stop_timerEx
            | Stack used (prev) :  000001FE 00000056
            | + function block  :  0000001C 00000000
            |  Already listed
  04        osal_start_timerEx
            | Stack used (prev) :  00000077 00000005
            | + function block  :  00000030 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000017 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gapRole_ProcessGAPMsg
          | Stack used (prev) :  0000099C 0000007E
          | + function block  :  00000038 00000000
  03      GAPRole_TerminateConnection
          | Stack used (prev) :  000002D6 0000006B
          | + function block  :  00000012 00000004
          |  Already listed
  03      osal_stop_timerEx
          | Stack used (prev) :  000001FE 00000056
          | + function block  :  0000001C 00000000
          |  Already listed
  03      osal_start_timerEx
          | Stack used (prev) :  00000077 00000005
          | + function block  :  00000030 00000000
          |  Already listed
  02    gapRole_ProcessOSALMsg
        | Stack used (prev) :  000009D4 0000007E
        | + function block  :  0000003E 00000000
  02    osal_snv_write
        | Stack used (prev) :  00000666 00000074
        | + function block  :  00000024 00000000
        |  Already listed
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  GAPRole_ProcessEvent
      | Stack used (prev) :  00000A12 00000082
      | + function block  :  00000034 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_SetParameter::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_GetParameter::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_StartDevice::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_TerminateConnection::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_Init::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_ProcessEvent::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  gapRole_ProcessOSALMsg::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  gapRole_ProcessGAPMsg::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  gapRole_SetupGAP::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  gapRole_HandleParamUpdateNoSuccess::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  gapRole_startConnUpdate::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  01  GAPRole_SendUpdateParam::?relay
      | Stack used (prev) :  00000A46 00000082
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A46 00000082


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000A46 00000082
  03      bubble
          | Stack used (prev) :  00000A46 00000082
          | + function block  :  00000021 00000002
  05          HalAdcSetReference
              | Stack used (prev) :  00000A46 00000082
              | + function block  :  00000000 00000002
  05          HalAdcRead
              | Stack used (prev) :  000007EA 0000007C
              | + function block  :  0000000C 00000000
              |  Already listed
  04        battMeasure
            | Stack used (prev) :  00000A46 00000082
            | + function block  :  0000002E 00000002
  03      Batt_MeasLevel
          | Stack used (prev) :  00000A74 00000084
          | + function block  :  00000012 00000000
  03      Batt_GetParameter
          | Stack used (prev) :  00000A46 00000082
          | + function block  :  00000009 00000001
  02    read_batt_level
        | Stack used (prev) :  00000A86 00000084
        | + function block  :  00000028 00000000
  03      read_batt_level
          | Stack used (prev) :  00000A86 00000084
          | + function block  :  00000028 00000000
          |  Already listed
  04        bubble
            | Stack used (prev) :  00000A46 00000082
            | + function block  :  00000021 00000002
            |  Already listed
  04        HalAdcSetReference
            | Stack used (prev) :  00000A46 00000082
            | + function block  :  00000000 00000002
            |  Already listed
  04        HalAdcRead
            | Stack used (prev) :  000007EA 0000007C
            | + function block  :  0000000C 00000000
            |  Already listed
  03      read_temperature
          | Stack used (prev) :  00000A67 00000082
          | + function block  :  0000002F 00000002
  03      GAPRole_GetParameter
          | Stack used (prev) :  0000023E 0000006A
          | + function block  :  0000001C 00000000
          |  Already listed
  04        GAP_EndDiscoverable
            | Stack used (prev) :  00000308 0000006E
            | + function block  :  0000001E 00000000
            |  Already listed
  04        GAP_UpdateAdvertisingData
            | Stack used (prev) :  0000086F 0000007C
            | + function block  :  00000024 00000001
            |  Already listed
  04        GAP_SetParamValue
            | Stack used (prev) :  00000A46 00000082
            | + function block  :  00000000 00000002
  04        gapRole_startConnUpdate
            | Stack used (prev) :  000008C9 0000007C
            | + function block  :  00000046 00000002
            |  Already listed
  04        osal_get_timeoutEx
            | Stack used (prev) :  0000084F 0000007C
            | + function block  :  00000014 00000000
            |  Already listed
  04        osal_stop_timerEx
            | Stack used (prev) :  000001FE 00000056
            | + function block  :  0000001C 00000000
            |  Already listed
  04        osal_start_timerEx
            | Stack used (prev) :  00000077 00000005
            | + function block  :  00000030 00000000
            |  Already listed
  04        osal_set_event
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000017 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      GAPRole_SetParameter
          | Stack used (prev) :  00000A46 00000084
          | + function block  :  00000024 00000000
  02    performPeriodicTask
        | Stack used (prev) :  00000AAE 00000084
        | + function block  :  00000024 00000000
  02    simpleBLEPeripheral_ProcessOSALMsg
        | Stack used (prev) :  00000A46 00000082
        | + function block  :  0000000E 00000000
  06            smRegisterResponder
                | Stack used (prev) :  00000A46 00000082
                | + function block  :  00000000 00000002
  05          SM_ResponderInit
              | Stack used (prev) :  00000A46 00000084
              | + function block  :  00000000 00000004
  06            gapRegisterPeripheral
                | Stack used (prev) :  00000A46 00000082
                | + function block  :  00000000 00000002
  06            osal_mem_free
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  00000015 00000000
                |  Already listed
  06            osal_mem_alloc
                | Stack used (prev) :  0000001C 00000004
                | + function block  :  0000001B 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          GAP_PeriDevMgrInit
              | Stack used (prev) :  00000A46 00000084
              | + function block  :  00000012 00000000
  06            smGenerateRandBuf
                | Stack used (prev) :  00000242 00000072
                | + function block  :  00000027 00000000
                |  Already listed
  06            osal_isbufset
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000A 00000000
                |  Already listed
  05          GAP_SecParamsInit
              | Stack used (prev) :  00000A46 00000082
              | + function block  :  0000000B 00000000
  07              LL_ReadBDADDR
                  | Stack used (prev) :  00000A46 00000082
                  | + function block  :  00000000 00000003
  07              HCI_CommandCompleteEvent
                  | Stack used (prev) :  0000018F 00000028
                  | + function block  :  0000002B 00000001
                  |  Already listed
  06            HCI_ReadBDADDRCmd
                | Stack used (prev) :  00000A46 00000085
                | + function block  :  0000000E 00000004
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          GAP_ParamsInit
              | Stack used (prev) :  00000A54 00000089
              | + function block  :  00000012 00000000
  04        GAP_DeviceInit
            | Stack used (prev) :  00000A66 00000089
            | + function block  :  00000026 00000000
  03      gapRole_SetupGAP
          | Stack used (prev) :  00000A8C 00000089
          | + function block  :  00000025 00000000
  02    GAPRole_StartDevice
        | Stack used (prev) :  00000AB1 00000089
        | + function block  :  00000012 00000000
  03      GATTServApp_RegisterForMsg
          | Stack used (prev) :  00000A46 00000082
          | + function block  :  00000000 00000002
  03      GAP_SetParamValue
          | Stack used (prev) :  00000A46 00000082
          | + function block  :  00000000 00000002
          |  Already listed
  02    GAPBondMgr_Register
        | Stack used (prev) :  00000A46 00000084
        | + function block  :  00000012 00000000
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_pwrmgr_device
        | Stack used (prev) :  00000A46 00000082
        | + function block  :  00000000 00000002
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  SimpleBLEPeripheral_ProcessEvent
      | Stack used (prev) :  00000AD2 00000089
      | + function block  :  0000001C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  SimpleBLEPeripheral_Init::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  SimpleBLEPeripheral_ProcessEvent::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  simpleBLEPeripheral_ProcessOSALMsg::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  peripheralStateNotificationCB::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  performPeriodicTask::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  simpleProfileChangeCB::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ProcessPasscodeCB::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ProcessPairStateCB::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  read_temperature::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  read_batt_level::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  bubble::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  SimpleProfile_RegisterAppCBs::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  SimpleProfile_SetParameter::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  SimpleProfile_GetParameter::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ErrorRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ExchangeMTURsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_FindInfoRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_FindByTypeValueRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ReadByTypeRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ReadRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ReadBlobRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ReadMultiRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ReadByGrpTypeRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_WriteRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_PrepareWriteRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_ExecuteWriteRsp::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_HandleValueNoti::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_HandleValueInd::?relay
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AEE 00000089


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AEE 00000089
  01  ATT_BuildErrorRsp
      | Stack used (prev) :  00000AEE 00000089
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000AF7 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000AF7 0000008A
  01  ATT_ParseExchangeMTUReq
      | Stack used (prev) :  00000AF7 0000008A
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B04 0000008A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B04 0000008A
  01  ATT_BuildExchangeMTURsp
      | Stack used (prev) :  00000B04 0000008A
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B04 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B04 0000008D
  01  ATT_ParseFindInfoReq
      | Stack used (prev) :  00000B04 0000008D
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B11 0000008D


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B11 0000008D
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildFindInfoRsp
      | Stack used (prev) :  00000B11 0000008D
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B25 0000008E


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B25 0000008E
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_ParseFindByTypeValueReq
      | Stack used (prev) :  00000B25 0000008E
      | + function block  :  00000014 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B39 0000008F


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B39 0000008F
  01  ATT_BuildFindByTypeValueRsp
      | Stack used (prev) :  00000B39 0000008F
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B44 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B44 00000090
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_ParseReadByTypeReq
      | Stack used (prev) :  00000B44 00000090
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B54 00000090


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B54 00000090
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildReadByTypeRsp
      | Stack used (prev) :  00000B54 00000090
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B60 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B60 00000091
  01  ATT_ParseReadReq
      | Stack used (prev) :  00000B60 00000091
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B6D 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B6D 00000091
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildReadRsp
      | Stack used (prev) :  00000B6D 00000091
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B79 00000091


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B79 00000091
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_ParseWriteReq
      | Stack used (prev) :  00000B79 00000091
      | + function block  :  00000012 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B8B 00000092


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B8B 00000092
  01  ATT_ParseReadBlobReq
      | Stack used (prev) :  00000B8B 00000092
      | + function block  :  0000000D 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B98 00000092


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000B98 00000092
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildReadBlobRsp
      | Stack used (prev) :  00000B98 00000092
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BA4 00000092


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BA4 00000092
  01  ATT_ParseReadMultiReq
      | Stack used (prev) :  00000BA4 00000092
      | + function block  :  0000000E 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BB2 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BB2 00000093
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildReadMultiRsp
      | Stack used (prev) :  00000BB2 00000093
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BBE 00000093


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BBE 00000093
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildReadByGrpTypeRsp
      | Stack used (prev) :  00000BBE 00000093
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BCA 00000094


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BCA 00000094
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_ParsePrepareWriteReq
      | Stack used (prev) :  00000BCA 00000094
      | + function block  :  00000010 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BDA 00000095


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BDA 00000095
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildPrepareWriteRsp
      | Stack used (prev) :  00000BDA 00000095
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE6 00000096


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BE6 00000096
  01  ATT_ParseExecuteWriteReq
      | Stack used (prev) :  00000BE6 00000096
      | + function block  :  00000004 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BEA 00000099


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BEA 00000099
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  ATT_BuildHandleValueInd
      | Stack used (prev) :  00000BEA 00000099
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParsePacket::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildErrorRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseExchangeMTUReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildExchangeMTURsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseFindInfoReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildFindInfoRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseFindByTypeValueReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildFindByTypeValueRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseReadByTypeReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildReadByTypeRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseReadReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildReadRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseWriteReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseReadBlobReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildReadBlobRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseReadMultiReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildReadMultiRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildReadByGrpTypeRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParsePrepareWriteReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildPrepareWriteRsp::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ParseExecuteWriteReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_BuildHandleValueInd::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  attSendMsg::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_CompareUUID::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  ATT_ConvertUUIDto128::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_SetParamValue::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_GetParamValue::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_ParamsInit::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_SecParamsInit::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapReadBD_ADDRStatus::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapReadBufSizeCmdStatus::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessNewAddr::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapAddAddrAdj::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapDetermineAddrType::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessRandomAddrComplete::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapGetSRK::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapGetSignCounter::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapIncSignCounter::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapUpdateConnSignCounter::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapGetDevAddressMode::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapGetDevAddress::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapGetIRK::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSendDeviceInitDoneEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_ResolvePrivateAddr::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapIsAdvertising::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapValidADType::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapFindADType::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_TerminateLinkReq::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_Signable::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_Authenticate::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_TerminateAuth::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_PasscodeUpdate::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_Bond::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessConnectionCompleteEvt::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessConnUpdateCompleteEvt::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessDisconnectCompleteEvt::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  sendEstLinkEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  sendTerminateEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSendLinkUpdateEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  disconnectNext::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  sendAuthEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapFreeAuthLink::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapFreeEstLink::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSendBondCompleteEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSendPairingReqEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapPasskeyNeededCB::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapPairingCompleteCB::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_MakeDiscoverable::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_UpdateAdvertisingData::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_EndDiscoverable::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_PeriDevMgrInit::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapPeriProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSetAdvParams::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSetAdvParamsStatus::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapWriteAdvEnableStatus::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapWriteAdvDataStatus::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapProcessAdvertisingEvt::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapSendMakeDiscEvent::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  gapFreeAdvertState::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  isLimitedDiscoverableMode::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  01  GAP_SendSlaveSecurityRequest::?relay
      | Stack used (prev) :  00000BF6 0000009A
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF6 0000009A


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000BF6 0000009A
  03      smGenerateRandBuf
          | Stack used (prev) :  00000242 00000072
          | + function block  :  00000027 00000000
          |  Already listed
  03      sm_ah
          | Stack used (prev) :  0000055A 00000072
          | + function block  :  00000054 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    SM_CalcRandomAddr
        | Stack used (prev) :  00000BF6 0000009A
        | + function block  :  00000011 00000001
  04        l2capSendCmd
            | Stack used (prev) :  0000084F 0000007C
            | + function block  :  0000002E 00000001
            |  Already listed
  03      L2CAP_CmdReject
          | Stack used (prev) :  00000BF6 0000009A
          | + function block  :  0000000E 00000000
  05          osal_start_reload_timer
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  0000001A 00000000
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        gapProcessRandomAddrComplete
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000010 00000001
  06            osal_msg_send
                | Stack used (prev) :  00000149 00000029
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000000C 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  00000018 00000001
  04        gapReadBufSizeCmdStatus
            | Stack used (prev) :  00000C0E 0000009B
            | + function block  :  00000012 00000000
  06            HCI_CommandCompleteEvent
                | Stack used (prev) :  0000018F 00000028
                | + function block  :  0000002B 00000001
                |  Already listed
  05          HCI_LE_ReadBufSizeCmd
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  00000004 00000002
  05          gapSendDeviceInitDoneEvent
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  00000018 00000001
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        gapReadBD_ADDRStatus
            | Stack used (prev) :  00000C0E 0000009C
            | + function block  :  00000014 00000000
  03      gapProcessHCICmdCompleteEvt
          | Stack used (prev) :  00000C22 0000009C
          | + function block  :  00000028 00000000
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  05          reportStatusChange
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  0000001E 00000000
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          osal_mem_free
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000015 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        linkDB_Remove
            | Stack used (prev) :  00000C14 0000009A
            | + function block  :  00000014 00000000
  04        gapFreeAuthLink
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        disconnectNext
            | Stack used (prev) :  00000294 0000006B
            | + function block  :  0000002A 00000000
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000024 00000001
  03      gapProcessDisconnectCompleteEvt
          | Stack used (prev) :  00000C28 0000009B
          | + function block  :  0000001C 00000000
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  04        gapSendLinkUpdateEvent
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000021 00000001
  03      gapProcessConnUpdateCompleteEvt
          | Stack used (prev) :  00000C17 0000009B
          | + function block  :  0000001A 00000000
  05          reportStatusChange
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        linkDB_Add
            | Stack used (prev) :  00000C14 0000009A
            | + function block  :  0000002C 00000001
  05          osal_mem_free
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000015 00000000
              |  Already listed
  04        gapFreeEstLink
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000016 00000002
  04        disconnectNext
            | Stack used (prev) :  00000294 0000006B
            | + function block  :  0000002A 00000000
            |  Already listed
  04        sendTerminateEvent
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000024 00000001
            |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        sendEstLinkEvent
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  0000003A 00000001
  04        gapDetermineAddrType
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000000 00000002
  03      gapProcessConnectionCompleteEvt
          | Stack used (prev) :  00000C40 0000009C
          | + function block  :  00000034 00000000
  02    gapProcessOSALMsg
        | Stack used (prev) :  00000C74 0000009C
        | + function block  :  00000032 00000000
  02    gapIsAdvertising
        | Stack used (prev) :  00000BF6 0000009A
        | + function block  :  00000000 00000002
  02    gapGetIRK
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  04        LL_SetRandomAddress
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  00000000 00000002
  04        HCI_CommandCompleteEvent
            | Stack used (prev) :  0000018F 00000028
            | + function block  :  0000002B 00000001
            |  Already listed
  03      HCI_LE_SetRandomAddressCmd
          | Stack used (prev) :  00000BF6 0000009C
          | + function block  :  00000002 00000004
  03      gapAddAddrAdj
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000A 00000002
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    gapProcessNewAddr
        | Stack used (prev) :  00000BF8 000000A0
        | + function block  :  00000028 00000000
  02    GAP_GetParamValue
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000014 00000002
        |  Already listed
  02    osal_stop_timerEx
        | Stack used (prev) :  000001FE 00000056
        | + function block  :  0000001C 00000000
        |  Already listed
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_send
        | Stack used (prev) :  00000149 00000029
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  GAP_ProcessEvent
      | Stack used (prev) :  00000CA6 000000A0
      | + function block  :  00000024 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GAP_RegisterForHCIMsgs::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GAP_Init::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GAP_ProcessEvent::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GAP_NumActiveConnections::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gapProcessOSALMsg::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gapProcessHCICmdCompleteEvt::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gapRegisterPeripheral::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GGS_SetParameter::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  ggs_SetAttrWPermit::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_InitServer::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_RegisterForReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_VerifyReadPermissions::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_VerifyWritePermissions::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_ServiceChangedInd::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_FindHandleUUID::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_FindHandle::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_FindNextAttr::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_ServiceNumAttrs::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_Indication::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  GATT_Notification::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattServiceLastHandle::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattServerProcessMsgCB::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessExchangeMTUReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessFindInfoReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessReadReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessReadMultiReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessWriteReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattGetServerStatus::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattFindServerInfo::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattServerHandleTimerCB::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  01  gattServerHandleConnStatusCB::?relay
      | Stack used (prev) :  00000CCA 000000A0
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CCA 000000A0


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000CCA 000000A0
  05          sm_CMAC
              | Stack used (prev) :  000002B6 0000006A
              | + function block  :  00000097 00000000
              |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  06            linkDB_Find
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            GAP_GetParamValue
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000014 00000002
                |  Already listed
  06            osal_msg_send
                | Stack used (prev) :  00000149 00000029
                | + function block  :  00000012 00000000
                |  Already listed
  06            osal_msg_allocate
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000000C 00000000
                |  Already listed
  06            osal_memcpy
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  0000001C 00000001
                |  Already listed
  05          gapUpdateConnSignCounter
              | Stack used (prev) :  00000CCA 000000A0
              | + function block  :  00000018 00000001
  05          osal_mem_free
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000015 00000000
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001B 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  05          osal_memcmp
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000011 00000000
              |  Already listed
  05          osal_revmemcpy
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  0000000E 00000001
              |  Already listed
  04        SM_VerifyAuthenSig
            | Stack used (prev) :  00000CE2 000000A0
            | + function block  :  00000081 00000001
  03      ATT_ParsePacket
          | Stack used (prev) :  00000D63 000000A0
          | + function block  :  00000022 00000001
  03      ATT_ErrorRsp
          | Stack used (prev) :  0000044D 0000006C
          | + function block  :  00000018 00000000
          |  Already listed
  03      osal_bm_free
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000C 00000000
          |  Already listed
  02    gattProcessRxData
        | Stack used (prev) :  00000D85 000000A0
        | + function block  :  00000036 00000001
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  GATT_ProcessEvent
      | Stack used (prev) :  00000DBB 000000A1
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  gattRegisterServer::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  GATT_Init::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  GATT_ProcessEvent::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  gattProcessRxData::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  gattNotifyEvent::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  gattStartTimer::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  01  gattStopTimer::?relay
      | Stack used (prev) :  00000DD3 000000A1
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000DD3 000000A1


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000DD3 000000A1
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000005BE 00000074
          | + function block  :  0000007B 00000000
          |  Already listed
  03      GATTServApp_ReadAttr
          | Stack used (prev) :  000005BE 00000074
          | + function block  :  0000007B 00000000
          |  Already listed
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  0000084F 0000007C
            | + function block  :  00000034 00000000
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ExecuteWriteRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  03      gattServApp_ProcessExecuteWriteReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  0000003E 00000000
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000577 00000074
            | + function block  :  00000031 00000000
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        gattServApp_FindPrepareWriteQ
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_PrepareWriteRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gattServApp_ProcessPrepareWriteReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  0000003E 00000000
  04        GATTServApp_WriteAttr
            | Stack used (prev) :  0000084F 0000007C
            | + function block  :  00000034 00000000
            |  Already listed
  04        gattServApp_FindAuthorizeAttrCB
            | Stack used (prev) :  00000577 00000074
            | + function block  :  00000031 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_WriteRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  03      gattServApp_ProcessWriteReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  00000042 00000000
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000005BE 00000074
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  0000058E 00000074
            | + function block  :  00000030 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000290 00000069
            | + function block  :  00000064 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  00000256 0000006A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByGrpTypeRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gattServApp_ProcessReadByGrpTypeReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  0000004A 00000001
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000005BE 00000074
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandle
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadMultiRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gattServApp_ProcessReadMultiReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  0000003E 00000000
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000005BE 00000074
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000290 00000069
            | + function block  :  00000064 00000000
            |  Already listed
  04        GATT_VerifyReadPermissions
            | Stack used (prev) :  00000256 0000006A
            | + function block  :  00000022 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_ReadByTypeRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      gattServApp_ProcessReadByTypeReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  00000046 00000001
  04        GATTServApp_ReadAttr
            | Stack used (prev) :  000005BE 00000074
            | + function block  :  0000007B 00000000
            |  Already listed
  04        GATT_FindNextAttr
            | Stack used (prev) :  0000058E 00000074
            | + function block  :  00000030 00000000
            |  Already listed
  04        GATT_FindHandleUUID
            | Stack used (prev) :  00000290 00000069
            | + function block  :  00000064 00000000
            |  Already listed
  05          attSendMsg
              | Stack used (prev) :  0000041B 0000006C
              | + function block  :  00000032 00000000
              |  Already listed
  04        ATT_FindByTypeValueRsp
            | Stack used (prev) :  00000DD3 000000A1
            | + function block  :  0000000C 00000000
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  04        osal_memcmp
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000011 00000000
            |  Already listed
  03      gattServApp_ProcessFindByTypeValueReq
          | Stack used (prev) :  00000DDF 000000A1
          | + function block  :  00000042 00000000
  03      GATT_FindHandle
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000022 00000000
          |  Already listed
  04        attSendMsg
            | Stack used (prev) :  0000041B 0000006C
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadBlobRsp
          | Stack used (prev) :  00000DD3 000000A1
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  0000041B 0000006C
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ReadRsp
          | Stack used (prev) :  00000DD3 000000A1
          | + function block  :  0000000C 00000000
  04        attSendMsg
            | Stack used (prev) :  0000041B 0000006C
            | + function block  :  00000032 00000000
            |  Already listed
  03      ATT_ExchangeMTURsp
          | Stack used (prev) :  00000DD3 000000A1
          | + function block  :  0000000C 00000000
  03      ATT_ErrorRsp
          | Stack used (prev) :  0000044D 0000006C
          | + function block  :  00000018 00000000
          |  Already listed
  02    gattServApp_ProcessMsg
        | Stack used (prev) :  00000E29 000000A2
        | + function block  :  00000038 00000000
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  GATTServApp_ProcessEvent
      | Stack used (prev) :  00000E61 000000A2
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_RegisterForMsg::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_Init::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_ProcessEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_SetNumPrepareWrites::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_FindServiceCBs::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessMsg::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessFindByTypeValueReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessReadByTypeReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessReadMultiReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessReadByGrpTypeReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessWriteReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessPrepareWriteReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_ProcessExecuteWriteReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_FindPrepareWriteQ::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_FindCharCfgItem::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_FindAuthorizeAttrCB::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_ReadAttr::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_WriteAttr::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_UpdateCharCfg::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_SendServiceChangedInd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_InitCharCfg::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  GATTServApp_ReadCharCfg::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  gattServApp_HandleConnStatusCB::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_bm_alloc::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_SendDataPkt::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_DisconnectCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_ReadBDADDRCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_ReadRssiCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_ReadBufSizeCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_SetRandomAddressCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_SetAdvParamCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_SetAdvDataCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_SetScanRspDataCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_SetAdvEnableCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_ClearWhiteListCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_AddWhiteListCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_RandCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_LtkReqReplyCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_LE_LtkReqNegReplyCmd::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_RandCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EXT_SetRxGainCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EXT_SetTxPowerCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EXT_ExtendRfRangeCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_TxDataBufferInsert::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_TxDataSend::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  hciTxDataBufferReset::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_RxReqDataBufCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_RxDataCompleteCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_TxDataCompleteCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  hciInitEventMasks::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_DataBufferOverflowEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_NumOfCompletedPacketsEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_CommandCompleteEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_VendorSpecifcCommandCompleteEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_CommandStatusEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_SendCommandStatusEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_SendCommandCompleteEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  HCI_SendControllerToHostEvent::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_ConnectionCompleteCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_DisconnectCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_ConnParamUpdateCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_ReadRemoteVersionInfoCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EncLtkReqCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EncChangeCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  LL_EncKeyRefreshCback::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  L2CAP_RegisterApp::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  L2CAP_SendData::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  L2CAP_CmdReject::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  01  L2CAP_ConnParamUpdateReq::?relay
      | Stack used (prev) :  00000E79 000000A2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E79 000000A2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000E79 000000A2
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  04        osal_memset
            | Stack used (prev) :  0000022C 0000006A
            | + function block  :  0000001E 00000000
            |  Already listed
  03      l2capNotifyData
          | Stack used (prev) :  00000E79 000000A2
          | + function block  :  00000010 00000000
  04        osal_bm_adjust_header
            | Stack used (prev) :  0000023A 0000006A
            | + function block  :  00000020 00000000
            |  Already listed
  03      l2capParsePacket
          | Stack used (prev) :  00000E79 000000A2
          | + function block  :  0000000E 00000000
  04        l2capHandleRxError
            | Stack used (prev) :  00000E79 000000A2
            | + function block  :  00000000 00000000
  04        l2capParseSignalHdr
            | Stack used (prev) :  00000E79 000000A2
            | + function block  :  00000009 00000001
  05          l2capNotifySignal
              | Stack used (prev) :  0000024A 0000006A
              | + function block  :  00000031 00000000
              |  Already listed
  05          L2CAP_ParseParamUpdateReq
              | Stack used (prev) :  00000E79 000000A2
              | + function block  :  0000000B 00000000
  05          L2CAP_CmdReject
              | Stack used (prev) :  00000BF6 0000009A
              | + function block  :  0000000E 00000000
              |  Already listed
  04        l2capProcessReq
            | Stack used (prev) :  00000E84 000000A2
            | + function block  :  0000005E 00000000
  06            osal_CbTimerStop
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  0000000A 00000000
                |  Already listed
  05          l2capStopTimer
              | Stack used (prev) :  00000E79 000000A2
              | + function block  :  00000009 00000000
  05          l2capFindLocalId
              | Stack used (prev) :  00000E79 000000A2
              | + function block  :  0000000A 00000000
  05          l2capFreeChannel
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000012 00000002
              |  Already listed
  05          l2capNotifySignal
              | Stack used (prev) :  0000024A 0000006A
              | + function block  :  00000031 00000000
              |  Already listed
  05          l2capParseParamUpdateRsp
              | Stack used (prev) :  00000E79 000000A2
              | + function block  :  0000000B 00000000
  05          l2capParseCmdReject
              | Stack used (prev) :  00000E79 000000A2
              | + function block  :  0000000C 00000000
  04        l2capProcessRsp
            | Stack used (prev) :  00000E85 000000A2
            | + function block  :  00000054 00000000
  04        L2CAP_CmdReject
            | Stack used (prev) :  00000BF6 0000009A
            | + function block  :  0000000E 00000000
            |  Already listed
  03      l2capProcessSignal
          | Stack used (prev) :  00000EE2 000000A3
          | + function block  :  0000003F 00000000
  03      osal_bm_free
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000C 00000000
          |  Already listed
  02    l2capProcessRxData
        | Stack used (prev) :  00000F21 000000A3
        | + function block  :  0000002A 00000000
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  L2CAP_ProcessEvent
      | Stack used (prev) :  00000F4B 000000A3
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  L2CAP_Init::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  L2CAP_ProcessEvent::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  l2capProcessRxData::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  l2capProcessSignal::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  l2capProcessRsp::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  l2capProcessReq::?relay
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F63 000000A3


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F63 000000A3
  01  L2CAP_BuildCmdReject
      | Stack used (prev) :  00000F63 000000A3
      | + function block  :  0000000B 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F6E 000000A4


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F6E 000000A4
  01  l2capBuildParamUpdateReq
      | Stack used (prev) :  00000F6E 000000A4
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capParseSignalHdr::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capSendReq::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capSendCmd::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capEncapSendData::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capParsePacket::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  L2CAP_BuildCmdReject::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capParseCmdReject::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capBuildParamUpdateReq::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  L2CAP_ParseParamUpdateReq::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capParseParamUpdateRsp::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capNotifyData::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capNotifySignal::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capAllocChannel::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capFreeChannel::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capFindLocalId::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capStopTimer::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capHandleTimerCB::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  l2capHandleRxError::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  L2CAP_bm_alloc::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Init::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Register::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Add::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Remove::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Find::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_FindFirst::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_State::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_NumActive::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_Authen::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  linkDB_PerformFunc::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  01  reportStatusChange::?relay
      | Stack used (prev) :  00000F77 000000A5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F77 000000A5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000F77 000000A5
  03      llScheduler
          | Stack used (prev) :  000002AC 0000006E
          | + function block  :  00000030 00000000
          |  Already listed
  04        PHY_SetEndConnection
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000000 00000002
            |  Already listed
  04        llFreeTask
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000000 00000002
            |  Already listed
  05          HCI_NumOfCompletedPacketsEvent
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000012 00000001
              |  Already listed
  05          hciTxDataBufferReset
              | Stack used (prev) :  00000236 00000068
              | + function block  :  00000022 00000000
              |  Already listed
  05          HCI_TxDataSend
              | Stack used (prev) :  00000362 0000006B
              | + function block  :  00000029 00000000
              |  Already listed
  04        LL_TxDataCompleteCback
            | Stack used (prev) :  00000F77 000000A5
            | + function block  :  00000004 00000002
  03      llConnCleanup
          | Stack used (prev) :  00000F7B 000000A7
          | + function block  :  0000001D 00000000
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      LL_DisconnectCback
          | Stack used (prev) :  00000F77 000000A5
          | + function block  :  0000000C 00000001
  02    llConnTerminate
        | Stack used (prev) :  00000F98 000000A7
        | + function block  :  00000012 00000000
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  03      osal_memset
          | Stack used (prev) :  0000022C 0000006A
          | + function block  :  0000001E 00000000
          |  Already listed
  03      osal_memcpy
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000001C 00000001
          |  Already listed
  02    LL_ConnectionCompleteCback
        | Stack used (prev) :  00000F77 000000A5
        | + function block  :  00000023 00000001
  02    osal_start_timerEx
        | Stack used (prev) :  00000077 00000005
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_pwrmgr_task_state
        | Stack used (prev) :  000007EA 0000007C
        | + function block  :  0000000A 00000000
        |  Already listed
  02    osal_pwrmgr_device
        | Stack used (prev) :  00000A46 00000082
        | + function block  :  00000000 00000002
        |  Already listed
  01  LL_ProcessEvent
      | Stack used (prev) :  00000F9A 000000A7
      | + function block  :  00000026 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_Init::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_ProcessEvent::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_Reset::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_ReadBDADDR::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_SetRandomAddress::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_ClearWhiteList::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_AddWhiteListDevice::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_Encrypt::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_Rand::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_PseudoRand::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_CtrlToHostFlowControl::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_ReadRssi::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_Disconnect::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_TxData::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_SetAdvParam::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_SetAdvData::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_SetAdvControl::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_SetScanRspData::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_EncLtkReply::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_EncLtkNegReply::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  01  LL_ConnActive::?relay
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A7


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A7
  02    llDisableT2IntsEvts
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000000 00000000
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llDirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  00000FC0 000000A7
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000FC0 000000A9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00000FC0 000000A9
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000000
  02    PHY_ConfigureAppendRfStatus
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetMaxNack
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000002
  02    PHY_SetSyncWord
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000010 00000000
        |  Already listed
  02    PHY_InitSeqStat
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000002
  02    PHY_SetDataChan
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_SetCRCInit
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000010 00000000
        |  Already listed
  03      llDivide31By16To16
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcTimerDrift
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000017 00000000
  03      llDivide31By16To16
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000000 00000000
          |  Already listed
  02    llCalcScaFactor
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  0000000D 00000000
  02    llAdjustTimeBackward
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  0000000B 00000000
  02    llGetTimer2Capture
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000003
  02    llFreeTask
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    llAllocTask
        | Stack used (prev) :  0000022E 0000006B
        | + function block  :  00000014 00000000
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  02    llConvertCtrlProcTimeoutToEvent
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  0000000A 00000000
  02    llConvertLstoToEvent
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  0000000A 00000000
  02    llConnCleanup
        | Stack used (prev) :  00000F7B 000000A7
        | + function block  :  0000001D 00000000
        |  Already listed
  02    llAllocConnId
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000009 00000001
  02    llGetNextDataChan
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  0000000B 00000001
  02    llProcessChanMap
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000018 00000001
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llAdvEvt_TaskConnect
      | Stack used (prev) :  00000FD7 000000AC
      | + function block  :  00000034 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000100B 000000AC


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000100B 000000AC
  02    PHY_SetAdvChans
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
  02    llGetTaskState
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llUndirectedAdvEvt_TaskEndOk
      | Stack used (prev) :  0000100B 000000AE
      | + function block  :  00000020 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000102B 000000AE


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000102B 000000AE
  02    PHY_SetAdvChans
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llDiscoverableAdvEvt_TaskEndOk
      | Stack used (prev) :  0000102B 000000AE
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000103B 000000AE


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000103B 000000AE
  02    PHY_SetAdvChans
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    PHY_GetAdvChans
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
        |  Already listed
  02    llGetTaskState
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  02    LL_ENC_GeneratePseudoRandNum
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llNonConnAdvEvt_TaskEndOk
      | Stack used (prev) :  0000103B 000000AE
      | + function block  :  00000010 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000AE


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000AE
  02    llGetTaskState
        | Stack used (prev) :  0000100B 000000AC
        | + function block  :  00000000 00000002
        |  Already listed
  02    llFreeTask
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  01  llAdvEvt_TaskAbort
      | Stack used (prev) :  0000104B 000000AE
      | + function block  :  00000000 00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llDirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llAdvEvt_TaskConnect::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llUndirectedAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llDiscoverableAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llNonConnAdvEvt_TaskEndOk::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llAdvEvt_TaskAbort::?relay
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000104B 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000104B 000000B2
  01  llStartSlaveSetup
      | Stack used (prev) :  0000104B 000000B2
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llRfInit::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetFreqTune::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llClearSetInts::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llProcessPostRfOps::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llFindTxPowerSettings::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llExtendRfRange::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llCheckWhiteListUsage::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupAdv::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupDirectedAdvEvt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupUndirectedAdvEvt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupNonConnectableAdvEvt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupScannableAdvEvt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llStartAdvSetup::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llStartSlaveSetup::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupEncRsp::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupStartEncReq::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupStartEncRsp::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupPauseEncRsp::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupRejectInd::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupFeatureSetRsp::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupVersionIndReq::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupTermInd::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSetupUnknownRsp::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llEnqueueCtrlPkt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llDequeueCtrlPkt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llReplaceCtrlPkt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llProcessChanMap::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llAllocConnId::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llReleaseAllConnId::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llGetNextConn::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llConnCleanup::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llConnTerminate::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llInitFeatureSet::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llConvertLstoToEvent::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llConvertCtrlProcTimeoutToEvent::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llAdjustForMissedEvent::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llProcessPendingTxData::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llWriteTxData::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llMemCopySrc::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_ReverseBytes::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_GeneratePseudoRandNum::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_GenerateTrueRandNum::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_GenDeviceSKD::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_GenDeviceIV::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_AES128_Encrypt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_InitAesDMA::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_MoveData::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_LoadEmptyIV::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_EncryptMsg::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_DecryptMsg::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_GenerateMIC::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_Encrypt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  LL_ENC_Decrypt::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llUnexpectedEndCauseHandler
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llUnexpectedEndCauseHandler::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSchedulerInit::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llScheduler::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llScheduleTask::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llFindNextSecTask::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llAllocTask::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llFreeTask::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llGetCurrentTask::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llGetTaskState::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llGetActiveTasks::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llGetNumTasks::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSave_txFIFO::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llSave_rxFIFO::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  01  llRestoreConnState::?relay
      | Stack used (prev) :  00001054 000000B2
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001054 000000B2


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001054 000000B2
  02    PHY_DeallocateRxFifo
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000000
        |  Already listed
  02    PHY_RetryRxFifo
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000000
        |  Already listed
  02    llGetTimer2Capture
        | Stack used (prev) :  00000FC0 000000A9
        | + function block  :  00000000 00000003
        |  Already listed
  03      LL_ENC_AES128_Encrypt
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000B 00000000
          |  Already listed
  03      llConnTerminate
          | Stack used (prev) :  00000F98 000000A7
          | + function block  :  00000012 00000000
          |  Already listed
  03      llReplaceCtrlPkt
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  00000000 00000003
          |  Already listed
  03      llDequeueCtrlPkt
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000A 00000001
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupUnknownRsp
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000FC0 000000A9
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupTermInd
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000000
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000FC0 000000A9
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupVersionIndReq
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000FC0 000000A9
            | + function block  :  00000000 00000002
            |  Already listed
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupFeatureSetRsp
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000001
  04        PHY_SetMaxNack
            | Stack used (prev) :  00000FC0 000000A9
            | + function block  :  00000000 00000002
            |  Already listed
  03      llSetupRejectInd
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000009 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupPauseEncRsp
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000000
  04        LL_ENC_Encrypt
            | Stack used (prev) :  000002D7 0000006A
            | + function block  :  0000003A 00000000
            |  Already listed
  03      llSetupStartEncRsp
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000000
  03      llSetupStartEncReq
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000000 00000002
  04        LL_ENC_ReverseBytes
            | Stack used (prev) :  00001054 000000B2
            | + function block  :  0000000A 00000001
  03      llSetupEncRsp
          | Stack used (prev) :  0000105E 000000B2
          | + function block  :  00000012 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      LL_EncKeyRefreshCback
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      LL_EncChangeCback
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000000C 00000001
  04        LL_EncLtkNegReply
            | Stack used (prev) :  00000235 00000069
            | + function block  :  00000000 00000004
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      LL_EncLtkReqCback
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000018 00000001
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      LL_ReadRemoteVersionInfoCback
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000014 00000001
  02    llProcessSlaveControlProcedures
        | Stack used (prev) :  00001070 000000B4
        | + function block  :  0000002A 00000000
  03      PHY_SetEndConnection
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  00000000 00000002
          |  Already listed
  03      llCalcTimerDrift
          | Stack used (prev) :  00000FC0 000000A9
          | + function block  :  00000017 00000000
          |  Already listed
  03      llAdjustTimeBackward
          | Stack used (prev) :  00000FC0 000000A9
          | + function block  :  0000000B 00000000
          |  Already listed
  04        ll24BitTimeCompare
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000013 00000000
            |  Already listed
  04        llGetCurrentTime
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000004 00000003
            |  Already listed
  03      llAdjustForMissedEvent
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000018 00000002
  03      llConvertCtrlProcTimeoutToEvent
          | Stack used (prev) :  00000FC0 000000A9
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llConvertLstoToEvent
          | Stack used (prev) :  00000FC0 000000A9
          | + function block  :  0000000A 00000000
          |  Already listed
  03      llEventDelta
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000000 00000000
  03      llEventInRange
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000002 00000002
  03      llConnTerminate
          | Stack used (prev) :  00000F98 000000A7
          | + function block  :  00000012 00000000
          |  Already listed
  03      llSetNextDataChan
          | Stack used (prev) :  00000242 00000068
          | + function block  :  00000016 00000002
          |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  03      LL_ConnParamUpdateCback
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000014 00000001
  02    llSetupNextSlaveEvent
        | Stack used (prev) :  0000106C 000000B2
        | + function block  :  0000003E 00000002
  02    llScheduler
        | Stack used (prev) :  000002AC 0000006E
        | + function block  :  00000030 00000000
        |  Already listed
  03      LL_ENC_GenerateMIC
          | Stack used (prev) :  00000259 0000006A
          | + function block  :  0000007E 00000000
          |  Already listed
  03      LL_ENC_DecryptMsg
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  0000004A 00000001
  02    LL_ENC_Decrypt
        | Stack used (prev) :  0000109E 000000B2
        | + function block  :  0000003E 00000001
  02    LL_ENC_MoveData
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  0000000B 00000000
        |  Already listed
  02    LL_ENC_GenDeviceIV
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  00000000 00000003
  02    LL_ENC_GenDeviceSKD
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  00000000 00000003
  02    LL_ENC_ReverseBytes
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  0000000A 00000001
        |  Already listed
  02    llMemCopySrc
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  00000000 00000003
  03      llWriteTxData
          | Stack used (prev) :  00000311 0000006A
          | + function block  :  0000002A 00000000
          |  Already listed
  03      LL_TxDataCompleteCback
          | Stack used (prev) :  00000F77 000000A5
          | + function block  :  00000004 00000002
          |  Already listed
  02    llProcessPendingTxData
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  0000000A 00000000
  02    llConnTerminate
        | Stack used (prev) :  00000F98 000000A7
        | + function block  :  00000012 00000000
        |  Already listed
  02    llEnqueueCtrlPkt
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  0000000B 00000001
        |  Already listed
  03      LL_CtrlToHostFlowControl
          | Stack used (prev) :  00001054 000000B2
          | + function block  :  00000000 00000002
  03      osal_bm_free
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000C 00000000
          |  Already listed
  03      osal_mem_free
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  00000015 00000000
          |  Already listed
  03      osal_msg_send
          | Stack used (prev) :  00000149 00000029
          | + function block  :  00000012 00000000
          |  Already listed
  03      osal_msg_allocate
          | Stack used (prev) :  000000F9 00000028
          | + function block  :  0000000C 00000000
          |  Already listed
  02    LL_RxDataCompleteCback
        | Stack used (prev) :  00001054 000000B4
        | + function block  :  0000001E 00000000
  03      HCI_bm_alloc
          | Stack used (prev) :  00000236 00000068
          | + function block  :  00000000 00000004
          |  Already listed
  03      osal_mem_alloc
          | Stack used (prev) :  0000001C 00000004
          | + function block  :  0000001B 00000000
          |  Already listed
  02    LL_RxReqDataBufCback
        | Stack used (prev) :  00001054 000000B2
        | + function block  :  0000000A 00000000
  02    osal_mem_free
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000015 00000000
        |  Already listed
  02    osal_set_event
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  00000017 00000000
        |  Already listed
  01  llSlaveEvt_TaskEndOk
      | Stack used (prev) :  000010DC 000000B5
      | + function block  :  00000030 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSlaveEvt_TaskAbort
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSlaveEvt_TaskEndOk::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSlaveEvt_TaskAbort::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSetupNextSlaveEvent::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llProcessSlaveControlProcedures::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llInitTimer2::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llStopTimer2::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llStartTimer2::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSetT2LongC1Timeout::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSetT2C1Event1::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSetT2LongC1Event1::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llSetT2OVFC2Event2::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llDisableT2Ints::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llDisableT2IntsEvts::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llDisableT2E1::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llGetTimer2Capture::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llGetCurrentTime::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  llGetFullCTandST::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  ll_McuPrecisionCount::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_Init::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_Reset::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ClearAllRegsAndFifos::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetOwnAddr::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetPeerAddr::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetCRCInit::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_GetAdvChans::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetAdvChans::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetEndConnection::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ConfigureMD::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_GetEndCause::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_InitSeqStat::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetSyncWord::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetMaxNack::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ClearWhitelist::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_AddWlEntry::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetAdvWlPolicy::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetBlacklistIndex::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ClearBlacklistIndex::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ClearBlacklist::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ClearSavedWhiteList::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ConfigureFifoDataProcessing::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ConfigureAppendRfStatus::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetFifoConfig::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_ConfigWhitener::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_RetryTxFifo::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_RetryRxFifo::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_CommitRxFifo::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_DeallocateRxFifo::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  PHY_SetRfFreq::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  phyFindWlEntry::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  SM_CalcRandomAddr::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  SM_ResolveRandomAddrs::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  SM_GenerateAuthenSig::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  SM_VerifyAuthenSig::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smProcessRandComplete::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smStartRspTimer::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smStopRspTimer::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  sm_ah::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  sm_c1new::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  sm_xor::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  sm_s1::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smGenerateRandBuf::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smAuthReqToUint8::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smUint8ToAuthReq::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  smEncrypt::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  sm_CMAC::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  generate_subkey::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  xor_128::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  01  leftshift_onebit::?relay
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000110C 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000110C 000000B5
  02    smFreePairingParams
        | Stack used (prev) :  0000022A 0000006A
        | + function block  :  00000012 00000004
        |  Already listed
  01  smLinkCheck
      | Stack used (prev) :  0000110C 000000B5
      | + function block  :  00000009 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  SM_StartPairing::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  SM_PasskeyUpdate::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smRegisterResponder::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smLinkCheck::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smTimedOut::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smProcessDataMsg::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smSendFailAndEnd::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smProcessEncryptChange::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smNextPairingState::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  sm_c1::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smProcessPairingReq::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smStartEncryption::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smGeneratePairingReqRsp::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smGenerateConfirm::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smGenerateRandMsg::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smSavePairInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smPairingSendEncInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smPairingSendMasterID::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smPairingSendIdentityInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smPairingSendIdentityAddrInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smPairingSendSingingInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smFreePairingParams::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smEndPairing::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smDetermineKeySize::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smSetPairingReqRsp::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  SM_ResponderInit::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smResponderProcessLTKReq::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smpResponderProcessIncoming::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smpResponderProcessPairingReq::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smpResponderProcessPairingRandom::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smpResponderProcessMasterID::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  01  smResponderSendNextKeyInfo::?relay
      | Stack used (prev) :  00001115 000000B5
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001115 000000B5


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001115 000000B5
  04        smEndPairing
            | Stack used (prev) :  000002C8 0000006E
            | + function block  :  0000002E 00000000
            |  Already listed
  04        smEndPairing
            | Stack used (prev) :  000002C8 0000006E
            | + function block  :  0000002E 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  05          linkDB_Find
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  05          osal_msg_send
              | Stack used (prev) :  00000149 00000029
              | + function block  :  00000012 00000000
              |  Already listed
  05          osal_msg_allocate
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000000C 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        gapSendBondCompleteEvent
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  00000010 00000001
  03      smProcessEncryptChange
          | Stack used (prev) :  00001125 000000B6
          | + function block  :  00000018 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  0000000A 00000000
              |  Already listed
  04        smpParseSecurityReq
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  00000000 00000002
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParseSigningInfo
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParseIdentityAddrInfo
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000001
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParseIdentityInfo
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParseMasterID
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParseEncInfo
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  04        smpParsePairingFailed
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  00000000 00000003
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParsePairingRandom
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  05          osal_memcpy
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  0000001C 00000001
              |  Already listed
  04        smpParsePairingConfirm
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  0000000C 00000000
  05          smUint8ToAuthReq
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  0000000A 00000000
              |  Already listed
  05          GAP_GetParamValue
              | Stack used (prev) :  0000022A 00000068
              | + function block  :  00000014 00000002
              |  Already listed
  04        smpParsePairingReq
            | Stack used (prev) :  00001115 000000B5
            | + function block  :  00000013 00000001
  04        smSendFailAndEnd
            | Stack used (prev) :  00000443 0000006E
            | + function block  :  00000037 00000000
            |  Already listed
  04        smStartRspTimer
            | Stack used (prev) :  0000023E 0000006A
            | + function block  :  0000001C 00000000
            |  Already listed
  04        linkDB_Find
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000014 00000002
            |  Already listed
  03      smProcessDataMsg
          | Stack used (prev) :  00001128 000000B8
          | + function block  :  0000003E 00000000
  06            llGetCurrentTask
                | Stack used (prev) :  000001F0 00000054
                | + function block  :  00000000 00000002
                |  Already listed
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  000000F9 0000002E
                | + function block  :  00000016 00000000
                |  Already listed
  05          LL_Rand
              | Stack used (prev) :  00001115 000000B5
              | + function block  :  0000000C 00000000
  05          HCI_CommandCompleteEvent
              | Stack used (prev) :  0000018F 00000028
              | + function block  :  0000002B 00000001
              |  Already listed
  04        HCI_LE_RandCmd
            | Stack used (prev) :  00001121 000000B5
            | + function block  :  00000012 00000004
  04        osal_mem_free
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  00000015 00000000
            |  Already listed
  04        osal_msg_send
            | Stack used (prev) :  00000149 00000029
            | + function block  :  00000012 00000000
            |  Already listed
  04        osal_msg_allocate
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000000C 00000000
            |  Already listed
  04        osal_memcpy
            | Stack used (prev) :  000000F9 00000028
            | + function block  :  0000001C 00000001
            |  Already listed
  03      smProcessRandComplete
          | Stack used (prev) :  00001133 000000B9
          | + function block  :  00000018 00000000
  03      osal_bm_free
          | Stack used (prev) :  0000022A 00000068
          | + function block  :  0000000C 00000000
          |  Already listed
  02    smProcessOSALMsg
        | Stack used (prev) :  00001166 000000B9
        | + function block  :  00000020 00000000
  03      smEndPairing
          | Stack used (prev) :  000002C8 0000006E
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smNextPairingState
        | Stack used (prev) :  00001115 000000B5
        | + function block  :  00000000 00000002
  03      smEndPairing
          | Stack used (prev) :  000002C8 0000006E
          | + function block  :  0000002E 00000000
          |  Already listed
  02    smTimedOut
        | Stack used (prev) :  00001115 000000B5
        | + function block  :  00000000 00000002
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_send
        | Stack used (prev) :  00000149 00000029
        | + function block  :  00000012 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  SM_ProcessEvent
      | Stack used (prev) :  00001186 000000B9
      | + function block  :  00000018 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000119E 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000119E 000000B9
  01  SM_Init::?relay
      | Stack used (prev) :  0000119E 000000B9
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000119E 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000119E 000000B9
  01  SM_ProcessEvent::?relay
      | Stack used (prev) :  0000119E 000000B9
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000119E 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000119E 000000B9
  01  smProcessOSALMsg::?relay
      | Stack used (prev) :  0000119E 000000B9
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000119E 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  0000119E 000000B9
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildPairingConfirm
      | Stack used (prev) :  0000119E 000000B9
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011AA 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011AA 000000B9
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildPairingRandom
      | Stack used (prev) :  000011AA 000000B9
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011B6 000000B9


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011B6 000000B9
  01  smpBuildPairingFailed
      | Stack used (prev) :  000011B6 000000B9
      | + function block  :  00000000 00000003
  <-Sub-tree of type: Function tree
    | Stack used          :  000011B6 000000BC


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011B6 000000BC
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildEncInfo
      | Stack used (prev) :  000011B6 000000BC
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011C2 000000BC


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011C2 000000BC
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildMasterID
      | Stack used (prev) :  000011C2 000000BC
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000011CE 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011CE 000000BD
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildIdentityInfo
      | Stack used (prev) :  000011CE 000000BD
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011DA 000000BD


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011DA 000000BD
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildIdentityAddrInfo
      | Stack used (prev) :  000011DA 000000BD
      | + function block  :  0000000C 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000011E6 000000BE


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011E6 000000BE
  02    osal_memcpy
        | Stack used (prev) :  000000F9 00000028
        | + function block  :  0000001C 00000001
        |  Already listed
  01  smpBuildSigningInfo
      | Stack used (prev) :  000011E6 000000BE
      | + function block  :  0000000C 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011F2 000000BE


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011F2 000000BE
  02    smAuthReqToUint8
        | Stack used (prev) :  0000022A 00000068
        | + function block  :  00000000 00000002
        |  Already listed
  01  smpBuildSecurityReq
      | Stack used (prev) :  000011F2 000000BE
      | + function block  :  00000009 00000001
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingReq::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingRsp::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingReqRsp::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParsePairingReq::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingConfirm::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParsePairingConfirm::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingRandom::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParsePairingRandom::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildPairingFailed::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParsePairingFailed::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildEncInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseEncInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildMasterID::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseMasterID::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildIdentityInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildIdentityAddrInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseIdentityInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseIdentityAddrInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildSigningInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseSigningInfo::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpBuildSecurityReq::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smpParseSecurityReq::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  01  smSendSMMsg::?relay
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000011FB 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000011FB 000000BF
  02    osal_msg_receive
        | Stack used (prev) :  00000574 00000072
        | + function block  :  00000020 00000000
        |  Already listed
  02    osal_msg_deallocate
        | Stack used (prev) :  0000010E 00000028
        | + function block  :  0000001E 00000000
        |  Already listed
  01  HCI_ProcessEvent
      | Stack used (prev) :  000011FB 000000BF
      | + function block  :  0000000A 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  01  HCI_Init::?relay
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  01  HCI_ProcessEvent::?relay
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  01  HCI_GAPTaskRegister::?relay
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  01  HCI_L2CAPTaskRegister::?relay
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  01  HCI_SMPTaskRegister::?relay
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  02    exit
        | Stack used (prev) :  00001205 000000BF
        | + function block  :  00000000 00000000
  01  ?cmain
      | Stack used (prev) :  00001205 000000BF
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001205 000000BF


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  00001205 000000BF
  02    __low_level_init
        | Stack used (prev) :  00001205 000000BF
        | + function block  :  00000000 00000000
  05          compactPage
              | Stack used (prev) :  00000626 00000074
              | + function block  :  00000040 00000000
              |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000F 00000001
                |  Already listed
  05          findOffset
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000022 00000000
  05          findOffset
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000022 00000000
              |  Already listed
  06            erasePage
                | Stack used (prev) :  00000569 00000074
                | + function block  :  00000032 00000000
                |  Already listed
  06            HalFlashRead
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000F 00000001
                |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  0000001F 00000000
  05          cleanErasedPage
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  0000001F 00000000
              |  Already listed
  05          cleanErasedPage
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  0000001F 00000000
              |  Already listed
  05          erasePage
              | Stack used (prev) :  00000569 00000074
              | + function block  :  00000032 00000000
              |  Already listed
  05          setActivePage
              | Stack used (prev) :  000005E4 00000073
              | + function block  :  0000002E 00000000
              |  Already listed
  05          HalFlashRead
              | Stack used (prev) :  0000055A 00000072
              | + function block  :  0000000F 00000001
              |  Already listed
  04        initNV
            | Stack used (prev) :  00001227 000000BF
            | + function block  :  00000020 00000000
  03      osal_snv_init
          | Stack used (prev) :  00001247 000000BF
          | + function block  :  00000000 00000004
  05          HalUARTInitISR
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000000 00000000
  06            memset
                | Stack used (prev) :  0000022A 00000068
                | + function block  :  00000002 00000002
                |  Already listed
  05          HalUARTInitDMA
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  0000000D 00000001
  04        HalUARTInit
            | Stack used (prev) :  00001212 000000C0
            | + function block  :  00000000 00000004
  04        HalKeyInit
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000002
  04        HalDmaInit
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000000
  05          aesDmaInit
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000000 00000003
  04        HalAesInit
            | Stack used (prev) :  00001205 000000C2
            | + function block  :  00000000 00000004
  04        HalAdcInit
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000002
  03      HalDriverInit
          | Stack used (prev) :  00001212 000000C6
          | + function block  :  00000000 00000004
  04        HalLedSet
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000002
  04        HalKeyConfig
            | Stack used (prev) :  0000022A 00000068
            | + function block  :  00000009 00000000
            |  Already listed
  04        osal_int_disable
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000000
  03      InitBoard
          | Stack used (prev) :  00001205 000000C1
          | + function block  :  00000012 00000000
  03      osal_pwrmgr_device
          | Stack used (prev) :  00000A46 00000082
          | + function block  :  00000000 00000002
          |  Already listed
  07              HalUARTPollISR
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000009 00000000
  10                    memset
                        | Stack used (prev) :  0000022A 00000068
                        | + function block  :  00000002 00000002
                        |  Already listed
  09                  HalUARTRxAvailDMA
                      | Stack used (prev) :  00001205 000000BF
                      | + function block  :  0000001A 00000000
  08                HalUARTBusyDMA
                    | Stack used (prev) :  0000121F 000000BF
                    | + function block  :  00000020 00000000
  08                HalUARTBusyDMA
                    | Stack used (prev) :  0000121F 000000BF
                    | + function block  :  00000020 00000000
                    |  Already listed
  08                HalUARTRxAvailDMA
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  0000001A 00000000
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000017 00000000
                    |  Already listed
  07              HalUARTPollDMA
                  | Stack used (prev) :  0000123F 000000BF
                  | + function block  :  00000018 00000000
  06            HalUARTPoll
                | Stack used (prev) :  00001257 000000BF
                | + function block  :  00000000 00000004
  05          Hal_ProcessPoll
              | Stack used (prev) :  00001257 000000C3
              | + function block  :  00000000 00000004
  08                PHY_Reset
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStartTimer2
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  00000000 00000000
  08                llGetCurrentTask
                    | Stack used (prev) :  000001F0 00000054
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llExtendRfRange
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000008 00000002
                    |  Already listed
  08                llSetFreqTune
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  00000000 00000002
  08                osal_pwrmgr_task_state
                    | Stack used (prev) :  000007EA 0000007C
                    | + function block  :  0000000A 00000000
                    |  Already listed
  08                osal_set_event
                    | Stack used (prev) :  000000F9 00000028
                    | + function block  :  00000017 00000000
                    |  Already listed
  07              LL_PowerOnReq
                  | Stack used (prev) :  00001205 000000C1
                  | + function block  :  00000012 00000000
  08                PHY_Reset
                    | Stack used (prev) :  0000022A 00000068
                    | + function block  :  00000000 00000002
                    |  Already listed
  08                llStopTimer2
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  00000000 00000000
  07              LL_PowerOffReq
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000012 00000000
  08                llGetFullCTandST
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  00000000 00000003
  08                llGetCurrentTask
                    | Stack used (prev) :  000001F0 00000054
                    | + function block  :  00000000 00000002
                    |  Already listed
  07              LL_TimeToNextRfEvent
                  | Stack used (prev) :  00001205 000000C2
                  | + function block  :  00000036 00000000
  07              halSleepReadTimer
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000024 00000003
  07              halSleepSetTimer
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000038 00000000
  07              halSleepSetTimer
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000038 00000000
                  |  Already listed
  07              halSetSleepMode
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000020 00000000
  07              HalLedExitSleep
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000000
  09                  halGetJoyKeyInput
                      | Stack used (prev) :  000007F6 0000007C
                      | + function block  :  0000001B 00000000
                      |  Already listed
  08                HalKeyRead
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  00000009 00000000
  07              HalKeyExitSleep
                  | Stack used (prev) :  0000120E 000000BF
                  | + function block  :  00000000 00000004
  07              HalKeyEnterSleep
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000000
  06            halSleep
                | Stack used (prev) :  0000123D 000000C3
                | + function block  :  00000048 00000000
  06            osal_next_timeout
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000010 00000000
  05          osal_pwrmgr_powerconserve
              | Stack used (prev) :  00001285 000000C3
              | + function block  :  00000020 00000000
  05          osalTimeUpdate
              | Stack used (prev) :  00000258 0000006B
              | + function block  :  0000001C 00000000
              |  Already listed
  04        osal_run_system
            | Stack used (prev) :  000012A5 000000C7
            | + function block  :  0000001C 00000000
  03      osal_start_system
          | Stack used (prev) :  000012C1 000000C7
          | + function block  :  00000000 00000004
  04        osalTimerInit
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000009 00000000
  06            hciInitEventMasks
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  05          HCI_Init
              | Stack used (prev) :  00001205 000000C1
              | + function block  :  00000012 00000000
  06            HCI_SMPTaskRegister
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            linkDB_Register
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000009 00000000
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000003
  05          SM_Init
              | Stack used (prev) :  0000120E 000000C2
              | + function block  :  00000012 00000000
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_Reset
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
                  |  Already listed
  06            PHY_Init
                | Stack used (prev) :  00001205 000000C1
                | + function block  :  00000000 00000004
  06            llInitTimer2
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000000
  06            LL_ENC_InitAesDMA
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            LL_ENC_GenerateTrueRandNum
                | Stack used (prev) :  000000F9 0000002E
                | + function block  :  00000016 00000000
                |  Already listed
  07              HalFlashWrite
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  0000000E 00000001
                  |  Already listed
  06            llFindTxPowerSettings
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000022 00000002
  07              PHY_SetFifoConfig
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_ConfigureAppendRfStatus
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureFifoDataProcessing
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_ClearSavedWhiteList
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_ClearBlacklist
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_ClearWhitelist
                  | Stack used (prev) :  0000055A 00000072
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              PHY_ConfigureMD
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              PHY_SetCRCInit
                  | Stack used (prev) :  0000022A 00000068
                  | + function block  :  00000010 00000000
                  |  Already listed
  07              PHY_ClearAllRegsAndFifos
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
                  |  Already listed
  07              llDisableT2IntsEvts
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  00000000 00000000
                  |  Already listed
  07              llSchedulerInit
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              llInitFeatureSet
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              llReleaseAllConnId
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              llClearSetInts
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  07              llRfInit
                  | Stack used (prev) :  000000F9 0000002A
                  | + function block  :  00000000 00000004
                  |  Already listed
  06            LL_Reset
                | Stack used (prev) :  00001205 000000C1
                | + function block  :  0000000C 00000004
  06            HalFlashRead
                | Stack used (prev) :  0000055A 00000072
                | + function block  :  0000000F 00000001
                |  Already listed
  06            osal_pwrmgr_task_state
                | Stack used (prev) :  000007EA 0000007C
                | + function block  :  0000000A 00000000
                |  Already listed
  06            osal_set_event
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  00000017 00000000
                |  Already listed
  05          LL_Init
              | Stack used (prev) :  00001227 000000C5
              | + function block  :  00000018 00000000
  06            HCI_L2CAPTaskRegister
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  05          L2CAP_Init
              | Stack used (prev) :  00001205 000000C1
              | + function block  :  00000014 00000000
  06            linkDB_Register
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000009 00000000
                |  Already listed
  06            GATTServApp_InitCharCfg
                | Stack used (prev) :  00000241 00000068
                | + function block  :  00000022 00000000
                |  Already listed
  07              osal_mem_free
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  00000015 00000000
                  |  Already listed
  07              osal_mem_alloc
                  | Stack used (prev) :  0000001C 00000004
                  | + function block  :  0000001B 00000000
                  |  Already listed
  07              osal_memset
                  | Stack used (prev) :  0000022C 0000006A
                  | + function block  :  0000001E 00000000
                  |  Already listed
  06            gattServApp_SetNumPrepareWrites
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000017 00000000
  06            GATT_RegisterForReq
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  05          GATTServApp_Init
              | Stack used (prev) :  0000121C 000000C1
              | + function block  :  00000012 00000000
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000003
                |  Already listed
  07              linkDB_Register
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000009 00000000
                  |  Already listed
  07              gattRegisterServer
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  00000000 00000002
  06            GATT_InitServer
                | Stack used (prev) :  0000120E 000000C1
                | + function block  :  00000014 00000000
  05          GATT_Init
              | Stack used (prev) :  00001222 000000C2
              | + function block  :  00000012 00000000
  06            HCI_GAPTaskRegister
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            linkDB_Init
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            L2CAP_RegisterApp
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000003
                |  Already listed
  05          GAP_Init
              | Stack used (prev) :  00001205 000000C2
              | + function block  :  00000012 00000000
  06            GGS_SetParameter
                | Stack used (prev) :  00000568 00000074
                | + function block  :  0000001C 00000000
                |  Already listed
  06            GAP_SetParamValue
                | Stack used (prev) :  00000A46 00000082
                | + function block  :  00000000 00000002
                |  Already listed
  07              memcpy
                  | Stack used (prev) :  00001205 000000BF
                  | + function block  :  0000000C 00000001
  08                linkDB_Authen
                    | Stack used (prev) :  0000023E 0000006A
                    | + function block  :  00000018 00000000
                    |  Already listed
  08                gattGetServerStatus
                    | Stack used (prev) :  00000261 00000068
                    | + function block  :  00000023 00000000
                    |  Already listed
  09                  attSendMsg
                      | Stack used (prev) :  0000041B 0000006C
                      | + function block  :  00000032 00000000
                      |  Already listed
  08                ATT_HandleValueNoti
                    | Stack used (prev) :  00001205 000000BF
                    | + function block  :  0000000C 00000000
  07              GATT_Notification
                  | Stack used (prev) :  00001211 000000BF
                  | + function block  :  0000001A 00000000
  07              GAPRole_GetParameter
                  | Stack used (prev) :  0000023E 0000006A
                  | + function block  :  0000001C 00000000
                  |  Already listed
  07              osal_memcpy
                  | Stack used (prev) :  000000F9 00000028
                  | + function block  :  0000001C 00000001
                  |  Already listed
  06            SimpleProfile_SetParameter
                | Stack used (prev) :  0000122B 000000BF
                | + function block  :  00000052 00000001
  06            SimpleProfile_RegisterAppCBs
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            GAPRole_SetParameter
                | Stack used (prev) :  00000A46 00000084
                | + function block  :  00000024 00000000
                |  Already listed
  06            osal_set_event
                | Stack used (prev) :  000000F9 00000028
                | + function block  :  00000017 00000000
                |  Already listed
  05          SimpleBLEPeripheral_Init
              | Stack used (prev) :  0000127D 000000BF
              | + function block  :  00000040 00000002
  06            GAP_RegisterForHCIMsgs
                | Stack used (prev) :  00001205 000000BF
                | + function block  :  00000000 00000002
  06            osal_snv_read
                | Stack used (prev) :  000005A1 00000073
                | + function block  :  0000001C 00000000
                |  Already listed
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          GAPRole_Init
              | Stack used (prev) :  00001205 000000C1
              | + function block  :  0000001C 00000000
  06            osal_memset
                | Stack used (prev) :  0000022C 0000006A
                | + function block  :  0000001E 00000000
                |  Already listed
  05          osal_CbTimerInit
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000009 00000000
  05          Hal_Init
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000000 00000002
  06            gapBondMgrReadBonds
                | Stack used (prev) :  000005E3 0000007C
                | + function block  :  0000003E 00000000
                |  Already listed
  05          GAPBondMgr_Init
              | Stack used (prev) :  00001205 000000BF
              | + function block  :  00000009 00000000
  05          osal_mem_alloc
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001B 00000000
              |  Already listed
  05          osal_memset
              | Stack used (prev) :  0000022C 0000006A
              | + function block  :  0000001E 00000000
              |  Already listed
  04        osalInitTasks
            | Stack used (prev) :  000012BD 000000C5
            | + function block  :  00000012 00000000
  04        osal_pwrmgr_init
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000002
  05          osal_mem_free
              | Stack used (prev) :  000000F9 00000028
              | + function block  :  00000015 00000000
              |  Already listed
  05          osal_mem_alloc
              | Stack used (prev) :  0000001C 00000004
              | + function block  :  0000001B 00000000
              |  Already listed
  04        osal_mem_kick
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  0000000C 00000000
  04        osal_mem_init
            | Stack used (prev) :  00001205 000000BF
            | + function block  :  00000000 00000002
  03      osal_init_system
          | Stack used (prev) :  000012CF 000000C5
          | + function block  :  00000000 00000004
  02    main
        | Stack used (prev) :  000012CF 000000CB
        | + function block  :  00000000 00000000
  01  ?call_main
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  __program_start
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  memcpy::?relay
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  memset::?relay
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  strcat::?relay
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  strcpy::?relay
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB


  ->Sub-tree of type: Function tree
                             XSTACK   ISTACK
    | Stack used (prev) :  000012CF 000000CB
  01  strlen::?relay
      | Stack used (prev) :  000012CF 000000CB
      | + function block  :  00000000 00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000012CF 000000CB




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 0000014C          C7   rel    0
BIT_ID               CODE               0000014D                     dse    0
BDATA_ID             CODE               0000014D                     dse    0
DATA_ID              CODE          0000014D - 0000014D           1   rel    0
PDATA_ID             CODE               0000014E                     dse    0
IDATA_ID             CODE               0000014E                     dse    0
IXDATA_ID            CODE               0000014E                     dse    0
XDATA_ID             CODE          0000014E - 00000397         24A   rel    0
BANK_RELAYS          CODE          00000398 - 000012D9         F42   rel    0
RCODE                CODE          000012DA - 000019B6         6DD   rel    0
DIFUNCT              CODE               000019B7                     dse    0
CODE_N               CODE               000019B7                     dse    0
NEAR_CODE            CODE          000019B8 - 000026C6         D0F   rel    2
<BANKED_CODE,CODE_C> 1
                     CODE          000026C8 - 00007FF3        592C   rel    2
SLEEP_CODE           CODE          00007FF8 - 00007FFF           8   rel    0
<BANKED_CODE,XDATA_ROM_C_FLASH> 1
                     CODE          00008000 - 0000FFF8        7FF9   rel    2
<BANKED_CODE> 1      CODE          00010000 - 00017FF4        7FF5   rel    0
<BANKED_CODE> 2      CODE          00018000 - 0001C475        4476   rel    0
BLENV_ADDRESS_SPACE
                     CODE          0003E800 - 0003F7FF        1000   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 00000017          10   rel    0
PSP                  DATA               00000018                     dse    0
XSP                  DATA          00000018 - 00000019           2   rel    0
DATA_I               DATA          0000001A - 0000001A           1   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
DATA_Z               DATA          00000021 - 00000028           8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 0000008D           8 
                     DATA          00000090 - 00000091           2 
                     DATA          00000094 - 00000097           4 
                     DATA          0000009A - 000000A9          10 
                     DATA          000000AB - 000000AF           5 
                     DATA          000000B3 - 000000B4           2 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000C7          10 
                     DATA          000000D1 - 000000D7           7 
                     DATA          000000D9 - 000000DB           3 
                     DATA          000000E1 - 000000E5           5 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F2           2 
                     DATA          000000F2 - 000000F5           4 
                     DATA          000000F7 - 000000FF           9 
XSTACK               XDATA         00000001 - 00000280         280   rel    0
XDATA_Z              XDATA         00000281 - 00000C12         992   rel    0
XDATA_I              XDATA         00000C13 - 00000E5C         24A   rel    0
<XDATA_N> 1          XDATA         00000E5D - 00001A5E         C02   rel    0
<XDATA_ROM_C> 1      CONST         00008000 - 0000877B         77C   rel    2
IDATA_I              IDATA              00000029                     dse    0
IDATA_Z              IDATA         00000029 - 0000002A           2   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 119 902 bytes of CODE  memory
      35 bytes of DATA  memory (+ 87 absolute )
   6 750 bytes of XDATA memory
     194 bytes of IDATA memory
       8 bits  of BIT   memory
   1 916 bytes of CONST memory

Errors: none
Warnings: 1

